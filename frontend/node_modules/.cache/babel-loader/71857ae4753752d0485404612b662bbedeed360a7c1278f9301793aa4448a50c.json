{"ast":null,"code":"import { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { formatUnit } from '@syncfusion/ej2-base';\nimport { columnWidthChanged, preventFrozenScrollRefresh } from '../base/constant';\nimport { Column } from '../models/column';\nimport { parentsUntil, ispercentageWidth, getScrollBarWidth } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * ColumnWidthService\n *\n * @hidden\n */\nvar ColumnWidthService = /** @class */function () {\n  function ColumnWidthService(parent) {\n    this.parent = parent;\n  }\n  ColumnWidthService.prototype.setWidthToColumns = function () {\n    var i = 0;\n    var indexes = this.parent.getColumnIndexesInView();\n    var wFlag = true;\n    var totalColumnsWidth = 0;\n    if (this.parent.allowGrouping) {\n      for (var len = this.parent.groupSettings.columns.length; i < len; i++) {\n        if (this.parent.enableColumnVirtualization && indexes.indexOf(i) === -1) {\n          wFlag = false;\n          continue;\n        }\n        this.setColumnWidth(new Column({\n          width: '30px'\n        }), i);\n      }\n    }\n    if (this.parent.detailTemplate || this.parent.childGrid) {\n      this.setColumnWidth(new Column({\n        width: '30px'\n      }), i);\n      i++;\n    }\n    if (this.parent.isRowDragable() && this.parent.getFrozenMode() !== 'Right') {\n      this.setColumnWidth(new Column({\n        width: '30px'\n      }), i);\n      i++;\n    }\n    var columns = this.parent.getColumns();\n    for (var j = 0; j < columns.length; j++) {\n      this.setColumnWidth(columns[parseInt(j.toString(), 10)], wFlag && this.parent.enableColumnVirtualization ? undefined : j + i);\n    }\n    if (this.parent.isRowDragable() && this.parent.getFrozenMode() === 'Right') {\n      this.setColumnWidth(new Column({\n        width: '30px'\n      }), this.parent.groupSettings.columns.length + columns.length);\n    }\n    totalColumnsWidth = this.getTableWidth(this.parent.getColumns());\n    if (totalColumnsWidth !== 'auto') {\n      if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1) {\n        this.setMinwidthBycalculation(totalColumnsWidth);\n      }\n      var maxWidthColumns = columns.filter(function (a) {\n        return !isNullOrUndefined(a.maxWidth);\n      });\n      var header = this.parent.getHeaderTable();\n      var content = this.parent.getContentTable();\n      if (this.parent.allowResizing && this.parent.element.getBoundingClientRect().width > totalColumnsWidth && maxWidthColumns.length === columns.length && header && content) {\n        addClass([header, content], ['e-tableborder']);\n      }\n    }\n  };\n  ColumnWidthService.prototype.setMinwidthBycalculation = function (tWidth) {\n    var _this = this;\n    var difference = 0;\n    var collection = this.parent.getColumns().filter(function (a) {\n      if (_this.parent.allowResizing) {\n        return (isNullOrUndefined(a.width) || a.width === 'auto') && isNullOrUndefined(a.maxWidth);\n      } else {\n        return isNullOrUndefined(a.width) || a.width === 'auto';\n      }\n    });\n    if (collection.length) {\n      if (!isNullOrUndefined(this.parent.width) && this.parent.width !== 'auto' && typeof this.parent.width === 'string' && this.parent.width.indexOf('%') === -1) {\n        difference = parseInt(this.parent.width, 10) - tWidth;\n      } else {\n        difference = this.parent.element.getBoundingClientRect().width - tWidth;\n      }\n      var tmWidth = 0;\n      for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n        var cols = collection_1[_i];\n        tmWidth += !isNullOrUndefined(cols.minWidth) ? typeof cols.minWidth === 'string' ? parseInt(cols.minWidth, 10) : cols.minWidth : 0;\n      }\n      for (var i = 0; i < collection.length; i++) {\n        if (tWidth === 0 && this.parent.allowResizing && this.isWidthUndefined() && i !== collection.length - 1) {\n          this.setUndefinedColumnWidth(collection);\n        }\n        var index = this.parent.getColumnIndexByField(collection[parseInt(i.toString(), 10)].field) + this.parent.getIndentCount();\n        if (tWidth !== 0 && difference < tmWidth) {\n          this.setWidth(collection[parseInt(i.toString(), 10)].minWidth, index);\n        } else if (tWidth !== 0 && difference > tmWidth) {\n          this.setWidth('', index, true);\n        }\n      }\n    }\n  };\n  ColumnWidthService.prototype.setUndefinedColumnWidth = function (collection) {\n    for (var k = 0; k < collection.length; k++) {\n      if (k !== collection.length - 1) {\n        collection[parseInt(k.toString(), 10)].width = 200;\n        this.setWidth(200, this.parent.getColumnIndexByField(collection[parseInt(k.toString(), 10)].field));\n      }\n    }\n  };\n  ColumnWidthService.prototype.setColumnWidth = function (column, index, module) {\n    if (this.parent.getColumns().length < 1) {\n      return;\n    }\n    var columnIndex = isNullOrUndefined(index) ? this.parent.getNormalizedColumnIndex(column.uid) : index;\n    var cWidth = this.getWidth(column);\n    var tgridWidth = this.getTableWidth(this.parent.getColumns());\n    if (cWidth !== null) {\n      this.setWidth(cWidth, columnIndex);\n      if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1 && tgridWidth !== 'auto') {\n        this.setMinwidthBycalculation(tgridWidth);\n      }\n      if (this.parent.allowResizing && (module === 'resize' || this.parent.getFrozenColumns())) {\n        var contentTable = this.parent.getContentTable();\n        this.setWidthToTable(this.parent.getFrozenColumns() && contentTable.style.width.indexOf('px') === -1 && tgridWidth < contentTable.clientWidth);\n      }\n      this.parent.notify(columnWidthChanged, {\n        index: columnIndex,\n        width: cWidth,\n        column: column,\n        module: module\n      });\n    }\n  };\n  ColumnWidthService.prototype.setWidth = function (width, index, clear) {\n    if (this.parent.groupSettings.columns.length > index && ispercentageWidth(this.parent) && !(this.parent.resizeModule && this.parent.resizeModule.resizeProcess)) {\n      var elementWidth = this.parent.element.offsetWidth;\n      width = (30 / elementWidth * 100).toFixed(1) + '%';\n    }\n    var header = this.parent.getHeaderTable();\n    var content = this.parent.getContentTable();\n    var fWidth = formatUnit(width);\n    var headerCol = header.querySelector(literals.colGroup).children[parseInt(index.toString(), 10)];\n    if (headerCol && !clear) {\n      headerCol.style.width = fWidth;\n    } else if (headerCol && clear) {\n      headerCol.style.width = '';\n    }\n    var contentCol = content.querySelector(literals.colGroup).children[parseInt(index.toString(), 10)];\n    if (contentCol && !clear) {\n      contentCol.style.width = fWidth;\n    } else if (contentCol && clear) {\n      contentCol.style.width = '';\n    }\n    if (!this.parent.enableColumnVirtualization && this.parent.isEdit) {\n      var edit = this.parent.element.querySelectorAll('.e-table.e-inline-edit');\n      var editTableCol = [];\n      for (var i = 0; i < edit.length; i++) {\n        if (parentsUntil(edit[parseInt(i.toString(), 10)], 'e-grid').id === this.parent.element.id) {\n          for (var j = 0; j < edit[parseInt(i.toString(), 10)].querySelector('colgroup').children.length; j++) {\n            editTableCol.push(edit[parseInt(i.toString(), 10)].querySelector('colgroup').children[parseInt(j.toString(), 10)]);\n          }\n        }\n      }\n      if (edit.length && editTableCol.length && editTableCol[parseInt(index.toString(), 10)]) {\n        editTableCol[parseInt(index.toString(), 10)].style.width = fWidth;\n      }\n    }\n    if (this.parent.isFrozenGrid() && this.parent.enableColumnVirtualization) {\n      this.refreshFrozenScrollbar();\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  ColumnWidthService.prototype.refreshFrozenScrollbar = function () {\n    var args = {\n      cancel: false\n    };\n    this.parent.notify(preventFrozenScrollRefresh, args);\n    if (args.cancel) {\n      return;\n    }\n    var scrollWidth = getScrollBarWidth();\n    var movableScrollbar = this.parent.element.querySelector('.e-movablescrollbar');\n    var movableWidth = this.parent.getContent().firstElementChild.getBoundingClientRect().width;\n    if (this.parent.enableColumnVirtualization) {\n      var placeHolder = this.parent.getContent().querySelector('.e-virtualtrack');\n      if (placeHolder) {\n        movableWidth = placeHolder.scrollWidth;\n      }\n    }\n    if (this.parent.height !== 'auto') {\n      movableWidth = movableWidth + scrollWidth;\n    }\n    movableScrollbar.firstElementChild.style.width = movableWidth + 'px';\n  };\n  ColumnWidthService.prototype.getSiblingsHeight = function (element) {\n    var previous = this.getHeightFromDirection(element, 'previous');\n    var next = this.getHeightFromDirection(element, 'next');\n    return previous + next;\n  };\n  ColumnWidthService.prototype.getHeightFromDirection = function (element, direction) {\n    var sibling = element[direction + 'ElementSibling'];\n    var result = 0;\n    var classList = [literals.gridHeader, literals.gridFooter, 'e-groupdroparea', 'e-gridpager', 'e-toolbar', 'e-temp-toolbar'];\n    while (sibling) {\n      if (classList.some(function (value) {\n        return sibling.classList.contains(value);\n      })) {\n        result += sibling.offsetHeight;\n      }\n      sibling = sibling[direction + 'ElementSibling'];\n    }\n    return result;\n  };\n  ColumnWidthService.prototype.isWidthUndefined = function () {\n    var isWidUndefCount = this.parent.getColumns().filter(function (col) {\n      return isNullOrUndefined(col.width) && isNullOrUndefined(col.minWidth);\n    }).length;\n    return this.parent.getColumns().length === isWidUndefCount;\n  };\n  ColumnWidthService.prototype.getWidth = function (column) {\n    if (this.parent.allowResizing && isNullOrUndefined(column.width)) {\n      if (isNullOrUndefined(column.minWidth) && isNullOrUndefined(column.maxWidth) && !this.isWidthUndefined()) {\n        column.width = 200;\n      } else if (column.maxWidth) {\n        column.width = column.maxWidth;\n      }\n    }\n    if (!column.width) {\n      return null;\n    }\n    var width = parseInt(column.width.toString(), 10);\n    if (column.minWidth && width < parseInt(column.minWidth.toString(), 10)) {\n      return column.minWidth;\n    } else if (column.maxWidth && width > parseInt(column.maxWidth.toString(), 10)) {\n      return column.maxWidth;\n    } else {\n      return column.width;\n    }\n  };\n  ColumnWidthService.prototype.getTableWidth = function (columns, resetIndentWidth) {\n    var tWidth = 0;\n    var isAutoColumn = false;\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n      if (column.visible !== false) {\n        var cWidth = this.getWidth(column);\n        if (column.width === 'auto' || !column.width) {\n          if (this.parent.allowResizing && !resetIndentWidth) {\n            if (!column.maxWidth) {\n              isAutoColumn = true;\n            }\n          } else {\n            cWidth = 0;\n          }\n        }\n        if (cWidth !== null) {\n          tWidth += parseInt(cWidth.toString(), 10);\n        }\n      }\n    }\n    tWidth = isAutoColumn ? 'auto' : tWidth;\n    return tWidth;\n  };\n  ColumnWidthService.prototype.setWidthToTable = function (isMaxWidth) {\n    var tWidth = formatUnit(this.getTableWidth(this.parent.getColumns()));\n    if (this.parent.detailTemplate || this.parent.childGrid) {\n      this.setColumnWidth(new Column({\n        width: '30px'\n      }));\n    }\n    tWidth = this.isAutoResize() || tWidth === 'auto' || isMaxWidth ? '100%' : tWidth;\n    this.parent.getHeaderTable().style.width = tWidth;\n    this.parent.getContentTable().style.width = tWidth;\n    var edit = this.parent.element.querySelector('.e-table.e-inline-edit');\n    if (edit) {\n      edit.style.width = tWidth;\n    }\n  };\n  ColumnWidthService.prototype.isAutoResize = function () {\n    return this.parent.allowResizing && this.parent.resizeSettings.mode === 'Auto';\n  };\n  return ColumnWidthService;\n}();\nexport { ColumnWidthService };","map":{"version":3,"names":["isNullOrUndefined","addClass","formatUnit","columnWidthChanged","preventFrozenScrollRefresh","Column","parentsUntil","ispercentageWidth","getScrollBarWidth","literals","ColumnWidthService","parent","prototype","setWidthToColumns","i","indexes","getColumnIndexesInView","wFlag","totalColumnsWidth","allowGrouping","len","groupSettings","columns","length","enableColumnVirtualization","indexOf","setColumnWidth","width","detailTemplate","childGrid","isRowDragable","getFrozenMode","getColumns","j","parseInt","toString","undefined","getTableWidth","setMinwidthBycalculation","maxWidthColumns","filter","a","maxWidth","header","getHeaderTable","content","getContentTable","allowResizing","element","getBoundingClientRect","tWidth","_this","difference","collection","tmWidth","_i","collection_1","cols","minWidth","isWidthUndefined","setUndefinedColumnWidth","index","getColumnIndexByField","field","getIndentCount","setWidth","k","column","module","columnIndex","getNormalizedColumnIndex","uid","cWidth","getWidth","tgridWidth","getFrozenColumns","contentTable","setWidthToTable","style","clientWidth","notify","clear","resizeModule","resizeProcess","elementWidth","offsetWidth","toFixed","fWidth","headerCol","querySelector","colGroup","children","contentCol","isEdit","edit","querySelectorAll","editTableCol","id","push","isFrozenGrid","refreshFrozenScrollbar","args","cancel","scrollWidth","movableScrollbar","movableWidth","getContent","firstElementChild","placeHolder","height","getSiblingsHeight","previous","getHeightFromDirection","next","direction","sibling","result","classList","gridHeader","gridFooter","some","value","contains","offsetHeight","isWidUndefCount","col","resetIndentWidth","isAutoColumn","columns_1","visible","isMaxWidth","isAutoResize","resizeSettings","mode"],"sources":["D:/weektable/frontend/node_modules/@syncfusion/ej2-grids/src/grid/services/width-controller.js"],"sourcesContent":["import { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { formatUnit } from '@syncfusion/ej2-base';\nimport { columnWidthChanged, preventFrozenScrollRefresh } from '../base/constant';\nimport { Column } from '../models/column';\nimport { parentsUntil, ispercentageWidth, getScrollBarWidth } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * ColumnWidthService\n *\n * @hidden\n */\nvar ColumnWidthService = /** @class */ (function () {\n    function ColumnWidthService(parent) {\n        this.parent = parent;\n    }\n    ColumnWidthService.prototype.setWidthToColumns = function () {\n        var i = 0;\n        var indexes = this.parent.getColumnIndexesInView();\n        var wFlag = true;\n        var totalColumnsWidth = 0;\n        if (this.parent.allowGrouping) {\n            for (var len = this.parent.groupSettings.columns.length; i < len; i++) {\n                if (this.parent.enableColumnVirtualization && indexes.indexOf(i) === -1) {\n                    wFlag = false;\n                    continue;\n                }\n                this.setColumnWidth(new Column({ width: '30px' }), i);\n            }\n        }\n        if (this.parent.detailTemplate || this.parent.childGrid) {\n            this.setColumnWidth(new Column({ width: '30px' }), i);\n            i++;\n        }\n        if (this.parent.isRowDragable() && this.parent.getFrozenMode() !== 'Right') {\n            this.setColumnWidth(new Column({ width: '30px' }), i);\n            i++;\n        }\n        var columns = this.parent.getColumns();\n        for (var j = 0; j < columns.length; j++) {\n            this.setColumnWidth(columns[parseInt(j.toString(), 10)], wFlag && this.parent.enableColumnVirtualization ? undefined : j + i);\n        }\n        if (this.parent.isRowDragable() && this.parent.getFrozenMode() === 'Right') {\n            this.setColumnWidth(new Column({ width: '30px' }), this.parent.groupSettings.columns.length + columns.length);\n        }\n        totalColumnsWidth = this.getTableWidth(this.parent.getColumns());\n        if (totalColumnsWidth !== 'auto') {\n            if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1) {\n                this.setMinwidthBycalculation(totalColumnsWidth);\n            }\n            var maxWidthColumns = columns.filter(function (a) {\n                return !isNullOrUndefined(a.maxWidth);\n            });\n            var header = this.parent.getHeaderTable();\n            var content = this.parent.getContentTable();\n            if (this.parent.allowResizing && this.parent.element.getBoundingClientRect().width > totalColumnsWidth &&\n                maxWidthColumns.length === columns.length && header && content) {\n                addClass([header, content], ['e-tableborder']);\n            }\n        }\n    };\n    ColumnWidthService.prototype.setMinwidthBycalculation = function (tWidth) {\n        var _this = this;\n        var difference = 0;\n        var collection = this.parent.getColumns().filter(function (a) {\n            if (_this.parent.allowResizing) {\n                return (isNullOrUndefined(a.width) || a.width === 'auto') && isNullOrUndefined(a.maxWidth);\n            }\n            else {\n                return isNullOrUndefined(a.width) || a.width === 'auto';\n            }\n        });\n        if (collection.length) {\n            if (!isNullOrUndefined(this.parent.width) && this.parent.width !== 'auto' &&\n                typeof (this.parent.width) === 'string' && this.parent.width.indexOf('%') === -1) {\n                difference = parseInt(this.parent.width, 10) - tWidth;\n            }\n            else {\n                difference = this.parent.element.getBoundingClientRect().width - tWidth;\n            }\n            var tmWidth = 0;\n            for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n                var cols = collection_1[_i];\n                tmWidth += !isNullOrUndefined(cols.minWidth) ?\n                    ((typeof cols.minWidth === 'string' ? parseInt(cols.minWidth, 10) : cols.minWidth)) : 0;\n            }\n            for (var i = 0; i < collection.length; i++) {\n                if (tWidth === 0 && this.parent.allowResizing && this.isWidthUndefined() && (i !== collection.length - 1)) {\n                    this.setUndefinedColumnWidth(collection);\n                }\n                var index = this.parent.getColumnIndexByField(collection[parseInt(i.toString(), 10)].field) + this.parent.getIndentCount();\n                if (tWidth !== 0 && difference < tmWidth) {\n                    this.setWidth(collection[parseInt(i.toString(), 10)].minWidth, index);\n                }\n                else if (tWidth !== 0 && difference > tmWidth) {\n                    this.setWidth('', index, true);\n                }\n            }\n        }\n    };\n    ColumnWidthService.prototype.setUndefinedColumnWidth = function (collection) {\n        for (var k = 0; k < collection.length; k++) {\n            if (k !== collection.length - 1) {\n                collection[parseInt(k.toString(), 10)].width = 200;\n                this.setWidth(200, this.parent.getColumnIndexByField(collection[parseInt(k.toString(), 10)].field));\n            }\n        }\n    };\n    ColumnWidthService.prototype.setColumnWidth = function (column, index, module) {\n        if (this.parent.getColumns().length < 1) {\n            return;\n        }\n        var columnIndex = isNullOrUndefined(index) ? this.parent.getNormalizedColumnIndex(column.uid) : index;\n        var cWidth = this.getWidth(column);\n        var tgridWidth = this.getTableWidth(this.parent.getColumns());\n        if (cWidth !== null) {\n            this.setWidth(cWidth, columnIndex);\n            if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1 && tgridWidth !== 'auto') {\n                this.setMinwidthBycalculation(tgridWidth);\n            }\n            if (this.parent.allowResizing && (module === 'resize' || this.parent.getFrozenColumns())) {\n                var contentTable = this.parent.getContentTable();\n                this.setWidthToTable(this.parent.getFrozenColumns() && contentTable.style.width.indexOf('px') === -1 && tgridWidth < contentTable.clientWidth);\n            }\n            this.parent.notify(columnWidthChanged, { index: columnIndex, width: cWidth, column: column, module: module });\n        }\n    };\n    ColumnWidthService.prototype.setWidth = function (width, index, clear) {\n        if (this.parent.groupSettings.columns.length > index && ispercentageWidth(this.parent) &&\n            !(this.parent.resizeModule && this.parent.resizeModule.resizeProcess)) {\n            var elementWidth = this.parent.element.offsetWidth;\n            width = (30 / elementWidth * 100).toFixed(1) + '%';\n        }\n        var header = this.parent.getHeaderTable();\n        var content = this.parent.getContentTable();\n        var fWidth = formatUnit(width);\n        var headerCol = header.querySelector(literals.colGroup)\n            .children[parseInt(index.toString(), 10)];\n        if (headerCol && !clear) {\n            headerCol.style.width = fWidth;\n        }\n        else if (headerCol && clear) {\n            headerCol.style.width = '';\n        }\n        var contentCol = content.querySelector(literals.colGroup).children[parseInt(index.toString(), 10)];\n        if (contentCol && !clear) {\n            contentCol.style.width = fWidth;\n        }\n        else if (contentCol && clear) {\n            contentCol.style.width = '';\n        }\n        if (!this.parent.enableColumnVirtualization && this.parent.isEdit) {\n            var edit = this.parent.element.querySelectorAll('.e-table.e-inline-edit');\n            var editTableCol = [];\n            for (var i = 0; i < edit.length; i++) {\n                if (parentsUntil(edit[parseInt(i.toString(), 10)], 'e-grid').id === this.parent.element.id) {\n                    for (var j = 0; j < edit[parseInt(i.toString(), 10)].querySelector('colgroup').children.length; j++) {\n                        editTableCol.push(edit[parseInt(i.toString(), 10)].querySelector('colgroup').children[parseInt(j.toString(), 10)]);\n                    }\n                }\n            }\n            if (edit.length && editTableCol.length && editTableCol[parseInt(index.toString(), 10)]) {\n                editTableCol[parseInt(index.toString(), 10)].style.width = fWidth;\n            }\n        }\n        if (this.parent.isFrozenGrid() && this.parent.enableColumnVirtualization) {\n            this.refreshFrozenScrollbar();\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    ColumnWidthService.prototype.refreshFrozenScrollbar = function () {\n        var args = { cancel: false };\n        this.parent.notify(preventFrozenScrollRefresh, args);\n        if (args.cancel) {\n            return;\n        }\n        var scrollWidth = getScrollBarWidth();\n        var movableScrollbar = this.parent.element.querySelector('.e-movablescrollbar');\n        var movableWidth = this.parent.getContent().firstElementChild.getBoundingClientRect().width;\n        if (this.parent.enableColumnVirtualization) {\n            var placeHolder = this.parent.getContent().querySelector('.e-virtualtrack');\n            if (placeHolder) {\n                movableWidth = placeHolder.scrollWidth;\n            }\n        }\n        if (this.parent.height !== 'auto') {\n            movableWidth = movableWidth + scrollWidth;\n        }\n        movableScrollbar.firstElementChild.style.width = movableWidth + 'px';\n    };\n    ColumnWidthService.prototype.getSiblingsHeight = function (element) {\n        var previous = this.getHeightFromDirection(element, 'previous');\n        var next = this.getHeightFromDirection(element, 'next');\n        return previous + next;\n    };\n    ColumnWidthService.prototype.getHeightFromDirection = function (element, direction) {\n        var sibling = element[direction + 'ElementSibling'];\n        var result = 0;\n        var classList = [literals.gridHeader, literals.gridFooter, 'e-groupdroparea', 'e-gridpager', 'e-toolbar', 'e-temp-toolbar'];\n        while (sibling) {\n            if (classList.some(function (value) { return sibling.classList.contains(value); })) {\n                result += sibling.offsetHeight;\n            }\n            sibling = sibling[direction + 'ElementSibling'];\n        }\n        return result;\n    };\n    ColumnWidthService.prototype.isWidthUndefined = function () {\n        var isWidUndefCount = this.parent.getColumns().filter(function (col) {\n            return isNullOrUndefined(col.width) && isNullOrUndefined(col.minWidth);\n        }).length;\n        return (this.parent.getColumns().length === isWidUndefCount);\n    };\n    ColumnWidthService.prototype.getWidth = function (column) {\n        if (this.parent.allowResizing && isNullOrUndefined(column.width)) {\n            if (isNullOrUndefined(column.minWidth) && isNullOrUndefined(column.maxWidth)\n                && !this.isWidthUndefined()) {\n                column.width = 200;\n            }\n            else if (column.maxWidth) {\n                column.width = column.maxWidth;\n            }\n        }\n        if (!column.width) {\n            return null;\n        }\n        var width = parseInt(column.width.toString(), 10);\n        if (column.minWidth && width < parseInt(column.minWidth.toString(), 10)) {\n            return column.minWidth;\n        }\n        else if (column.maxWidth && width > parseInt(column.maxWidth.toString(), 10)) {\n            return column.maxWidth;\n        }\n        else {\n            return column.width;\n        }\n    };\n    ColumnWidthService.prototype.getTableWidth = function (columns, resetIndentWidth) {\n        var tWidth = 0;\n        var isAutoColumn = false;\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.visible !== false) {\n                var cWidth = this.getWidth(column);\n                if (column.width === 'auto' || !column.width) {\n                    if (this.parent.allowResizing && !resetIndentWidth) {\n                        if (!column.maxWidth) {\n                            isAutoColumn = true;\n                        }\n                    }\n                    else {\n                        cWidth = 0;\n                    }\n                }\n                if (cWidth !== null) {\n                    tWidth += parseInt(cWidth.toString(), 10);\n                }\n            }\n        }\n        tWidth = isAutoColumn ? 'auto' : tWidth;\n        return tWidth;\n    };\n    ColumnWidthService.prototype.setWidthToTable = function (isMaxWidth) {\n        var tWidth = formatUnit(this.getTableWidth(this.parent.getColumns()));\n        if (this.parent.detailTemplate || this.parent.childGrid) {\n            this.setColumnWidth(new Column({ width: '30px' }));\n        }\n        tWidth = (this.isAutoResize() || tWidth === 'auto' || isMaxWidth) ? '100%' : tWidth;\n        this.parent.getHeaderTable().style.width = tWidth;\n        this.parent.getContentTable().style.width = tWidth;\n        var edit = this.parent.element.querySelector('.e-table.e-inline-edit');\n        if (edit) {\n            edit.style.width = tWidth;\n        }\n    };\n    ColumnWidthService.prototype.isAutoResize = function () {\n        return this.parent.allowResizing && this.parent.resizeSettings.mode === 'Auto';\n    };\n    return ColumnWidthService;\n}());\nexport { ColumnWidthService };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}