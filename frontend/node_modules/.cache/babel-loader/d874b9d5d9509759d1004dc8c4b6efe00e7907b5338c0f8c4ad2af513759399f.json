{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Template Engine\n */\nvar LINES = new RegExp('\\\\n|\\\\r|\\\\s\\\\s+', 'g');\nvar QUOTES = new RegExp(/'|\"/g);\nvar IF_STMT = new RegExp('if ?\\\\(');\nvar ELSEIF_STMT = new RegExp('else if ?\\\\(');\nvar ELSE_STMT = new RegExp('else');\nvar FOR_STMT = new RegExp('for ?\\\\(');\nvar IF_OR_FOR = new RegExp('(/if|/for)');\nvar CALL_FUNCTION = new RegExp('\\\\((.*)\\\\)', '');\nvar NOT_NUMBER = new RegExp('^[0-9]+$', 'g');\nvar WORD = new RegExp('[\\\\w\"\\'.\\\\s+]+', 'g');\nvar DBL_QUOTED_STR = new RegExp('\"(.*?)\"', 'g');\nvar WORDIF = new RegExp('[\\\\w\"\\'@#$.\\\\s-+]+', 'g');\nvar exp = new RegExp('\\\\${([^}]*)}', 'g');\n// let cachedTemplate: Object = {};\nvar ARR_OBJ = /^\\..*/gm;\nvar SINGLE_SLASH = /\\\\/gi;\nvar DOUBLE_SLASH = /\\\\\\\\/gi;\nvar WORDFUNC = new RegExp('[\\\\w\"\\'@#$.\\\\s+]+', 'g');\nvar WINDOWFUNC = /\\window\\./gm;\n/**\n * The function to set regular expression for template expression string.\n *\n * @param {RegExp} value - Value expression.\n * @returns {RegExp} ?\n * @private\n */\nexport function expression(value) {\n  if (value) {\n    exp = value;\n  }\n  return exp;\n}\n// /**\n//  * To render the template string from the given data.\n//  * @param  {string} template - String Template.\n//  * @param  {Object[]|JSON} data - DataSource for the template.\n//  * @param  {Object} helper? - custom helper object.\n//  */\n// export function template(template: string, data: JSON, helper?: Object): string {\n//     let hash: string = hashCode(template);\n//     let tmpl: Function;\n//     if (!cachedTemplate[hash]) {\n//         tmpl = cachedTemplate[hash] = compile(template, helper);\n//     } else {\n//         tmpl = cachedTemplate[hash];\n//     }\n//     return tmpl(data);\n// }\n/**\n * Compile the template string into template function.\n *\n * @param {string | Function} template - The template string which is going to convert.\n * @param {Object} helper - Helper functions as an object.\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n * @private\n */\nexport function compile(template, helper, ignorePrefix) {\n  if (typeof template === 'function') {\n    return template;\n  } else {\n    var argName = 'data';\n    var evalExpResult = evalExp(template, argName, helper, ignorePrefix);\n    var condtion = \"var valueRegEx = (/value=\\\\'([A-Za-z0-9 _]*)((.)([\\\\w)(!-;?-\\u25A0\\\\s]+)['])/g);\\n        var hrefRegex = (/(?:href)([\\\\s='\\\"./]+)([\\\\w-./?=&\\\\\\\\#\\\"]+)((.)([\\\\w)(!-;/?-\\u25A0\\\\s]+)['])/g);\\n        if(str.match(valueRegEx)){\\n            var check = str.match(valueRegEx);\\n            var str1 = str;\\n            for (var i=0; i < check.length; i++) {\\n                var check1 = str.match(valueRegEx)[i].split('value=')[1];\\n                var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\\n                change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\\n                str1 = str1.replace(check1, change);\\n            }\\n            str = str.replace(str, str1);\\n        }\\n        else if (str.match(/(?:href='')/) === null) {\\n            if(str.match(hrefRegex)) {\\n                var check = str.match(hrefRegex);\\n                var str1 = str;\\n                for (var i=0; i < check.length; i++) {\\n                    var check1 = str.match(hrefRegex)[i].split('href=')[1];\\n                    if (check1) {\\n                        var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\\n                        change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\\n                        str1 = str1.replace(check1, change);\\n                    }\\n                }\\n                str = str.replace(str, str1);\\n            }\\n        }\\n        \";\n    var fnCode = 'var str=\"' + evalExpResult + '\";' + condtion + ' return str;';\n    var fn = new Function(argName, fnCode);\n    return fn.bind(helper);\n  }\n}\n/** function used to evaluate the function expression\n *\n * @param {string} str ?\n * @param {string} nameSpace ?\n * @param {Object} helper ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction evalExp(str, nameSpace, helper, ignorePrefix) {\n  var varCOunt = 0;\n  /**\n   * Variable containing Local Keys\n   */\n  var localKeys = [];\n  var isClass = str.match(/class=\"([^\"]+|)\\s{2}/g);\n  var singleSpace = '';\n  if (isClass) {\n    isClass.forEach(function (value) {\n      singleSpace = value.replace(/\\s\\s+/g, ' ');\n      str = str.replace(value, singleSpace);\n    });\n  }\n  if (exp.test(str)) {\n    var insideBraces = false;\n    var outputString = '';\n    for (var i = 0; i < str.length; i++) {\n      if (str[i + ''] === '$' && str[i + 1] === '{') {\n        insideBraces = true;\n      } else if (str[i + ''] === '}') {\n        insideBraces = false;\n      }\n      outputString += str[i + ''] === '\"' && !insideBraces ? '\\\\\"' : str[i + ''];\n    }\n    str = outputString;\n  } else {\n    str = str.replace(/\\\\?\"/g, '\\\\\"');\n  }\n  return str.replace(LINES, '').replace(DBL_QUOTED_STR, '\\'$1\\'').replace(exp, function (match, cnt, offset, matchStr) {\n    var SPECIAL_CHAR = /@|#|\\$/gm;\n    var matches = cnt.match(CALL_FUNCTION);\n    // matches to detect any function calls\n    if (matches) {\n      var rlStr = matches[1];\n      if (ELSEIF_STMT.test(cnt)) {\n        //handling else-if condition\n        cnt = '\";} ' + cnt.replace(matches[1], rlStr.replace(WORD, function (str) {\n          str = str.trim();\n          return addNameSpace(str, !QUOTES.test(str) && localKeys.indexOf(str) === -1, nameSpace, localKeys, ignorePrefix);\n        })) + '{ \\n str = str + \"';\n      } else if (IF_STMT.test(cnt)) {\n        //handling if condition\n        cnt = '\"; ' + cnt.replace(matches[1], rlStr.replace(WORDIF, function (strs) {\n          return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n        })) + '{ \\n str = str + \"';\n      } else if (FOR_STMT.test(cnt)) {\n        //handling for condition\n        var rlStr_1 = matches[1].split(' of ');\n        // replace for each into actual JavaScript\n        cnt = '\"; ' + cnt.replace(matches[1], function (mtc) {\n          localKeys.push(rlStr_1[0]);\n          localKeys.push(rlStr_1[0] + 'Index');\n          varCOunt = varCOunt + 1;\n          return 'var i' + varCOunt + '=0; i' + varCOunt + ' < ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys, ignorePrefix) + '.length; i' + varCOunt + '++';\n        }) + '{ \\n ' + rlStr_1[0] + '= ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys, ignorePrefix) + '[i' + varCOunt + ']; \\n var ' + rlStr_1[0] + 'Index=i' + varCOunt + '; \\n str = str + \"';\n      } else {\n        //helper function handling\n        var fnStr = cnt.split('(');\n        var fNameSpace = helper && Object.prototype.hasOwnProperty.call(helper, fnStr[0]) ? 'this.' : 'global';\n        fNameSpace = /\\./.test(fnStr[0]) ? '' : fNameSpace;\n        var ftArray = matches[1].split(',');\n        if (matches[1].length !== 0 && !/data/.test(ftArray[0]) && !/window./.test(ftArray[0])) {\n          matches[1] = fNameSpace === 'global' ? nameSpace + '.' + matches[1] : matches[1];\n        }\n        var splRegexp = /@|\\$|#/gm;\n        var arrObj = /\\]\\./gm;\n        if (WINDOWFUNC.test(cnt) && arrObj.test(cnt) || splRegexp.test(cnt)) {\n          var splArrRegexp = /@|\\$|#|\\]\\./gm;\n          if (splArrRegexp.test(cnt)) {\n            cnt = '\"+ ' + (fNameSpace === 'global' ? '' : fNameSpace) + cnt.replace(matches[1], rlStr.replace(WORDFUNC, function (strs) {\n              return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n            })) + '+ \"';\n          }\n        } else {\n          cnt = '\" + ' + (fNameSpace === 'global' ? '' : fNameSpace) + cnt.replace(rlStr, addNameSpace(matches[1].replace(/,( |)data.|,/gi, ',' + nameSpace + '.').replace(/,( |)data.window/gi, ',window'), fNameSpace === 'global' ? false : true, nameSpace, localKeys, ignorePrefix)) + '+\"';\n        }\n      }\n    } else if (ELSE_STMT.test(cnt)) {\n      // handling else condition\n      cnt = '\"; ' + cnt.replace(ELSE_STMT, '} else { \\n str = str + \"');\n    } else if (cnt.match(IF_OR_FOR)) {\n      // close condition\n      cnt = cnt.replace(IF_OR_FOR, '\"; \\n } \\n str = str + \"');\n    } else if (SPECIAL_CHAR.test(cnt)) {\n      // template string with double slash with special character\n      if (cnt.match(SINGLE_SLASH)) {\n        cnt = SlashReplace(cnt);\n      }\n      cnt = '\"+' + NameSpaceForspecialChar(cnt, localKeys.indexOf(cnt) === -1, nameSpace, localKeys) + '\"]+\"';\n    } else {\n      // template string with double slash\n      if (cnt.match(SINGLE_SLASH)) {\n        cnt = SlashReplace(cnt);\n        cnt = '\"+' + NameSpaceForspecialChar(cnt, localKeys.indexOf(cnt) === -1, nameSpace, localKeys) + '\"]+\"';\n      } else {\n        // evaluate normal expression\n        cnt = cnt !== '' ? '\"+' + addNameSpace(cnt.replace(/,/gi, '+' + nameSpace + '.'), localKeys.indexOf(cnt) === -1, nameSpace, localKeys, ignorePrefix) + '+\"' : '${}';\n      }\n    }\n    return cnt;\n  });\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction addNameSpace(str, addNS, nameSpace, ignoreList, ignorePrefix) {\n  return addNS && !NOT_NUMBER.test(str) && ignoreList.indexOf(str.split('.')[0]) === -1 && !ignorePrefix && str !== 'true' && str !== 'false' ? nameSpace + '.' + str : str;\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\nfunction NameSpaceArrObj(str, addNS, nameSpace, ignoreList) {\n  var arrObjReg = /^\\..*/gm;\n  return addNS && !NOT_NUMBER.test(str) && ignoreList.indexOf(str.split('.')[0]) === -1 && !arrObjReg.test(str) ? nameSpace + '.' + str : str;\n}\n// // Create hashCode for template string to storeCached function\n// function hashCode(str: string): string {\n//     return str.split('').reduce((a: number, b: string) => { a = ((a << 5) - a) + b.charCodeAt(0); return a & a; }, 0).toString();\n// }\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\nfunction NameSpaceForspecialChar(str, addNS, nameSpace, ignoreList) {\n  return addNS && !NOT_NUMBER.test(str) && ignoreList.indexOf(str.split('.')[0]) === -1 ? nameSpace + '[\"' + str : str;\n}\n/**\n * Replace double slashes to single slash.\n *\n * @param {string} tempStr ?\n * @returns {any} ?\n */\nfunction SlashReplace(tempStr) {\n  var double = '\\\\\\\\';\n  if (tempStr.match(DOUBLE_SLASH)) {\n    return tempStr;\n  } else {\n    return tempStr.replace(SINGLE_SLASH, double);\n  }\n}\n/**\n *\n * @param {string} str ?\n * @param {string} nameSpaceNew ?\n * @param {string[]} keys ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction HandleSpecialCharArrObj(str, nameSpaceNew, keys, ignorePrefix) {\n  str = str.trim();\n  var windowFunc = /\\window\\./gm;\n  if (!windowFunc.test(str)) {\n    var quotes = /'|\"/gm;\n    var splRegexp = /@|\\$|#/gm;\n    if (splRegexp.test(str)) {\n      str = NameSpaceForspecialChar(str, keys.indexOf(str) === -1, nameSpaceNew, keys) + '\"]';\n    }\n    if (ARR_OBJ.test(str)) {\n      return NameSpaceArrObj(str, !quotes.test(str) && keys.indexOf(str) === -1, nameSpaceNew, keys);\n    } else {\n      return addNameSpace(str, !quotes.test(str) && keys.indexOf(str) === -1, nameSpaceNew, keys, ignorePrefix);\n    }\n  } else {\n    return str;\n  }\n}","map":{"version":3,"names":["LINES","RegExp","QUOTES","IF_STMT","ELSEIF_STMT","ELSE_STMT","FOR_STMT","IF_OR_FOR","CALL_FUNCTION","NOT_NUMBER","WORD","DBL_QUOTED_STR","WORDIF","exp","ARR_OBJ","SINGLE_SLASH","DOUBLE_SLASH","WORDFUNC","WINDOWFUNC","expression","value","compile","template","helper","ignorePrefix","argName","evalExpResult","evalExp","condtion","fnCode","fn","Function","bind","str","nameSpace","varCOunt","localKeys","isClass","match","singleSpace","forEach","replace","test","insideBraces","outputString","i","length","cnt","offset","matchStr","SPECIAL_CHAR","matches","rlStr","trim","addNameSpace","indexOf","strs","HandleSpecialCharArrObj","rlStr_1","split","mtc","push","fnStr","fNameSpace","Object","prototype","hasOwnProperty","call","ftArray","splRegexp","arrObj","splArrRegexp","SlashReplace","NameSpaceForspecialChar","addNS","ignoreList","NameSpaceArrObj","arrObjReg","tempStr","double","nameSpaceNew","keys","windowFunc","quotes"],"sources":["D:/weektable/frontend/node_modules/@syncfusion/ej2-base/src/template.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Template Engine\n */\nvar LINES = new RegExp('\\\\n|\\\\r|\\\\s\\\\s+', 'g');\nvar QUOTES = new RegExp(/'|\"/g);\nvar IF_STMT = new RegExp('if ?\\\\(');\nvar ELSEIF_STMT = new RegExp('else if ?\\\\(');\nvar ELSE_STMT = new RegExp('else');\nvar FOR_STMT = new RegExp('for ?\\\\(');\nvar IF_OR_FOR = new RegExp('(/if|/for)');\nvar CALL_FUNCTION = new RegExp('\\\\((.*)\\\\)', '');\nvar NOT_NUMBER = new RegExp('^[0-9]+$', 'g');\nvar WORD = new RegExp('[\\\\w\"\\'.\\\\s+]+', 'g');\nvar DBL_QUOTED_STR = new RegExp('\"(.*?)\"', 'g');\nvar WORDIF = new RegExp('[\\\\w\"\\'@#$.\\\\s-+]+', 'g');\nvar exp = new RegExp('\\\\${([^}]*)}', 'g');\n// let cachedTemplate: Object = {};\nvar ARR_OBJ = /^\\..*/gm;\nvar SINGLE_SLASH = /\\\\/gi;\nvar DOUBLE_SLASH = /\\\\\\\\/gi;\nvar WORDFUNC = new RegExp('[\\\\w\"\\'@#$.\\\\s+]+', 'g');\nvar WINDOWFUNC = /\\window\\./gm;\n/**\n * The function to set regular expression for template expression string.\n *\n * @param {RegExp} value - Value expression.\n * @returns {RegExp} ?\n * @private\n */\nexport function expression(value) {\n    if (value) {\n        exp = value;\n    }\n    return exp;\n}\n// /**\n//  * To render the template string from the given data.\n//  * @param  {string} template - String Template.\n//  * @param  {Object[]|JSON} data - DataSource for the template.\n//  * @param  {Object} helper? - custom helper object.\n//  */\n// export function template(template: string, data: JSON, helper?: Object): string {\n//     let hash: string = hashCode(template);\n//     let tmpl: Function;\n//     if (!cachedTemplate[hash]) {\n//         tmpl = cachedTemplate[hash] = compile(template, helper);\n//     } else {\n//         tmpl = cachedTemplate[hash];\n//     }\n//     return tmpl(data);\n// }\n/**\n * Compile the template string into template function.\n *\n * @param {string | Function} template - The template string which is going to convert.\n * @param {Object} helper - Helper functions as an object.\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n * @private\n */\nexport function compile(template, helper, ignorePrefix) {\n    if (typeof template === 'function') {\n        return template;\n    }\n    else {\n        var argName = 'data';\n        var evalExpResult = evalExp(template, argName, helper, ignorePrefix);\n        var condtion = \"var valueRegEx = (/value=\\\\'([A-Za-z0-9 _]*)((.)([\\\\w)(!-;?-\\u25A0\\\\s]+)['])/g);\\n        var hrefRegex = (/(?:href)([\\\\s='\\\"./]+)([\\\\w-./?=&\\\\\\\\#\\\"]+)((.)([\\\\w)(!-;/?-\\u25A0\\\\s]+)['])/g);\\n        if(str.match(valueRegEx)){\\n            var check = str.match(valueRegEx);\\n            var str1 = str;\\n            for (var i=0; i < check.length; i++) {\\n                var check1 = str.match(valueRegEx)[i].split('value=')[1];\\n                var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\\n                change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\\n                str1 = str1.replace(check1, change);\\n            }\\n            str = str.replace(str, str1);\\n        }\\n        else if (str.match(/(?:href='')/) === null) {\\n            if(str.match(hrefRegex)) {\\n                var check = str.match(hrefRegex);\\n                var str1 = str;\\n                for (var i=0; i < check.length; i++) {\\n                    var check1 = str.match(hrefRegex)[i].split('href=')[1];\\n                    if (check1) {\\n                        var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\\n                        change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\\n                        str1 = str1.replace(check1, change);\\n                    }\\n                }\\n                str = str.replace(str, str1);\\n            }\\n        }\\n        \";\n        var fnCode = 'var str=\"' + evalExpResult + '\";' + condtion + ' return str;';\n        var fn = new Function(argName, fnCode);\n        return fn.bind(helper);\n    }\n}\n/** function used to evaluate the function expression\n *\n * @param {string} str ?\n * @param {string} nameSpace ?\n * @param {Object} helper ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction evalExp(str, nameSpace, helper, ignorePrefix) {\n    var varCOunt = 0;\n    /**\n     * Variable containing Local Keys\n     */\n    var localKeys = [];\n    var isClass = str.match(/class=\"([^\"]+|)\\s{2}/g);\n    var singleSpace = '';\n    if (isClass) {\n        isClass.forEach(function (value) {\n            singleSpace = value.replace(/\\s\\s+/g, ' ');\n            str = str.replace(value, singleSpace);\n        });\n    }\n    if (exp.test(str)) {\n        var insideBraces = false;\n        var outputString = '';\n        for (var i = 0; i < str.length; i++) {\n            if (str[i + ''] === '$' && str[i + 1] === '{') {\n                insideBraces = true;\n            }\n            else if (str[i + ''] === '}') {\n                insideBraces = false;\n            }\n            outputString += (str[i + ''] === '\"' && !insideBraces) ? '\\\\\"' : str[i + ''];\n        }\n        str = outputString;\n    }\n    else {\n        str = str.replace(/\\\\?\"/g, '\\\\\"');\n    }\n    return str.replace(LINES, '').replace(DBL_QUOTED_STR, '\\'$1\\'').replace(exp, function (match, cnt, offset, matchStr) {\n        var SPECIAL_CHAR = /@|#|\\$/gm;\n        var matches = cnt.match(CALL_FUNCTION);\n        // matches to detect any function calls\n        if (matches) {\n            var rlStr = matches[1];\n            if (ELSEIF_STMT.test(cnt)) {\n                //handling else-if condition\n                cnt = '\";} ' + cnt.replace(matches[1], rlStr.replace(WORD, function (str) {\n                    str = str.trim();\n                    return addNameSpace(str, !(QUOTES.test(str)) && (localKeys.indexOf(str) === -1), nameSpace, localKeys, ignorePrefix);\n                })) + '{ \\n str = str + \"';\n            }\n            else if (IF_STMT.test(cnt)) {\n                //handling if condition\n                cnt = '\"; ' + cnt.replace(matches[1], rlStr.replace(WORDIF, function (strs) {\n                    return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n                })) + '{ \\n str = str + \"';\n            }\n            else if (FOR_STMT.test(cnt)) {\n                //handling for condition\n                var rlStr_1 = matches[1].split(' of ');\n                // replace for each into actual JavaScript\n                cnt = '\"; ' + cnt.replace(matches[1], function (mtc) {\n                    localKeys.push(rlStr_1[0]);\n                    localKeys.push(rlStr_1[0] + 'Index');\n                    varCOunt = varCOunt + 1;\n                    return 'var i' + varCOunt + '=0; i' + varCOunt + ' < ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys, ignorePrefix) + '.length; i' + varCOunt + '++';\n                }) + '{ \\n ' + rlStr_1[0] + '= ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys, ignorePrefix)\n                    + '[i' + varCOunt + ']; \\n var ' + rlStr_1[0] + 'Index=i' + varCOunt + '; \\n str = str + \"';\n            }\n            else {\n                //helper function handling\n                var fnStr = cnt.split('(');\n                var fNameSpace = (helper && Object.prototype.hasOwnProperty.call(helper, fnStr[0]) ? 'this.' : 'global');\n                fNameSpace = (/\\./.test(fnStr[0]) ? '' : fNameSpace);\n                var ftArray = matches[1].split(',');\n                if (matches[1].length !== 0 && !(/data/).test(ftArray[0]) && !(/window./).test(ftArray[0])) {\n                    matches[1] = (fNameSpace === 'global' ? nameSpace + '.' + matches[1] : matches[1]);\n                }\n                var splRegexp = /@|\\$|#/gm;\n                var arrObj = /\\]\\./gm;\n                if (WINDOWFUNC.test(cnt) && arrObj.test(cnt) || splRegexp.test(cnt)) {\n                    var splArrRegexp = /@|\\$|#|\\]\\./gm;\n                    if (splArrRegexp.test(cnt)) {\n                        cnt = '\"+ ' + (fNameSpace === 'global' ? '' : fNameSpace) + cnt.replace(matches[1], rlStr.replace(WORDFUNC, function (strs) {\n                            return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n                        })) + '+ \"';\n                    }\n                }\n                else {\n                    cnt = '\" + ' + (fNameSpace === 'global' ? '' : fNameSpace) +\n                        cnt.replace(rlStr, addNameSpace(matches[1].replace(/,( |)data.|,/gi, ',' + nameSpace + '.').replace(/,( |)data.window/gi, ',window'), (fNameSpace === 'global' ? false : true), nameSpace, localKeys, ignorePrefix)) +\n                        '+\"';\n                }\n            }\n        }\n        else if (ELSE_STMT.test(cnt)) {\n            // handling else condition\n            cnt = '\"; ' + cnt.replace(ELSE_STMT, '} else { \\n str = str + \"');\n        }\n        else if (cnt.match(IF_OR_FOR)) {\n            // close condition\n            cnt = cnt.replace(IF_OR_FOR, '\"; \\n } \\n str = str + \"');\n        }\n        else if (SPECIAL_CHAR.test(cnt)) {\n            // template string with double slash with special character\n            if (cnt.match(SINGLE_SLASH)) {\n                cnt = SlashReplace(cnt);\n            }\n            cnt = '\"+' + NameSpaceForspecialChar(cnt, (localKeys.indexOf(cnt) === -1), nameSpace, localKeys) + '\"]+\"';\n        }\n        else {\n            // template string with double slash\n            if (cnt.match(SINGLE_SLASH)) {\n                cnt = SlashReplace(cnt);\n                cnt = '\"+' + NameSpaceForspecialChar(cnt, (localKeys.indexOf(cnt) === -1), nameSpace, localKeys) + '\"]+\"';\n            }\n            else {\n                // evaluate normal expression\n                cnt = cnt !== '' ? '\"+' + addNameSpace(cnt.replace(/,/gi, '+' + nameSpace + '.'), (localKeys.indexOf(cnt) === -1), nameSpace, localKeys, ignorePrefix) + '+\"' : '${}';\n            }\n        }\n        return cnt;\n    });\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction addNameSpace(str, addNS, nameSpace, ignoreList, ignorePrefix) {\n    return ((addNS && !(NOT_NUMBER.test(str)) && ignoreList.indexOf(str.split('.')[0]) === -1 && !ignorePrefix && str !== 'true' && str !== 'false') ? nameSpace + '.' + str : str);\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\nfunction NameSpaceArrObj(str, addNS, nameSpace, ignoreList) {\n    var arrObjReg = /^\\..*/gm;\n    return ((addNS && !(NOT_NUMBER.test(str)) &&\n        ignoreList.indexOf(str.split('.')[0]) === -1 && !(arrObjReg.test(str))) ? nameSpace + '.' + str : str);\n}\n// // Create hashCode for template string to storeCached function\n// function hashCode(str: string): string {\n//     return str.split('').reduce((a: number, b: string) => { a = ((a << 5) - a) + b.charCodeAt(0); return a & a; }, 0).toString();\n// }\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\nfunction NameSpaceForspecialChar(str, addNS, nameSpace, ignoreList) {\n    return ((addNS && !(NOT_NUMBER.test(str)) && ignoreList.indexOf(str.split('.')[0]) === -1) ? nameSpace + '[\"' + str : str);\n}\n/**\n * Replace double slashes to single slash.\n *\n * @param {string} tempStr ?\n * @returns {any} ?\n */\nfunction SlashReplace(tempStr) {\n    var double = '\\\\\\\\';\n    if (tempStr.match(DOUBLE_SLASH)) {\n        return tempStr;\n    }\n    else {\n        return tempStr.replace(SINGLE_SLASH, double);\n    }\n}\n/**\n *\n * @param {string} str ?\n * @param {string} nameSpaceNew ?\n * @param {string[]} keys ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction HandleSpecialCharArrObj(str, nameSpaceNew, keys, ignorePrefix) {\n    str = str.trim();\n    var windowFunc = /\\window\\./gm;\n    if (!windowFunc.test(str)) {\n        var quotes = /'|\"/gm;\n        var splRegexp = /@|\\$|#/gm;\n        if (splRegexp.test(str)) {\n            str = NameSpaceForspecialChar(str, (keys.indexOf(str) === -1), nameSpaceNew, keys) + '\"]';\n        }\n        if (ARR_OBJ.test(str)) {\n            return NameSpaceArrObj(str, !(quotes.test(str)) && (keys.indexOf(str) === -1), nameSpaceNew, keys);\n        }\n        else {\n            return addNameSpace(str, !(quotes.test(str)) && (keys.indexOf(str) === -1), nameSpaceNew, keys, ignorePrefix);\n        }\n    }\n    else {\n        return str;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}