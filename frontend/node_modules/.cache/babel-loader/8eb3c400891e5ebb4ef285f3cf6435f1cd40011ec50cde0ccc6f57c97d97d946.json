{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { extend } from '@syncfusion/ej2-base';\nimport { isEditable, addRemoveActiveClasses, createEditElement, getObject } from '../base/util';\nimport * as literals from '../base/string-literals';\nimport { EditCellBase } from './edit-cell-base';\n/**\n * `BooleanEditCell` is used to handle boolean cell type editing.\n *\n * @hidden\n */\nvar BooleanEditCell = /** @class */function (_super) {\n  __extends(BooleanEditCell, _super);\n  function BooleanEditCell() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.activeClasses = ['e-selectionbackground', 'e-active'];\n    return _this;\n  }\n  BooleanEditCell.prototype.create = function (args) {\n    var col = args.column;\n    var classNames = 'e-field e-boolcell';\n    if (col.type === 'checkbox') {\n      classNames = 'e-field e-boolcell e-edit-checkselect';\n    }\n    this.removeEventHandler = this.removeEventListener;\n    return createEditElement(this.parent, args.column, classNames, {\n      type: 'checkbox',\n      value: args.value\n    });\n  };\n  BooleanEditCell.prototype.read = function (element) {\n    return element.checked;\n  };\n  BooleanEditCell.prototype.write = function (args) {\n    var selectChkBox;\n    var chkState;\n    if (!isNullOrUndefined(args.row)) {\n      selectChkBox = args.row.querySelector('.e-edit-checkselect');\n    }\n    if (getObject(args.column.field, args.rowData)) {\n      chkState = JSON.parse(getObject(args.column.field, args.rowData).toString().toLowerCase());\n    }\n    if (!isNullOrUndefined(selectChkBox) && args.column.type === 'checkbox') {\n      this.editType = this.parent.editSettings.mode;\n      this.editRow = args.row;\n      if (args.requestType !== 'add') {\n        var row = this.parent.getRowObjectFromUID(args.row.getAttribute('data-uid'));\n        chkState = row ? row.isSelected : false;\n      }\n      addRemoveActiveClasses.apply(void 0, [[].slice.call(args.row.getElementsByClassName(literals.rowCell)), chkState].concat(this.activeClasses));\n    }\n    this.obj = new CheckBox(extend({\n      label: this.parent.editSettings.mode !== 'Dialog' ? ' ' : args.column.headerText,\n      checked: chkState,\n      disabled: !isEditable(args.column, args.requestType, args.element),\n      enableRtl: this.parent.enableRtl,\n      cssClass: this.parent.cssClass ? this.parent.cssClass : ''\n    }, args.column.edit.params));\n    this.addEventListener();\n    this.obj.appendTo(args.element);\n  };\n  BooleanEditCell.prototype.addEventListener = function () {\n    this.cbChange = this.checkBoxChange.bind(this);\n    this.obj.addEventListener(literals.change, this.cbChange);\n  };\n  BooleanEditCell.prototype.removeEventListener = function () {\n    if (this.obj.isDestroyed) {\n      return;\n    }\n    this.obj.removeEventListener(literals.change, this.cbChange);\n  };\n  BooleanEditCell.prototype.checkBoxChange = function (args) {\n    if (this.editRow && this.editType !== 'Dialog') {\n      var add = false;\n      if (!args.checked) {\n        this.editRow.removeAttribute('aria-selected');\n      } else {\n        add = true;\n        this.editRow.setAttribute('aria-selected', add.toString());\n      }\n      addRemoveActiveClasses.apply(void 0, [[].slice.call(this.editRow.getElementsByClassName(literals.rowCell)), add].concat(this.activeClasses));\n    }\n  };\n  return BooleanEditCell;\n}(EditCellBase);\nexport { BooleanEditCell };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","isNullOrUndefined","CheckBox","extend","isEditable","addRemoveActiveClasses","createEditElement","getObject","literals","EditCellBase","BooleanEditCell","_super","_this","apply","arguments","activeClasses","args","col","column","classNames","type","removeEventHandler","removeEventListener","parent","value","read","element","checked","write","selectChkBox","chkState","row","querySelector","field","rowData","JSON","parse","toString","toLowerCase","editType","editSettings","mode","editRow","requestType","getRowObjectFromUID","getAttribute","isSelected","slice","call","getElementsByClassName","rowCell","concat","obj","label","headerText","disabled","enableRtl","cssClass","edit","params","addEventListener","appendTo","cbChange","checkBoxChange","bind","change","isDestroyed","add","removeAttribute","setAttribute"],"sources":["D:/weektable/frontend/node_modules/@syncfusion/ej2-grids/src/grid/renderer/boolean-edit-cell.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { extend } from '@syncfusion/ej2-base';\nimport { isEditable, addRemoveActiveClasses, createEditElement, getObject } from '../base/util';\nimport * as literals from '../base/string-literals';\nimport { EditCellBase } from './edit-cell-base';\n/**\n * `BooleanEditCell` is used to handle boolean cell type editing.\n *\n * @hidden\n */\nvar BooleanEditCell = /** @class */ (function (_super) {\n    __extends(BooleanEditCell, _super);\n    function BooleanEditCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.activeClasses = ['e-selectionbackground', 'e-active'];\n        return _this;\n    }\n    BooleanEditCell.prototype.create = function (args) {\n        var col = args.column;\n        var classNames = 'e-field e-boolcell';\n        if (col.type === 'checkbox') {\n            classNames = 'e-field e-boolcell e-edit-checkselect';\n        }\n        this.removeEventHandler = this.removeEventListener;\n        return createEditElement(this.parent, args.column, classNames, { type: 'checkbox', value: args.value });\n    };\n    BooleanEditCell.prototype.read = function (element) {\n        return element.checked;\n    };\n    BooleanEditCell.prototype.write = function (args) {\n        var selectChkBox;\n        var chkState;\n        if (!isNullOrUndefined(args.row)) {\n            selectChkBox = args.row.querySelector('.e-edit-checkselect');\n        }\n        if (getObject(args.column.field, args.rowData)) {\n            chkState = JSON.parse(getObject(args.column.field, args.rowData).toString().toLowerCase());\n        }\n        if (!isNullOrUndefined(selectChkBox) && args.column.type === 'checkbox') {\n            this.editType = this.parent.editSettings.mode;\n            this.editRow = args.row;\n            if (args.requestType !== 'add') {\n                var row = this.parent.getRowObjectFromUID(args.row.getAttribute('data-uid'));\n                chkState = row ? row.isSelected : false;\n            }\n            addRemoveActiveClasses.apply(void 0, [[].slice.call(args.row.getElementsByClassName(literals.rowCell)), chkState].concat(this.activeClasses));\n        }\n        this.obj = new CheckBox(extend({\n            label: this.parent.editSettings.mode !== 'Dialog' ? ' ' : args.column.headerText,\n            checked: chkState,\n            disabled: !isEditable(args.column, args.requestType, args.element), enableRtl: this.parent.enableRtl,\n            cssClass: this.parent.cssClass ? this.parent.cssClass : ''\n        }, args.column.edit.params));\n        this.addEventListener();\n        this.obj.appendTo(args.element);\n    };\n    BooleanEditCell.prototype.addEventListener = function () {\n        this.cbChange = this.checkBoxChange.bind(this);\n        this.obj.addEventListener(literals.change, this.cbChange);\n    };\n    BooleanEditCell.prototype.removeEventListener = function () {\n        if (this.obj.isDestroyed) {\n            return;\n        }\n        this.obj.removeEventListener(literals.change, this.cbChange);\n    };\n    BooleanEditCell.prototype.checkBoxChange = function (args) {\n        if (this.editRow && this.editType !== 'Dialog') {\n            var add = false;\n            if (!args.checked) {\n                this.editRow.removeAttribute('aria-selected');\n            }\n            else {\n                add = true;\n                this.editRow.setAttribute('aria-selected', add.toString());\n            }\n            addRemoveActiveClasses.apply(void 0, [[].slice.call(this.editRow.getElementsByClassName(literals.rowCell)), add].concat(this.activeClasses));\n        }\n    };\n    return BooleanEditCell;\n}(EditCellBase));\nexport { BooleanEditCell };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}