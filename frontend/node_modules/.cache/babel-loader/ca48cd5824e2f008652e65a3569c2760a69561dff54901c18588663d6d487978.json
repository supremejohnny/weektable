{"ast":null,"code":"import { Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getRowIndexFromElement, isGroupAdaptive, checkIsVirtual, getVisiblePage } from '../base/util';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport * as events from '../base/constant';\nimport * as literals from '../base/string-literals';\n/**\n * Content module is used to render grid content\n */\nvar VirtualRowModelGenerator = /** @class */function () {\n  function VirtualRowModelGenerator(parent) {\n    this.cOffsets = {};\n    this.cache = {};\n    this.rowCache = {};\n    this.data = {};\n    this.groups = {};\n    this.currentInfo = {};\n    this.prevInfo = {};\n    this.parent = parent;\n    this.model = this.parent.pageSettings;\n    this.rowModelGenerator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n  }\n  VirtualRowModelGenerator.prototype.columnInfiniteRows = function (data, e) {\n    var result = [];\n    if (e.requestType === 'virtualscroll') {\n      var rows = this.parent.getRowsObject();\n      // eslint-disable-next-line prefer-spread\n      result.push.apply(result, this.rowModelGenerator.refreshRows(rows));\n      if (this.parent.infiniteScrollSettings.enableCache) {\n        var currentRowStartIndex = this.parent.frozenRows && this.parent.pageSettings.currentPage === 1 ? 0 : getRowIndexFromElement(this.parent.getContentTable().querySelector('.e-row:not(.e-addedrow)'));\n        var newResult = result.slice(currentRowStartIndex, currentRowStartIndex + this.parent.pageSettings.pageSize * 3);\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage !== 1) {\n          newResult = result.slice(0, this.parent.frozenRows).concat(newResult);\n        }\n        result = newResult;\n      }\n    } else {\n      // eslint-disable-next-line prefer-spread\n      result.push.apply(result, this.rowModelGenerator.generateRows(data, e));\n    }\n    return result;\n  };\n  VirtualRowModelGenerator.prototype.generateRows = function (data, e) {\n    var _this = this;\n    if (this.parent.enableColumnVirtualization && this.parent.enableInfiniteScrolling) {\n      return this.columnInfiniteRows(data, e);\n    }\n    var isManualRefresh = false;\n    var info = e.virtualInfo = e.virtualInfo || (e.requestType === 'sorting' || e.requestType === 'delete') && checkIsVirtual(this.parent) && this.prevInfo || this.getData();\n    this.prevInfo = info;\n    var xAxis = info.sentinelInfo && info.sentinelInfo.axis === 'X';\n    var page = !xAxis && info.loadNext && !info.loadSelf ? info.nextInfo.page : info.page;\n    var result = [];\n    var indexes = this.getBlockIndexes(page);\n    var loadedBlocks = [];\n    if (this.currentInfo.blockIndexes) {\n      indexes = info.blockIndexes = e.virtualInfo.blockIndexes = this.includePrevPage ? this.currentInfo.blockIndexes.slice(1) : this.currentInfo.blockIndexes.slice(0, this.currentInfo.blockIndexes.length - 1);\n      isManualRefresh = true;\n    }\n    this.checkAndResetCache(e.requestType);\n    if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n      var dataRows = this.parent.vcRows.filter(function (row) {\n        return row.isDataRow;\n      });\n      if (this.parent.isManualRefresh && dataRows.length === data['records'].length || !this.parent.isManualRefresh) {\n        return result = this.parent.vcRows;\n      }\n    }\n    if (this.parent.enableColumnVirtualization) {\n      for (var i = 0; i < info.blockIndexes.length; i++) {\n        if (this.isBlockAvailable(info.blockIndexes[parseInt(i.toString(), 10)])) {\n          this.cache[info.blockIndexes[parseInt(i.toString(), 10)]] = this.rowModelGenerator.refreshRows(this.cache[info.blockIndexes[parseInt(i.toString(), 10)]]);\n        }\n      }\n    }\n    var values = info.blockIndexes;\n    var _loop_1 = function (i) {\n      if (!this_1.isBlockAvailable(values[parseInt(i.toString(), 10)])) {\n        var startIdx = !isNullOrUndefined(this_1.startIndex) ? this_1.startIndex : this_1.getStartIndex(values[parseInt(i.toString(), 10)], data);\n        startIdx = isGroupAdaptive(this_1.parent) && !this_1.parent.vcRows.length && (e.requestType === 'sorting' || e.requestType === 'delete') ? 0 : startIdx;\n        var rows = this_1.rowModelGenerator.generateRows(data, {\n          virtualInfo: info,\n          startIndex: startIdx\n        });\n        if (isGroupAdaptive(this_1.parent) && !this_1.parent.vcRows.length) {\n          this_1.recordsCount = data.records.length;\n          this_1.parent.vRows = rows;\n          this_1.parent.vcRows = rows;\n          this_1.parent.notify(events.refreshVirtualMaxPage, {});\n        }\n        var median = void 0;\n        if (isGroupAdaptive(this_1.parent)) {\n          this_1.getGroupVirtualRecordsByIndex(rows);\n        } else {\n          if (isManualRefresh) {\n            this_1.setBlockForManualRefresh(this_1.cache, indexes, rows);\n          } else if ((e.requestType === 'sorting' || e.requestType === 'delete') && checkIsVirtual(this_1.parent)) {\n            var visiblePage = getVisiblePage(info.blockIndexes);\n            var prevEndIndex = 0;\n            for (var i_1 = 0; i_1 < visiblePage.length; i_1++) {\n              var indexes_1 = this_1.getBlockIndexes(visiblePage[parseInt(i_1.toString(), 10)]);\n              var startIndex = this_1.model.pageSize * i_1;\n              var endIndex = startIndex + this_1.model.pageSize;\n              if (this_1.parent.allowGrouping && this_1.parent.groupSettings.columns.length) {\n                var dataRowObject = rows.filter(function (row) {\n                  return row.isDataRow;\n                }).slice(startIndex, endIndex);\n                startIndex = prevEndIndex;\n                endIndex = rows.indexOf(dataRowObject[dataRowObject.length - 1]) + 1;\n              }\n              var pageRecord = rows.slice(startIndex, endIndex);\n              var median_1 = ~~Math.max(pageRecord.length, this_1.model.pageSize) / 2;\n              if (!this_1.isBlockAvailable(indexes_1[0])) {\n                this_1.cache[indexes_1[0]] = pageRecord.slice(0, median_1);\n              }\n              if (!this_1.isBlockAvailable(indexes_1[1])) {\n                this_1.cache[indexes_1[1]] = pageRecord.slice(median_1);\n              }\n              prevEndIndex = endIndex;\n            }\n          } else {\n            median = ~~Math.max(rows.length, this_1.model.pageSize) / 2;\n            if (!this_1.isBlockAvailable(indexes[0])) {\n              this_1.cache[indexes[0]] = rows.slice(0, median);\n            }\n            if (!this_1.isBlockAvailable(indexes[1])) {\n              this_1.cache[indexes[1]] = rows.slice(median);\n            }\n          }\n        }\n      }\n      if (this_1.parent.groupSettings.columns.length && !xAxis && this_1.cache[values[parseInt(i.toString(), 10)]] && !this_1.parent.groupSettings.enableLazyLoading) {\n        this_1.cache[values[parseInt(i.toString(), 10)]] = this_1.updateGroupRow(this_1.cache[values[parseInt(i.toString(), 10)]], values[parseInt(i.toString(), 10)]);\n      }\n      if (!e.renderMovableContent && !e.renderFrozenRightContent && this_1.cache[values[parseInt(i.toString(), 10)]]) {\n        // eslint-disable-next-line prefer-spread\n        result.push.apply(result, this_1.cache[values[parseInt(i.toString(), 10)]]);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var DataRecord_1 = [];\n        if (this_1.parent.enableVirtualization && this_1.parent.groupSettings.columns.length) {\n          result.forEach(function (data) {\n            if (!DataRecord_1.includes(data)) {\n              DataRecord_1.push(data);\n            }\n          });\n        }\n        result = DataRecord_1.length ? DataRecord_1 : result;\n      }\n      if (this_1.isBlockAvailable(values[parseInt(i.toString(), 10)])) {\n        loadedBlocks.push(values[parseInt(i.toString(), 10)]);\n      }\n    };\n    var this_1 = this;\n    for (var i = 0; i < values.length; i++) {\n      _loop_1(i);\n    }\n    if (isGroupAdaptive(this.parent) && this.parent.vcRows.length && e.requestType === 'sorting' && e.scrollTop.top !== 0) {\n      return result = this.parent.vcRows;\n    }\n    info.blockIndexes = loadedBlocks;\n    var grouping = 'records';\n    if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n      this.parent.currentViewData[\"\" + grouping] = result.map(function (m) {\n        return m.data;\n      });\n    } else {\n      this.parent.currentViewData = result.map(function (m) {\n        return m.data;\n      });\n    }\n    if (e.requestType === 'grouping') {\n      this.parent.currentViewData[\"\" + grouping] = this.parent.currentViewData[\"\" + grouping].filter(function (item, index) {\n        return _this.parent.currentViewData[\"\" + grouping].indexOf(item) === index;\n      });\n    }\n    if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n      if (['save', 'delete'].some(function (value) {\n        return e.requestType === value;\n      })) {\n        return result = this.parent.vcRows;\n      }\n    }\n    return result;\n  };\n  VirtualRowModelGenerator.prototype.setBlockForManualRefresh = function (cache, blocks, rows) {\n    var size = this.model.pageSize / 2;\n    if (this.includePrevPage) {\n      cache[blocks[0] - 1] = rows.slice(0, size);\n      cache[blocks[0]] = rows.slice(size, size * 2);\n      cache[blocks[1]] = rows.slice(size * 2, size * 3);\n      cache[blocks[2]] = rows.slice(size * 3, size * 4);\n    } else {\n      cache[blocks[0]] = rows.slice(0, size);\n      cache[blocks[1]] = rows.slice(size, size * 2);\n      cache[blocks[2]] = rows.slice(size * 2, size * 3);\n      cache[blocks[2] + 1] = rows.slice(size * 3, size * 4);\n    }\n  };\n  VirtualRowModelGenerator.prototype.getBlockIndexes = function (page) {\n    return [page + (page - 1), page * 2];\n  };\n  VirtualRowModelGenerator.prototype.getPage = function (block) {\n    return block % 2 === 0 ? block / 2 : (block + 1) / 2;\n  };\n  VirtualRowModelGenerator.prototype.isBlockAvailable = function (value) {\n    return value in this.cache;\n  };\n  VirtualRowModelGenerator.prototype.getData = function () {\n    return {\n      page: this.model.currentPage,\n      blockIndexes: this.getBlockIndexes(this.model.currentPage),\n      direction: 'down',\n      columnIndexes: this.parent.getColumnIndexesInView()\n    };\n  };\n  VirtualRowModelGenerator.prototype.getStartIndex = function (blk, data, full) {\n    if (full === void 0) {\n      full = true;\n    }\n    var page = this.getPage(blk);\n    var even = blk % 2 === 0;\n    var index = (page - 1) * this.model.pageSize;\n    return full || !even ? index : index + ~~(this.model.pageSize / 2);\n  };\n  VirtualRowModelGenerator.prototype.getColumnIndexes = function (content) {\n    var _this = this;\n    if (content === void 0) {\n      content = this.parent.getHeaderContent().querySelector('.' + literals.headerContent);\n    }\n    var indexes = [];\n    var sLeft = content.scrollLeft | 0;\n    var keys = Object.keys(this.cOffsets);\n    var cWidth = content.getBoundingClientRect().width;\n    sLeft = Math.min(this.cOffsets[keys.length - 1] - cWidth, sLeft);\n    var calWidth = Browser.isDevice ? 2 * cWidth : cWidth / 2;\n    var left = sLeft + cWidth + (sLeft === 0 ? calWidth : 0);\n    var frzLeftWidth = 0;\n    var diffWidth = sLeft - calWidth;\n    if (this.parent.isFrozenGrid()) {\n      frzLeftWidth = this.parent.leftrightColumnWidth('left');\n      if (diffWidth > 0) {\n        for (var i = this.parent.getVisibleFrozenLeftCount() - 1; i >= 0; i--) {\n          if (diffWidth <= this.cOffsets[parseInt(i.toString(), 10)]) {\n            frzLeftWidth = frzLeftWidth - this.cOffsets[parseInt(i.toString(), 10)];\n            break;\n          }\n        }\n      }\n      if (this.parent.getFrozenMode() === literals.leftRight) {\n        var rightCol = this.parent.getVisibleFrozenRightCount();\n        keys.splice(keys.length - 1 - rightCol, rightCol);\n      }\n    }\n    var frozenLeftCount = this.parent.getVisibleFrozenLeftCount();\n    keys.some(function (offset) {\n      var iOffset = Number(offset);\n      var offsetVal = _this.cOffsets[\"\" + offset];\n      var border = diffWidth < 0 && iOffset < frozenLeftCount || diffWidth + frzLeftWidth <= offsetVal && left + calWidth >= offsetVal;\n      if (border) {\n        indexes.push(iOffset);\n      }\n      return left + calWidth < offsetVal;\n    });\n    return indexes;\n  };\n  VirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n    var actions = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder', 'save', 'delete'];\n    var clear = actions.some(function (value) {\n      return action === value;\n    });\n    if (clear) {\n      this.cache = {};\n      this.data = {};\n      this.groups = {};\n    }\n    return clear;\n  };\n  VirtualRowModelGenerator.prototype.refreshColOffsets = function () {\n    var _this = this;\n    var col = 0;\n    this.cOffsets = {};\n    var gLen = this.parent.groupSettings.columns.length;\n    var cols = this.parent.getVisibleColumns();\n    var cLen = cols.length;\n    var isVisible = function (column) {\n      return column.visible && (!_this.parent.groupSettings.showGroupedColumn ? _this.parent.groupSettings.columns.indexOf(column.field) < 0 : column.visible);\n    };\n    var c = this.parent.groupSettings.columns;\n    for (var i = 0; i < c.length; i++) {\n      this.cOffsets[parseInt(i.toString(), 10)] = (this.cOffsets[i - 1] | 0) + 30;\n    }\n    // eslint-disable-next-line prefer-spread\n    var blocks = Array.apply(null, Array(cLen)).map(function () {\n      return col++;\n    });\n    for (var j = 0; j < blocks.length; j++) {\n      blocks[parseInt(j.toString(), 10)] = blocks[parseInt(j.toString(), 10)] + gLen;\n      this.cOffsets[blocks[parseInt(j.toString(), 10)]] = (this.cOffsets[blocks[parseInt(j.toString(), 10)] - 1] | 0) + (isVisible(cols[parseInt(j.toString(), 10)]) ? parseInt(cols[parseInt(j.toString(), 10)].width, 10) : 0);\n    }\n  };\n  VirtualRowModelGenerator.prototype.updateGroupRow = function (current, block) {\n    var currentFirst = current[0];\n    var rows = [];\n    var keys = Object.keys(this.cache);\n    for (var i = 0; i < keys.length; i++) {\n      if (Number(keys[parseInt(i.toString(), 10)]) < block) {\n        rows = rows.concat(this.cache[keys[parseInt(i.toString(), 10)]]);\n      }\n    }\n    if (currentFirst && currentFirst.isDataRow || block % 2 === 0) {\n      return current;\n    }\n    return this.iterateGroup(current, rows);\n  };\n  VirtualRowModelGenerator.prototype.iterateGroup = function (current, rows) {\n    var currentFirst = current[0];\n    var offset = 0;\n    if (currentFirst && currentFirst.isDataRow) {\n      return current;\n    }\n    var isPresent = current.some(function (row) {\n      return rows.some(function (oRow, index) {\n        var res = oRow && oRow.data.field !== undefined && oRow.data.field === row.data.field && oRow.data.key === row.data.key;\n        if (res) {\n          offset = index;\n        }\n        return res;\n      });\n    });\n    if (isPresent) {\n      current.shift();\n      current = this.iterateGroup(current, rows.slice(offset));\n    }\n    return current;\n  };\n  VirtualRowModelGenerator.prototype.getRows = function () {\n    var rows = [];\n    var keys = Object.keys(this.cache);\n    for (var i = 0; i < keys.length; i++) {\n      rows = rows.concat(this.cache[keys[parseInt(i.toString(), 10)]]);\n    }\n    return rows;\n  };\n  VirtualRowModelGenerator.prototype.generateCells = function (foreignKeyData) {\n    var cells = [];\n    var cols = this.parent.columnModel;\n    for (var i = 0; i < cols.length; i++) {\n      cells.push(this.rowModelGenerator.generateCell(cols[parseInt(i.toString(), 10)], null, null, null, null, foreignKeyData));\n    }\n    return cells;\n  };\n  VirtualRowModelGenerator.prototype.getGroupVirtualRecordsByIndex = function (rows) {\n    var blocks = this.parent.contentModule.getGroupedTotalBlocks();\n    var blockSize = this.parent.contentModule.getBlockSize();\n    if (Object.keys(this.cache).length === 0) {\n      var countGroupRow = 0;\n      for (var i = 1; i <= blocks; i++) {\n        var count = 0;\n        this.cache[parseInt(i.toString(), 10)] = [];\n        for (var j = (i - 1) * blockSize + countGroupRow; j < rows.length; j++) {\n          if (count === blockSize) {\n            break;\n          }\n          this.cache[parseInt(i.toString(), 10)].push(rows[parseInt(j.toString(), 10)]);\n          if (rows[parseInt(j.toString(), 10)].isDataRow) {\n            count++;\n          }\n          countGroupRow++;\n        }\n        countGroupRow -= count;\n      }\n    }\n  };\n  return VirtualRowModelGenerator;\n}();\nexport { VirtualRowModelGenerator };","map":{"version":3,"names":["Browser","isNullOrUndefined","getRowIndexFromElement","isGroupAdaptive","checkIsVirtual","getVisiblePage","RowModelGenerator","GroupModelGenerator","events","literals","VirtualRowModelGenerator","parent","cOffsets","cache","rowCache","data","groups","currentInfo","prevInfo","model","pageSettings","rowModelGenerator","allowGrouping","prototype","columnInfiniteRows","e","result","requestType","rows","getRowsObject","push","apply","refreshRows","infiniteScrollSettings","enableCache","currentRowStartIndex","frozenRows","currentPage","getContentTable","querySelector","newResult","slice","pageSize","concat","generateRows","_this","enableColumnVirtualization","enableInfiniteScrolling","isManualRefresh","info","virtualInfo","getData","xAxis","sentinelInfo","axis","page","loadNext","loadSelf","nextInfo","indexes","getBlockIndexes","loadedBlocks","blockIndexes","includePrevPage","length","checkAndResetCache","vcRows","dataRows","filter","row","isDataRow","i","isBlockAvailable","parseInt","toString","values","_loop_1","this_1","startIdx","startIndex","getStartIndex","recordsCount","records","vRows","notify","refreshVirtualMaxPage","median","getGroupVirtualRecordsByIndex","setBlockForManualRefresh","visiblePage","prevEndIndex","i_1","indexes_1","endIndex","groupSettings","columns","dataRowObject","indexOf","pageRecord","median_1","Math","max","enableLazyLoading","updateGroupRow","renderMovableContent","renderFrozenRightContent","DataRecord_1","enableVirtualization","forEach","includes","scrollTop","top","grouping","currentViewData","map","m","item","index","some","value","blocks","size","getPage","block","direction","columnIndexes","getColumnIndexesInView","blk","full","even","getColumnIndexes","content","getHeaderContent","headerContent","sLeft","scrollLeft","keys","Object","cWidth","getBoundingClientRect","width","min","calWidth","isDevice","left","frzLeftWidth","diffWidth","isFrozenGrid","leftrightColumnWidth","getVisibleFrozenLeftCount","getFrozenMode","leftRight","rightCol","getVisibleFrozenRightCount","splice","frozenLeftCount","offset","iOffset","Number","offsetVal","border","action","actions","clear","refreshColOffsets","col","gLen","cols","getVisibleColumns","cLen","isVisible","column","visible","showGroupedColumn","field","c","Array","j","current","currentFirst","iterateGroup","isPresent","oRow","res","undefined","key","shift","getRows","generateCells","foreignKeyData","cells","columnModel","generateCell","contentModule","getGroupedTotalBlocks","blockSize","getBlockSize","countGroupRow","count"],"sources":["D:/weektable/frontend/node_modules/@syncfusion/ej2-grids/src/grid/services/virtual-row-model-generator.js"],"sourcesContent":["import { Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getRowIndexFromElement, isGroupAdaptive, checkIsVirtual, getVisiblePage } from '../base/util';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport * as events from '../base/constant';\nimport * as literals from '../base/string-literals';\n/**\n * Content module is used to render grid content\n */\nvar VirtualRowModelGenerator = /** @class */ (function () {\n    function VirtualRowModelGenerator(parent) {\n        this.cOffsets = {};\n        this.cache = {};\n        this.rowCache = {};\n        this.data = {};\n        this.groups = {};\n        this.currentInfo = {};\n        this.prevInfo = {};\n        this.parent = parent;\n        this.model = this.parent.pageSettings;\n        this.rowModelGenerator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n    }\n    VirtualRowModelGenerator.prototype.columnInfiniteRows = function (data, e) {\n        var result = [];\n        if (e.requestType === 'virtualscroll') {\n            var rows = this.parent.getRowsObject();\n            // eslint-disable-next-line prefer-spread\n            result.push.apply(result, this.rowModelGenerator.refreshRows(rows));\n            if (this.parent.infiniteScrollSettings.enableCache) {\n                var currentRowStartIndex = this.parent.frozenRows && this.parent.pageSettings.currentPage === 1 ? 0\n                    : getRowIndexFromElement(this.parent.getContentTable().querySelector('.e-row:not(.e-addedrow)'));\n                var newResult = result\n                    .slice(currentRowStartIndex, currentRowStartIndex + (this.parent.pageSettings.pageSize * 3));\n                if (this.parent.frozenRows && this.parent.pageSettings.currentPage !== 1) {\n                    newResult = result.slice(0, this.parent.frozenRows).concat(newResult);\n                }\n                result = newResult;\n            }\n        }\n        else {\n            // eslint-disable-next-line prefer-spread\n            result.push.apply(result, this.rowModelGenerator.generateRows(data, e));\n        }\n        return result;\n    };\n    VirtualRowModelGenerator.prototype.generateRows = function (data, e) {\n        var _this = this;\n        if (this.parent.enableColumnVirtualization && this.parent.enableInfiniteScrolling) {\n            return this.columnInfiniteRows(data, e);\n        }\n        var isManualRefresh = false;\n        var info = e.virtualInfo = e.virtualInfo\n            || ((e.requestType === 'sorting' || e.requestType === 'delete') && checkIsVirtual(this.parent) && this.prevInfo)\n            || this.getData();\n        this.prevInfo = info;\n        var xAxis = info.sentinelInfo && info.sentinelInfo.axis === 'X';\n        var page = !xAxis && info.loadNext && !info.loadSelf ? info.nextInfo.page : info.page;\n        var result = [];\n        var indexes = this.getBlockIndexes(page);\n        var loadedBlocks = [];\n        if (this.currentInfo.blockIndexes) {\n            indexes = info.blockIndexes = e.virtualInfo.blockIndexes = this.includePrevPage ? this.currentInfo.blockIndexes.slice(1)\n                : this.currentInfo.blockIndexes.slice(0, this.currentInfo.blockIndexes.length - 1);\n            isManualRefresh = true;\n        }\n        this.checkAndResetCache(e.requestType);\n        if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n            var dataRows = this.parent.vcRows.filter(function (row) { return row.isDataRow; });\n            if ((this.parent.isManualRefresh && dataRows.length === data['records'].length) || !this.parent.isManualRefresh) {\n                return result = this.parent.vcRows;\n            }\n        }\n        if (this.parent.enableColumnVirtualization) {\n            for (var i = 0; i < info.blockIndexes.length; i++) {\n                if (this.isBlockAvailable(info.blockIndexes[parseInt(i.toString(), 10)])) {\n                    this.cache[info.blockIndexes[parseInt(i.toString(), 10)]] =\n                        this.rowModelGenerator.refreshRows(this.cache[info.blockIndexes[parseInt(i.toString(), 10)]]);\n                }\n            }\n        }\n        var values = info.blockIndexes;\n        var _loop_1 = function (i) {\n            if (!this_1.isBlockAvailable(values[parseInt(i.toString(), 10)])) {\n                var startIdx = !isNullOrUndefined(this_1.startIndex) ? this_1.startIndex :\n                    this_1.getStartIndex(values[parseInt(i.toString(), 10)], data);\n                startIdx = isGroupAdaptive(this_1.parent) && !this_1.parent.vcRows.length && (e.requestType === 'sorting'\n                    || e.requestType === 'delete') ? 0 : startIdx;\n                var rows = this_1.rowModelGenerator.generateRows(data, {\n                    virtualInfo: info, startIndex: startIdx\n                });\n                if (isGroupAdaptive(this_1.parent) && !this_1.parent.vcRows.length) {\n                    this_1.recordsCount = data.records.length;\n                    this_1.parent.vRows = rows;\n                    this_1.parent.vcRows = rows;\n                    this_1.parent.notify(events.refreshVirtualMaxPage, {});\n                }\n                var median = void 0;\n                if (isGroupAdaptive(this_1.parent)) {\n                    this_1.getGroupVirtualRecordsByIndex(rows);\n                }\n                else {\n                    if (isManualRefresh) {\n                        this_1.setBlockForManualRefresh(this_1.cache, indexes, rows);\n                    }\n                    else if ((e.requestType === 'sorting' || e.requestType === 'delete') && checkIsVirtual(this_1.parent)) {\n                        var visiblePage = getVisiblePage(info.blockIndexes);\n                        var prevEndIndex = 0;\n                        for (var i_1 = 0; i_1 < visiblePage.length; i_1++) {\n                            var indexes_1 = this_1.getBlockIndexes(visiblePage[parseInt(i_1.toString(), 10)]);\n                            var startIndex = this_1.model.pageSize * i_1;\n                            var endIndex = startIndex + this_1.model.pageSize;\n                            if (this_1.parent.allowGrouping && this_1.parent.groupSettings.columns.length) {\n                                var dataRowObject = rows.filter(function (row) { return row.isDataRow; })\n                                    .slice(startIndex, endIndex);\n                                startIndex = prevEndIndex;\n                                endIndex = rows.indexOf(dataRowObject[dataRowObject.length - 1]) + 1;\n                            }\n                            var pageRecord = rows.slice(startIndex, endIndex);\n                            var median_1 = ~~Math.max(pageRecord.length, this_1.model.pageSize) / 2;\n                            if (!this_1.isBlockAvailable(indexes_1[0])) {\n                                this_1.cache[indexes_1[0]] = pageRecord.slice(0, median_1);\n                            }\n                            if (!this_1.isBlockAvailable(indexes_1[1])) {\n                                this_1.cache[indexes_1[1]] = pageRecord.slice(median_1);\n                            }\n                            prevEndIndex = endIndex;\n                        }\n                    }\n                    else {\n                        median = ~~Math.max(rows.length, this_1.model.pageSize) / 2;\n                        if (!this_1.isBlockAvailable(indexes[0])) {\n                            this_1.cache[indexes[0]] = rows.slice(0, median);\n                        }\n                        if (!this_1.isBlockAvailable(indexes[1])) {\n                            this_1.cache[indexes[1]] = rows.slice(median);\n                        }\n                    }\n                }\n            }\n            if (this_1.parent.groupSettings.columns.length && !xAxis && this_1.cache[values[parseInt(i.toString(), 10)]] &&\n                !this_1.parent.groupSettings.enableLazyLoading) {\n                this_1.cache[values[parseInt(i.toString(), 10)]] =\n                    this_1.updateGroupRow(this_1.cache[values[parseInt(i.toString(), 10)]], values[parseInt(i.toString(), 10)]);\n            }\n            if (!e.renderMovableContent && !e.renderFrozenRightContent && this_1.cache[values[parseInt(i.toString(), 10)]]) {\n                // eslint-disable-next-line prefer-spread\n                result.push.apply(result, this_1.cache[values[parseInt(i.toString(), 10)]]);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var DataRecord_1 = [];\n                if (this_1.parent.enableVirtualization && this_1.parent.groupSettings.columns.length) {\n                    result.forEach(function (data) {\n                        if (!DataRecord_1.includes(data)) {\n                            DataRecord_1.push(data);\n                        }\n                    });\n                }\n                result = DataRecord_1.length ? DataRecord_1 : result;\n            }\n            if (this_1.isBlockAvailable(values[parseInt(i.toString(), 10)])) {\n                loadedBlocks.push(values[parseInt(i.toString(), 10)]);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < values.length; i++) {\n            _loop_1(i);\n        }\n        if (isGroupAdaptive(this.parent) && this.parent.vcRows.length && e.requestType === 'sorting'\n            && e.scrollTop.top !== 0) {\n            return result = this.parent.vcRows;\n        }\n        info.blockIndexes = loadedBlocks;\n        var grouping = 'records';\n        if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n            this.parent.currentViewData[\"\" + grouping] = result.map(function (m) { return m.data; });\n        }\n        else {\n            this.parent.currentViewData = result.map(function (m) { return m.data; });\n        }\n        if (e.requestType === 'grouping') {\n            this.parent.currentViewData[\"\" + grouping] = this.parent.currentViewData[\"\" + grouping].filter(function (item, index) {\n                return _this.parent.currentViewData[\"\" + grouping].indexOf(item) === index;\n            });\n        }\n        if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n            if (['save', 'delete'].some(function (value) { return e.requestType === value; })) {\n                return result = this.parent.vcRows;\n            }\n        }\n        return result;\n    };\n    VirtualRowModelGenerator.prototype.setBlockForManualRefresh = function (cache, blocks, rows) {\n        var size = this.model.pageSize / 2;\n        if (this.includePrevPage) {\n            cache[blocks[0] - 1] = rows.slice(0, size);\n            cache[blocks[0]] = rows.slice(size, size * 2);\n            cache[blocks[1]] = rows.slice(size * 2, size * 3);\n            cache[blocks[2]] = rows.slice(size * 3, size * 4);\n        }\n        else {\n            cache[blocks[0]] = rows.slice(0, size);\n            cache[blocks[1]] = rows.slice(size, size * 2);\n            cache[blocks[2]] = rows.slice(size * 2, size * 3);\n            cache[blocks[2] + 1] = rows.slice(size * 3, size * 4);\n        }\n    };\n    VirtualRowModelGenerator.prototype.getBlockIndexes = function (page) {\n        return [page + (page - 1), page * 2];\n    };\n    VirtualRowModelGenerator.prototype.getPage = function (block) {\n        return block % 2 === 0 ? block / 2 : (block + 1) / 2;\n    };\n    VirtualRowModelGenerator.prototype.isBlockAvailable = function (value) {\n        return value in this.cache;\n    };\n    VirtualRowModelGenerator.prototype.getData = function () {\n        return {\n            page: this.model.currentPage,\n            blockIndexes: this.getBlockIndexes(this.model.currentPage),\n            direction: 'down',\n            columnIndexes: this.parent.getColumnIndexesInView()\n        };\n    };\n    VirtualRowModelGenerator.prototype.getStartIndex = function (blk, data, full) {\n        if (full === void 0) { full = true; }\n        var page = this.getPage(blk);\n        var even = blk % 2 === 0;\n        var index = (page - 1) * this.model.pageSize;\n        return full || !even ? index : index + ~~(this.model.pageSize / 2);\n    };\n    VirtualRowModelGenerator.prototype.getColumnIndexes = function (content) {\n        var _this = this;\n        if (content === void 0) { content = this.parent.getHeaderContent().querySelector('.' + literals.headerContent); }\n        var indexes = [];\n        var sLeft = content.scrollLeft | 0;\n        var keys = Object.keys(this.cOffsets);\n        var cWidth = content.getBoundingClientRect().width;\n        sLeft = Math.min(this.cOffsets[keys.length - 1] - cWidth, sLeft);\n        var calWidth = Browser.isDevice ? 2 * cWidth : cWidth / 2;\n        var left = sLeft + cWidth + (sLeft === 0 ? calWidth : 0);\n        var frzLeftWidth = 0;\n        var diffWidth = sLeft - calWidth;\n        if (this.parent.isFrozenGrid()) {\n            frzLeftWidth = this.parent.leftrightColumnWidth('left');\n            if (diffWidth > 0) {\n                for (var i = this.parent.getVisibleFrozenLeftCount() - 1; i >= 0; i--) {\n                    if (diffWidth <= this.cOffsets[parseInt(i.toString(), 10)]) {\n                        frzLeftWidth = frzLeftWidth - this.cOffsets[parseInt(i.toString(), 10)];\n                        break;\n                    }\n                }\n            }\n            if (this.parent.getFrozenMode() === literals.leftRight) {\n                var rightCol = this.parent.getVisibleFrozenRightCount();\n                keys.splice((keys.length - 1) - rightCol, rightCol);\n            }\n        }\n        var frozenLeftCount = this.parent.getVisibleFrozenLeftCount();\n        keys.some(function (offset) {\n            var iOffset = Number(offset);\n            var offsetVal = _this.cOffsets[\"\" + offset];\n            var border = (diffWidth < 0 && iOffset < frozenLeftCount) || ((diffWidth + frzLeftWidth) <= offsetVal &&\n                (left + calWidth) >= offsetVal);\n            if (border) {\n                indexes.push(iOffset);\n            }\n            return left + calWidth < offsetVal;\n        });\n        return indexes;\n    };\n    VirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var actions = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder',\n            'save', 'delete'];\n        var clear = actions.some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    VirtualRowModelGenerator.prototype.refreshColOffsets = function () {\n        var _this = this;\n        var col = 0;\n        this.cOffsets = {};\n        var gLen = this.parent.groupSettings.columns.length;\n        var cols = this.parent.getVisibleColumns();\n        var cLen = cols.length;\n        var isVisible = function (column) { return column.visible &&\n            (!_this.parent.groupSettings.showGroupedColumn ? _this.parent.groupSettings.columns.indexOf(column.field) < 0 : column.visible); };\n        var c = this.parent.groupSettings.columns;\n        for (var i = 0; i < c.length; i++) {\n            this.cOffsets[parseInt(i.toString(), 10)] = (this.cOffsets[i - 1] | 0) + 30;\n        }\n        // eslint-disable-next-line prefer-spread\n        var blocks = Array.apply(null, Array(cLen)).map(function () { return col++; });\n        for (var j = 0; j < blocks.length; j++) {\n            blocks[parseInt(j.toString(), 10)] = blocks[parseInt(j.toString(), 10)] + gLen;\n            this.cOffsets[blocks[parseInt(j.toString(), 10)]] =\n                (this.cOffsets[blocks[parseInt(j.toString(), 10)] - 1] | 0) + (isVisible(cols[parseInt(j.toString(), 10)]) ?\n                    parseInt(cols[parseInt(j.toString(), 10)].width, 10) : 0);\n        }\n    };\n    VirtualRowModelGenerator.prototype.updateGroupRow = function (current, block) {\n        var currentFirst = current[0];\n        var rows = [];\n        var keys = Object.keys(this.cache);\n        for (var i = 0; i < keys.length; i++) {\n            if (Number(keys[parseInt(i.toString(), 10)]) < block) {\n                rows = rows.concat(this.cache[keys[parseInt(i.toString(), 10)]]);\n            }\n        }\n        if ((currentFirst && currentFirst.isDataRow) || block % 2 === 0) {\n            return current;\n        }\n        return this.iterateGroup(current, rows);\n    };\n    VirtualRowModelGenerator.prototype.iterateGroup = function (current, rows) {\n        var currentFirst = current[0];\n        var offset = 0;\n        if (currentFirst && currentFirst.isDataRow) {\n            return current;\n        }\n        var isPresent = current.some(function (row) {\n            return rows.some(function (oRow, index) {\n                var res = oRow && oRow.data.field !== undefined\n                    && oRow.data.field === row.data.field &&\n                    oRow.data.key === row.data.key;\n                if (res) {\n                    offset = index;\n                }\n                return res;\n            });\n        });\n        if (isPresent) {\n            current.shift();\n            current = this.iterateGroup(current, rows.slice(offset));\n        }\n        return current;\n    };\n    VirtualRowModelGenerator.prototype.getRows = function () {\n        var rows = [];\n        var keys = Object.keys(this.cache);\n        for (var i = 0; i < keys.length; i++) {\n            rows = rows.concat(this.cache[keys[parseInt(i.toString(), 10)]]);\n        }\n        return rows;\n    };\n    VirtualRowModelGenerator.prototype.generateCells = function (foreignKeyData) {\n        var cells = [];\n        var cols = this.parent.columnModel;\n        for (var i = 0; i < cols.length; i++) {\n            cells.push(this.rowModelGenerator.generateCell(cols[parseInt(i.toString(), 10)], null, null, null, null, foreignKeyData));\n        }\n        return cells;\n    };\n    VirtualRowModelGenerator.prototype.getGroupVirtualRecordsByIndex = function (rows) {\n        var blocks = this.parent.contentModule.getGroupedTotalBlocks();\n        var blockSize = this.parent.contentModule.getBlockSize();\n        if (Object.keys(this.cache).length === 0) {\n            var countGroupRow = 0;\n            for (var i = 1; i <= blocks; i++) {\n                var count = 0;\n                this.cache[parseInt(i.toString(), 10)] = [];\n                for (var j = ((i - 1) * blockSize + countGroupRow); j < rows.length; j++) {\n                    if (count === blockSize) {\n                        break;\n                    }\n                    this.cache[parseInt(i.toString(), 10)].push(rows[parseInt(j.toString(), 10)]);\n                    if (rows[parseInt(j.toString(), 10)].isDataRow) {\n                        count++;\n                    }\n                    countGroupRow++;\n                }\n                countGroupRow -= count;\n            }\n        }\n    };\n    return VirtualRowModelGenerator;\n}());\nexport { VirtualRowModelGenerator };\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,iBAAiB,QAAQ,sBAAsB;AACjE,SAASC,sBAAsB,EAAEC,eAAe,EAAEC,cAAc,EAAEC,cAAc,QAAQ,cAAc;AACtG,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,SAASC,mBAAmB,QAAQ,mCAAmC;AACvE,OAAO,KAAKC,MAAM,MAAM,kBAAkB;AAC1C,OAAO,KAAKC,QAAQ,MAAM,yBAAyB;AACnD;AACA;AACA;AACA,IAAIC,wBAAwB,GAAG,aAAe,YAAY;EACtD,SAASA,wBAAwBA,CAACC,MAAM,EAAE;IACtC,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC;IACd,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC;IACrB,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAACP,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACQ,KAAK,GAAG,IAAI,CAACR,MAAM,CAACS,YAAY;IACrC,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACV,MAAM,CAACW,aAAa,GAAG,IAAIf,mBAAmB,CAAC,IAAI,CAACI,MAAM,CAAC,GAAG,IAAIL,iBAAiB,CAAC,IAAI,CAACK,MAAM,CAAC;EAClI;EACAD,wBAAwB,CAACa,SAAS,CAACC,kBAAkB,GAAG,UAAUT,IAAI,EAAEU,CAAC,EAAE;IACvE,IAAIC,MAAM,GAAG,EAAE;IACf,IAAID,CAAC,CAACE,WAAW,KAAK,eAAe,EAAE;MACnC,IAAIC,IAAI,GAAG,IAAI,CAACjB,MAAM,CAACkB,aAAa,CAAC,CAAC;MACtC;MACAH,MAAM,CAACI,IAAI,CAACC,KAAK,CAACL,MAAM,EAAE,IAAI,CAACL,iBAAiB,CAACW,WAAW,CAACJ,IAAI,CAAC,CAAC;MACnE,IAAI,IAAI,CAACjB,MAAM,CAACsB,sBAAsB,CAACC,WAAW,EAAE;QAChD,IAAIC,oBAAoB,GAAG,IAAI,CAACxB,MAAM,CAACyB,UAAU,IAAI,IAAI,CAACzB,MAAM,CAACS,YAAY,CAACiB,WAAW,KAAK,CAAC,GAAG,CAAC,GAC7FnC,sBAAsB,CAAC,IAAI,CAACS,MAAM,CAAC2B,eAAe,CAAC,CAAC,CAACC,aAAa,CAAC,yBAAyB,CAAC,CAAC;QACpG,IAAIC,SAAS,GAAGd,MAAM,CACjBe,KAAK,CAACN,oBAAoB,EAAEA,oBAAoB,GAAI,IAAI,CAACxB,MAAM,CAACS,YAAY,CAACsB,QAAQ,GAAG,CAAE,CAAC;QAChG,IAAI,IAAI,CAAC/B,MAAM,CAACyB,UAAU,IAAI,IAAI,CAACzB,MAAM,CAACS,YAAY,CAACiB,WAAW,KAAK,CAAC,EAAE;UACtEG,SAAS,GAAGd,MAAM,CAACe,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC9B,MAAM,CAACyB,UAAU,CAAC,CAACO,MAAM,CAACH,SAAS,CAAC;QACzE;QACAd,MAAM,GAAGc,SAAS;MACtB;IACJ,CAAC,MACI;MACD;MACAd,MAAM,CAACI,IAAI,CAACC,KAAK,CAACL,MAAM,EAAE,IAAI,CAACL,iBAAiB,CAACuB,YAAY,CAAC7B,IAAI,EAAEU,CAAC,CAAC,CAAC;IAC3E;IACA,OAAOC,MAAM;EACjB,CAAC;EACDhB,wBAAwB,CAACa,SAAS,CAACqB,YAAY,GAAG,UAAU7B,IAAI,EAAEU,CAAC,EAAE;IACjE,IAAIoB,KAAK,GAAG,IAAI;IAChB,IAAI,IAAI,CAAClC,MAAM,CAACmC,0BAA0B,IAAI,IAAI,CAACnC,MAAM,CAACoC,uBAAuB,EAAE;MAC/E,OAAO,IAAI,CAACvB,kBAAkB,CAACT,IAAI,EAAEU,CAAC,CAAC;IAC3C;IACA,IAAIuB,eAAe,GAAG,KAAK;IAC3B,IAAIC,IAAI,GAAGxB,CAAC,CAACyB,WAAW,GAAGzB,CAAC,CAACyB,WAAW,IAChC,CAACzB,CAAC,CAACE,WAAW,KAAK,SAAS,IAAIF,CAAC,CAACE,WAAW,KAAK,QAAQ,KAAKvB,cAAc,CAAC,IAAI,CAACO,MAAM,CAAC,IAAI,IAAI,CAACO,QAAS,IAC7G,IAAI,CAACiC,OAAO,CAAC,CAAC;IACrB,IAAI,CAACjC,QAAQ,GAAG+B,IAAI;IACpB,IAAIG,KAAK,GAAGH,IAAI,CAACI,YAAY,IAAIJ,IAAI,CAACI,YAAY,CAACC,IAAI,KAAK,GAAG;IAC/D,IAAIC,IAAI,GAAG,CAACH,KAAK,IAAIH,IAAI,CAACO,QAAQ,IAAI,CAACP,IAAI,CAACQ,QAAQ,GAAGR,IAAI,CAACS,QAAQ,CAACH,IAAI,GAAGN,IAAI,CAACM,IAAI;IACrF,IAAI7B,MAAM,GAAG,EAAE;IACf,IAAIiC,OAAO,GAAG,IAAI,CAACC,eAAe,CAACL,IAAI,CAAC;IACxC,IAAIM,YAAY,GAAG,EAAE;IACrB,IAAI,IAAI,CAAC5C,WAAW,CAAC6C,YAAY,EAAE;MAC/BH,OAAO,GAAGV,IAAI,CAACa,YAAY,GAAGrC,CAAC,CAACyB,WAAW,CAACY,YAAY,GAAG,IAAI,CAACC,eAAe,GAAG,IAAI,CAAC9C,WAAW,CAAC6C,YAAY,CAACrB,KAAK,CAAC,CAAC,CAAC,GAClH,IAAI,CAACxB,WAAW,CAAC6C,YAAY,CAACrB,KAAK,CAAC,CAAC,EAAE,IAAI,CAACxB,WAAW,CAAC6C,YAAY,CAACE,MAAM,GAAG,CAAC,CAAC;MACtFhB,eAAe,GAAG,IAAI;IAC1B;IACA,IAAI,CAACiB,kBAAkB,CAACxC,CAAC,CAACE,WAAW,CAAC;IACtC,IAAIxB,eAAe,CAAC,IAAI,CAACQ,MAAM,CAAC,IAAI,IAAI,CAACA,MAAM,CAACuD,MAAM,CAACF,MAAM,EAAE;MAC3D,IAAIG,QAAQ,GAAG,IAAI,CAACxD,MAAM,CAACuD,MAAM,CAACE,MAAM,CAAC,UAAUC,GAAG,EAAE;QAAE,OAAOA,GAAG,CAACC,SAAS;MAAE,CAAC,CAAC;MAClF,IAAK,IAAI,CAAC3D,MAAM,CAACqC,eAAe,IAAImB,QAAQ,CAACH,MAAM,KAAKjD,IAAI,CAAC,SAAS,CAAC,CAACiD,MAAM,IAAK,CAAC,IAAI,CAACrD,MAAM,CAACqC,eAAe,EAAE;QAC7G,OAAOtB,MAAM,GAAG,IAAI,CAACf,MAAM,CAACuD,MAAM;MACtC;IACJ;IACA,IAAI,IAAI,CAACvD,MAAM,CAACmC,0BAA0B,EAAE;MACxC,KAAK,IAAIyB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtB,IAAI,CAACa,YAAY,CAACE,MAAM,EAAEO,CAAC,EAAE,EAAE;QAC/C,IAAI,IAAI,CAACC,gBAAgB,CAACvB,IAAI,CAACa,YAAY,CAACW,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE;UACtE,IAAI,CAAC7D,KAAK,CAACoC,IAAI,CAACa,YAAY,CAACW,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GACrD,IAAI,CAACrD,iBAAiB,CAACW,WAAW,CAAC,IAAI,CAACnB,KAAK,CAACoC,IAAI,CAACa,YAAY,CAACW,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QACrG;MACJ;IACJ;IACA,IAAIC,MAAM,GAAG1B,IAAI,CAACa,YAAY;IAC9B,IAAIc,OAAO,GAAG,SAAAA,CAAUL,CAAC,EAAE;MACvB,IAAI,CAACM,MAAM,CAACL,gBAAgB,CAACG,MAAM,CAACF,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE;QAC9D,IAAII,QAAQ,GAAG,CAAC7E,iBAAiB,CAAC4E,MAAM,CAACE,UAAU,CAAC,GAAGF,MAAM,CAACE,UAAU,GACpEF,MAAM,CAACG,aAAa,CAACL,MAAM,CAACF,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE3D,IAAI,CAAC;QAClE+D,QAAQ,GAAG3E,eAAe,CAAC0E,MAAM,CAAClE,MAAM,CAAC,IAAI,CAACkE,MAAM,CAAClE,MAAM,CAACuD,MAAM,CAACF,MAAM,KAAKvC,CAAC,CAACE,WAAW,KAAK,SAAS,IAClGF,CAAC,CAACE,WAAW,KAAK,QAAQ,CAAC,GAAG,CAAC,GAAGmD,QAAQ;QACjD,IAAIlD,IAAI,GAAGiD,MAAM,CAACxD,iBAAiB,CAACuB,YAAY,CAAC7B,IAAI,EAAE;UACnDmC,WAAW,EAAED,IAAI;UAAE8B,UAAU,EAAED;QACnC,CAAC,CAAC;QACF,IAAI3E,eAAe,CAAC0E,MAAM,CAAClE,MAAM,CAAC,IAAI,CAACkE,MAAM,CAAClE,MAAM,CAACuD,MAAM,CAACF,MAAM,EAAE;UAChEa,MAAM,CAACI,YAAY,GAAGlE,IAAI,CAACmE,OAAO,CAAClB,MAAM;UACzCa,MAAM,CAAClE,MAAM,CAACwE,KAAK,GAAGvD,IAAI;UAC1BiD,MAAM,CAAClE,MAAM,CAACuD,MAAM,GAAGtC,IAAI;UAC3BiD,MAAM,CAAClE,MAAM,CAACyE,MAAM,CAAC5E,MAAM,CAAC6E,qBAAqB,EAAE,CAAC,CAAC,CAAC;QAC1D;QACA,IAAIC,MAAM,GAAG,KAAK,CAAC;QACnB,IAAInF,eAAe,CAAC0E,MAAM,CAAClE,MAAM,CAAC,EAAE;UAChCkE,MAAM,CAACU,6BAA6B,CAAC3D,IAAI,CAAC;QAC9C,CAAC,MACI;UACD,IAAIoB,eAAe,EAAE;YACjB6B,MAAM,CAACW,wBAAwB,CAACX,MAAM,CAAChE,KAAK,EAAE8C,OAAO,EAAE/B,IAAI,CAAC;UAChE,CAAC,MACI,IAAI,CAACH,CAAC,CAACE,WAAW,KAAK,SAAS,IAAIF,CAAC,CAACE,WAAW,KAAK,QAAQ,KAAKvB,cAAc,CAACyE,MAAM,CAAClE,MAAM,CAAC,EAAE;YACnG,IAAI8E,WAAW,GAAGpF,cAAc,CAAC4C,IAAI,CAACa,YAAY,CAAC;YACnD,IAAI4B,YAAY,GAAG,CAAC;YACpB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGF,WAAW,CAACzB,MAAM,EAAE2B,GAAG,EAAE,EAAE;cAC/C,IAAIC,SAAS,GAAGf,MAAM,CAACjB,eAAe,CAAC6B,WAAW,CAAChB,QAAQ,CAACkB,GAAG,CAACjB,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;cACjF,IAAIK,UAAU,GAAGF,MAAM,CAAC1D,KAAK,CAACuB,QAAQ,GAAGiD,GAAG;cAC5C,IAAIE,QAAQ,GAAGd,UAAU,GAAGF,MAAM,CAAC1D,KAAK,CAACuB,QAAQ;cACjD,IAAImC,MAAM,CAAClE,MAAM,CAACW,aAAa,IAAIuD,MAAM,CAAClE,MAAM,CAACmF,aAAa,CAACC,OAAO,CAAC/B,MAAM,EAAE;gBAC3E,IAAIgC,aAAa,GAAGpE,IAAI,CAACwC,MAAM,CAAC,UAAUC,GAAG,EAAE;kBAAE,OAAOA,GAAG,CAACC,SAAS;gBAAE,CAAC,CAAC,CACpE7B,KAAK,CAACsC,UAAU,EAAEc,QAAQ,CAAC;gBAChCd,UAAU,GAAGW,YAAY;gBACzBG,QAAQ,GAAGjE,IAAI,CAACqE,OAAO,CAACD,aAAa,CAACA,aAAa,CAAChC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;cACxE;cACA,IAAIkC,UAAU,GAAGtE,IAAI,CAACa,KAAK,CAACsC,UAAU,EAAEc,QAAQ,CAAC;cACjD,IAAIM,QAAQ,GAAG,CAAC,CAACC,IAAI,CAACC,GAAG,CAACH,UAAU,CAAClC,MAAM,EAAEa,MAAM,CAAC1D,KAAK,CAACuB,QAAQ,CAAC,GAAG,CAAC;cACvE,IAAI,CAACmC,MAAM,CAACL,gBAAgB,CAACoB,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;gBACxCf,MAAM,CAAChE,KAAK,CAAC+E,SAAS,CAAC,CAAC,CAAC,CAAC,GAAGM,UAAU,CAACzD,KAAK,CAAC,CAAC,EAAE0D,QAAQ,CAAC;cAC9D;cACA,IAAI,CAACtB,MAAM,CAACL,gBAAgB,CAACoB,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;gBACxCf,MAAM,CAAChE,KAAK,CAAC+E,SAAS,CAAC,CAAC,CAAC,CAAC,GAAGM,UAAU,CAACzD,KAAK,CAAC0D,QAAQ,CAAC;cAC3D;cACAT,YAAY,GAAGG,QAAQ;YAC3B;UACJ,CAAC,MACI;YACDP,MAAM,GAAG,CAAC,CAACc,IAAI,CAACC,GAAG,CAACzE,IAAI,CAACoC,MAAM,EAAEa,MAAM,CAAC1D,KAAK,CAACuB,QAAQ,CAAC,GAAG,CAAC;YAC3D,IAAI,CAACmC,MAAM,CAACL,gBAAgB,CAACb,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;cACtCkB,MAAM,CAAChE,KAAK,CAAC8C,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG/B,IAAI,CAACa,KAAK,CAAC,CAAC,EAAE6C,MAAM,CAAC;YACpD;YACA,IAAI,CAACT,MAAM,CAACL,gBAAgB,CAACb,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;cACtCkB,MAAM,CAAChE,KAAK,CAAC8C,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG/B,IAAI,CAACa,KAAK,CAAC6C,MAAM,CAAC;YACjD;UACJ;QACJ;MACJ;MACA,IAAIT,MAAM,CAAClE,MAAM,CAACmF,aAAa,CAACC,OAAO,CAAC/B,MAAM,IAAI,CAACZ,KAAK,IAAIyB,MAAM,CAAChE,KAAK,CAAC8D,MAAM,CAACF,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IACxG,CAACG,MAAM,CAAClE,MAAM,CAACmF,aAAa,CAACQ,iBAAiB,EAAE;QAChDzB,MAAM,CAAChE,KAAK,CAAC8D,MAAM,CAACF,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAC5CG,MAAM,CAAC0B,cAAc,CAAC1B,MAAM,CAAChE,KAAK,CAAC8D,MAAM,CAACF,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAEC,MAAM,CAACF,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MACnH;MACA,IAAI,CAACjD,CAAC,CAAC+E,oBAAoB,IAAI,CAAC/E,CAAC,CAACgF,wBAAwB,IAAI5B,MAAM,CAAChE,KAAK,CAAC8D,MAAM,CAACF,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE;QAC5G;QACAhD,MAAM,CAACI,IAAI,CAACC,KAAK,CAACL,MAAM,EAAEmD,MAAM,CAAChE,KAAK,CAAC8D,MAAM,CAACF,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3E;QACA,IAAIgC,YAAY,GAAG,EAAE;QACrB,IAAI7B,MAAM,CAAClE,MAAM,CAACgG,oBAAoB,IAAI9B,MAAM,CAAClE,MAAM,CAACmF,aAAa,CAACC,OAAO,CAAC/B,MAAM,EAAE;UAClFtC,MAAM,CAACkF,OAAO,CAAC,UAAU7F,IAAI,EAAE;YAC3B,IAAI,CAAC2F,YAAY,CAACG,QAAQ,CAAC9F,IAAI,CAAC,EAAE;cAC9B2F,YAAY,CAAC5E,IAAI,CAACf,IAAI,CAAC;YAC3B;UACJ,CAAC,CAAC;QACN;QACAW,MAAM,GAAGgF,YAAY,CAAC1C,MAAM,GAAG0C,YAAY,GAAGhF,MAAM;MACxD;MACA,IAAImD,MAAM,CAACL,gBAAgB,CAACG,MAAM,CAACF,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE;QAC7Db,YAAY,CAAC/B,IAAI,CAAC6C,MAAM,CAACF,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MACzD;IACJ,CAAC;IACD,IAAIG,MAAM,GAAG,IAAI;IACjB,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGI,MAAM,CAACX,MAAM,EAAEO,CAAC,EAAE,EAAE;MACpCK,OAAO,CAACL,CAAC,CAAC;IACd;IACA,IAAIpE,eAAe,CAAC,IAAI,CAACQ,MAAM,CAAC,IAAI,IAAI,CAACA,MAAM,CAACuD,MAAM,CAACF,MAAM,IAAIvC,CAAC,CAACE,WAAW,KAAK,SAAS,IACrFF,CAAC,CAACqF,SAAS,CAACC,GAAG,KAAK,CAAC,EAAE;MAC1B,OAAOrF,MAAM,GAAG,IAAI,CAACf,MAAM,CAACuD,MAAM;IACtC;IACAjB,IAAI,CAACa,YAAY,GAAGD,YAAY;IAChC,IAAImD,QAAQ,GAAG,SAAS;IACxB,IAAI,IAAI,CAACrG,MAAM,CAACW,aAAa,IAAI,IAAI,CAACX,MAAM,CAACmF,aAAa,CAACC,OAAO,CAAC/B,MAAM,EAAE;MACvE,IAAI,CAACrD,MAAM,CAACsG,eAAe,CAAC,EAAE,GAAGD,QAAQ,CAAC,GAAGtF,MAAM,CAACwF,GAAG,CAAC,UAAUC,CAAC,EAAE;QAAE,OAAOA,CAAC,CAACpG,IAAI;MAAE,CAAC,CAAC;IAC5F,CAAC,MACI;MACD,IAAI,CAACJ,MAAM,CAACsG,eAAe,GAAGvF,MAAM,CAACwF,GAAG,CAAC,UAAUC,CAAC,EAAE;QAAE,OAAOA,CAAC,CAACpG,IAAI;MAAE,CAAC,CAAC;IAC7E;IACA,IAAIU,CAAC,CAACE,WAAW,KAAK,UAAU,EAAE;MAC9B,IAAI,CAAChB,MAAM,CAACsG,eAAe,CAAC,EAAE,GAAGD,QAAQ,CAAC,GAAG,IAAI,CAACrG,MAAM,CAACsG,eAAe,CAAC,EAAE,GAAGD,QAAQ,CAAC,CAAC5C,MAAM,CAAC,UAAUgD,IAAI,EAAEC,KAAK,EAAE;QAClH,OAAOxE,KAAK,CAAClC,MAAM,CAACsG,eAAe,CAAC,EAAE,GAAGD,QAAQ,CAAC,CAACf,OAAO,CAACmB,IAAI,CAAC,KAAKC,KAAK;MAC9E,CAAC,CAAC;IACN;IACA,IAAIlH,eAAe,CAAC,IAAI,CAACQ,MAAM,CAAC,IAAI,IAAI,CAACA,MAAM,CAACuD,MAAM,CAACF,MAAM,EAAE;MAC3D,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAACsD,IAAI,CAAC,UAAUC,KAAK,EAAE;QAAE,OAAO9F,CAAC,CAACE,WAAW,KAAK4F,KAAK;MAAE,CAAC,CAAC,EAAE;QAC/E,OAAO7F,MAAM,GAAG,IAAI,CAACf,MAAM,CAACuD,MAAM;MACtC;IACJ;IACA,OAAOxC,MAAM;EACjB,CAAC;EACDhB,wBAAwB,CAACa,SAAS,CAACiE,wBAAwB,GAAG,UAAU3E,KAAK,EAAE2G,MAAM,EAAE5F,IAAI,EAAE;IACzF,IAAI6F,IAAI,GAAG,IAAI,CAACtG,KAAK,CAACuB,QAAQ,GAAG,CAAC;IAClC,IAAI,IAAI,CAACqB,eAAe,EAAE;MACtBlD,KAAK,CAAC2G,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG5F,IAAI,CAACa,KAAK,CAAC,CAAC,EAAEgF,IAAI,CAAC;MAC1C5G,KAAK,CAAC2G,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG5F,IAAI,CAACa,KAAK,CAACgF,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC;MAC7C5G,KAAK,CAAC2G,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG5F,IAAI,CAACa,KAAK,CAACgF,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,CAAC,CAAC;MACjD5G,KAAK,CAAC2G,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG5F,IAAI,CAACa,KAAK,CAACgF,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,CAAC,CAAC;IACrD,CAAC,MACI;MACD5G,KAAK,CAAC2G,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG5F,IAAI,CAACa,KAAK,CAAC,CAAC,EAAEgF,IAAI,CAAC;MACtC5G,KAAK,CAAC2G,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG5F,IAAI,CAACa,KAAK,CAACgF,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC;MAC7C5G,KAAK,CAAC2G,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG5F,IAAI,CAACa,KAAK,CAACgF,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,CAAC,CAAC;MACjD5G,KAAK,CAAC2G,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG5F,IAAI,CAACa,KAAK,CAACgF,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,CAAC,CAAC;IACzD;EACJ,CAAC;EACD/G,wBAAwB,CAACa,SAAS,CAACqC,eAAe,GAAG,UAAUL,IAAI,EAAE;IACjE,OAAO,CAACA,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC,EAAEA,IAAI,GAAG,CAAC,CAAC;EACxC,CAAC;EACD7C,wBAAwB,CAACa,SAAS,CAACmG,OAAO,GAAG,UAAUC,KAAK,EAAE;IAC1D,OAAOA,KAAK,GAAG,CAAC,KAAK,CAAC,GAAGA,KAAK,GAAG,CAAC,GAAG,CAACA,KAAK,GAAG,CAAC,IAAI,CAAC;EACxD,CAAC;EACDjH,wBAAwB,CAACa,SAAS,CAACiD,gBAAgB,GAAG,UAAU+C,KAAK,EAAE;IACnE,OAAOA,KAAK,IAAI,IAAI,CAAC1G,KAAK;EAC9B,CAAC;EACDH,wBAAwB,CAACa,SAAS,CAAC4B,OAAO,GAAG,YAAY;IACrD,OAAO;MACHI,IAAI,EAAE,IAAI,CAACpC,KAAK,CAACkB,WAAW;MAC5ByB,YAAY,EAAE,IAAI,CAACF,eAAe,CAAC,IAAI,CAACzC,KAAK,CAACkB,WAAW,CAAC;MAC1DuF,SAAS,EAAE,MAAM;MACjBC,aAAa,EAAE,IAAI,CAAClH,MAAM,CAACmH,sBAAsB,CAAC;IACtD,CAAC;EACL,CAAC;EACDpH,wBAAwB,CAACa,SAAS,CAACyD,aAAa,GAAG,UAAU+C,GAAG,EAAEhH,IAAI,EAAEiH,IAAI,EAAE;IAC1E,IAAIA,IAAI,KAAK,KAAK,CAAC,EAAE;MAAEA,IAAI,GAAG,IAAI;IAAE;IACpC,IAAIzE,IAAI,GAAG,IAAI,CAACmE,OAAO,CAACK,GAAG,CAAC;IAC5B,IAAIE,IAAI,GAAGF,GAAG,GAAG,CAAC,KAAK,CAAC;IACxB,IAAIV,KAAK,GAAG,CAAC9D,IAAI,GAAG,CAAC,IAAI,IAAI,CAACpC,KAAK,CAACuB,QAAQ;IAC5C,OAAOsF,IAAI,IAAI,CAACC,IAAI,GAAGZ,KAAK,GAAGA,KAAK,GAAG,CAAC,EAAE,IAAI,CAAClG,KAAK,CAACuB,QAAQ,GAAG,CAAC,CAAC;EACtE,CAAC;EACDhC,wBAAwB,CAACa,SAAS,CAAC2G,gBAAgB,GAAG,UAAUC,OAAO,EAAE;IACrE,IAAItF,KAAK,GAAG,IAAI;IAChB,IAAIsF,OAAO,KAAK,KAAK,CAAC,EAAE;MAAEA,OAAO,GAAG,IAAI,CAACxH,MAAM,CAACyH,gBAAgB,CAAC,CAAC,CAAC7F,aAAa,CAAC,GAAG,GAAG9B,QAAQ,CAAC4H,aAAa,CAAC;IAAE;IAChH,IAAI1E,OAAO,GAAG,EAAE;IAChB,IAAI2E,KAAK,GAAGH,OAAO,CAACI,UAAU,GAAG,CAAC;IAClC,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAAC,IAAI,CAAC5H,QAAQ,CAAC;IACrC,IAAI8H,MAAM,GAAGP,OAAO,CAACQ,qBAAqB,CAAC,CAAC,CAACC,KAAK;IAClDN,KAAK,GAAGlC,IAAI,CAACyC,GAAG,CAAC,IAAI,CAACjI,QAAQ,CAAC4H,IAAI,CAACxE,MAAM,GAAG,CAAC,CAAC,GAAG0E,MAAM,EAAEJ,KAAK,CAAC;IAChE,IAAIQ,QAAQ,GAAG9I,OAAO,CAAC+I,QAAQ,GAAG,CAAC,GAAGL,MAAM,GAAGA,MAAM,GAAG,CAAC;IACzD,IAAIM,IAAI,GAAGV,KAAK,GAAGI,MAAM,IAAIJ,KAAK,KAAK,CAAC,GAAGQ,QAAQ,GAAG,CAAC,CAAC;IACxD,IAAIG,YAAY,GAAG,CAAC;IACpB,IAAIC,SAAS,GAAGZ,KAAK,GAAGQ,QAAQ;IAChC,IAAI,IAAI,CAACnI,MAAM,CAACwI,YAAY,CAAC,CAAC,EAAE;MAC5BF,YAAY,GAAG,IAAI,CAACtI,MAAM,CAACyI,oBAAoB,CAAC,MAAM,CAAC;MACvD,IAAIF,SAAS,GAAG,CAAC,EAAE;QACf,KAAK,IAAI3E,CAAC,GAAG,IAAI,CAAC5D,MAAM,CAAC0I,yBAAyB,CAAC,CAAC,GAAG,CAAC,EAAE9E,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UACnE,IAAI2E,SAAS,IAAI,IAAI,CAACtI,QAAQ,CAAC6D,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;YACxDuE,YAAY,GAAGA,YAAY,GAAG,IAAI,CAACrI,QAAQ,CAAC6D,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACvE;UACJ;QACJ;MACJ;MACA,IAAI,IAAI,CAAC/D,MAAM,CAAC2I,aAAa,CAAC,CAAC,KAAK7I,QAAQ,CAAC8I,SAAS,EAAE;QACpD,IAAIC,QAAQ,GAAG,IAAI,CAAC7I,MAAM,CAAC8I,0BAA0B,CAAC,CAAC;QACvDjB,IAAI,CAACkB,MAAM,CAAElB,IAAI,CAACxE,MAAM,GAAG,CAAC,GAAIwF,QAAQ,EAAEA,QAAQ,CAAC;MACvD;IACJ;IACA,IAAIG,eAAe,GAAG,IAAI,CAAChJ,MAAM,CAAC0I,yBAAyB,CAAC,CAAC;IAC7Db,IAAI,CAAClB,IAAI,CAAC,UAAUsC,MAAM,EAAE;MACxB,IAAIC,OAAO,GAAGC,MAAM,CAACF,MAAM,CAAC;MAC5B,IAAIG,SAAS,GAAGlH,KAAK,CAACjC,QAAQ,CAAC,EAAE,GAAGgJ,MAAM,CAAC;MAC3C,IAAII,MAAM,GAAId,SAAS,GAAG,CAAC,IAAIW,OAAO,GAAGF,eAAe,IAAOT,SAAS,GAAGD,YAAY,IAAKc,SAAS,IAChGf,IAAI,GAAGF,QAAQ,IAAKiB,SAAU;MACnC,IAAIC,MAAM,EAAE;QACRrG,OAAO,CAAC7B,IAAI,CAAC+H,OAAO,CAAC;MACzB;MACA,OAAOb,IAAI,GAAGF,QAAQ,GAAGiB,SAAS;IACtC,CAAC,CAAC;IACF,OAAOpG,OAAO;EAClB,CAAC;EACDjD,wBAAwB,CAACa,SAAS,CAAC0C,kBAAkB,GAAG,UAAUgG,MAAM,EAAE;IACtE,IAAIC,OAAO,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EACxG,MAAM,EAAE,QAAQ,CAAC;IACrB,IAAIC,KAAK,GAAGD,OAAO,CAAC5C,IAAI,CAAC,UAAUC,KAAK,EAAE;MAAE,OAAO0C,MAAM,KAAK1C,KAAK;IAAE,CAAC,CAAC;IACvE,IAAI4C,KAAK,EAAE;MACP,IAAI,CAACtJ,KAAK,GAAG,CAAC,CAAC;MACf,IAAI,CAACE,IAAI,GAAG,CAAC,CAAC;MACd,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC;IACpB;IACA,OAAOmJ,KAAK;EAChB,CAAC;EACDzJ,wBAAwB,CAACa,SAAS,CAAC6I,iBAAiB,GAAG,YAAY;IAC/D,IAAIvH,KAAK,GAAG,IAAI;IAChB,IAAIwH,GAAG,GAAG,CAAC;IACX,IAAI,CAACzJ,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI0J,IAAI,GAAG,IAAI,CAAC3J,MAAM,CAACmF,aAAa,CAACC,OAAO,CAAC/B,MAAM;IACnD,IAAIuG,IAAI,GAAG,IAAI,CAAC5J,MAAM,CAAC6J,iBAAiB,CAAC,CAAC;IAC1C,IAAIC,IAAI,GAAGF,IAAI,CAACvG,MAAM;IACtB,IAAI0G,SAAS,GAAG,SAAAA,CAAUC,MAAM,EAAE;MAAE,OAAOA,MAAM,CAACC,OAAO,KACpD,CAAC/H,KAAK,CAAClC,MAAM,CAACmF,aAAa,CAAC+E,iBAAiB,GAAGhI,KAAK,CAAClC,MAAM,CAACmF,aAAa,CAACC,OAAO,CAACE,OAAO,CAAC0E,MAAM,CAACG,KAAK,CAAC,GAAG,CAAC,GAAGH,MAAM,CAACC,OAAO,CAAC;IAAE,CAAC;IACtI,IAAIG,CAAC,GAAG,IAAI,CAACpK,MAAM,CAACmF,aAAa,CAACC,OAAO;IACzC,KAAK,IAAIxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwG,CAAC,CAAC/G,MAAM,EAAEO,CAAC,EAAE,EAAE;MAC/B,IAAI,CAAC3D,QAAQ,CAAC6D,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC9D,QAAQ,CAAC2D,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE;IAC/E;IACA;IACA,IAAIiD,MAAM,GAAGwD,KAAK,CAACjJ,KAAK,CAAC,IAAI,EAAEiJ,KAAK,CAACP,IAAI,CAAC,CAAC,CAACvD,GAAG,CAAC,YAAY;MAAE,OAAOmD,GAAG,EAAE;IAAE,CAAC,CAAC;IAC9E,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGzD,MAAM,CAACxD,MAAM,EAAEiH,CAAC,EAAE,EAAE;MACpCzD,MAAM,CAAC/C,QAAQ,CAACwG,CAAC,CAACvG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG8C,MAAM,CAAC/C,QAAQ,CAACwG,CAAC,CAACvG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG4F,IAAI;MAC9E,IAAI,CAAC1J,QAAQ,CAAC4G,MAAM,CAAC/C,QAAQ,CAACwG,CAAC,CAACvG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAC7C,CAAC,IAAI,CAAC9D,QAAQ,CAAC4G,MAAM,CAAC/C,QAAQ,CAACwG,CAAC,CAACvG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAKgG,SAAS,CAACH,IAAI,CAAC9F,QAAQ,CAACwG,CAAC,CAACvG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GACtGD,QAAQ,CAAC8F,IAAI,CAAC9F,QAAQ,CAACwG,CAAC,CAACvG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACkE,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IACrE;EACJ,CAAC;EACDlI,wBAAwB,CAACa,SAAS,CAACgF,cAAc,GAAG,UAAU2E,OAAO,EAAEvD,KAAK,EAAE;IAC1E,IAAIwD,YAAY,GAAGD,OAAO,CAAC,CAAC,CAAC;IAC7B,IAAItJ,IAAI,GAAG,EAAE;IACb,IAAI4G,IAAI,GAAGC,MAAM,CAACD,IAAI,CAAC,IAAI,CAAC3H,KAAK,CAAC;IAClC,KAAK,IAAI0D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiE,IAAI,CAACxE,MAAM,EAAEO,CAAC,EAAE,EAAE;MAClC,IAAIuF,MAAM,CAACtB,IAAI,CAAC/D,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAGiD,KAAK,EAAE;QAClD/F,IAAI,GAAGA,IAAI,CAACe,MAAM,CAAC,IAAI,CAAC9B,KAAK,CAAC2H,IAAI,CAAC/D,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;MACpE;IACJ;IACA,IAAKyG,YAAY,IAAIA,YAAY,CAAC7G,SAAS,IAAKqD,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;MAC7D,OAAOuD,OAAO;IAClB;IACA,OAAO,IAAI,CAACE,YAAY,CAACF,OAAO,EAAEtJ,IAAI,CAAC;EAC3C,CAAC;EACDlB,wBAAwB,CAACa,SAAS,CAAC6J,YAAY,GAAG,UAAUF,OAAO,EAAEtJ,IAAI,EAAE;IACvE,IAAIuJ,YAAY,GAAGD,OAAO,CAAC,CAAC,CAAC;IAC7B,IAAItB,MAAM,GAAG,CAAC;IACd,IAAIuB,YAAY,IAAIA,YAAY,CAAC7G,SAAS,EAAE;MACxC,OAAO4G,OAAO;IAClB;IACA,IAAIG,SAAS,GAAGH,OAAO,CAAC5D,IAAI,CAAC,UAAUjD,GAAG,EAAE;MACxC,OAAOzC,IAAI,CAAC0F,IAAI,CAAC,UAAUgE,IAAI,EAAEjE,KAAK,EAAE;QACpC,IAAIkE,GAAG,GAAGD,IAAI,IAAIA,IAAI,CAACvK,IAAI,CAAC+J,KAAK,KAAKU,SAAS,IACxCF,IAAI,CAACvK,IAAI,CAAC+J,KAAK,KAAKzG,GAAG,CAACtD,IAAI,CAAC+J,KAAK,IACrCQ,IAAI,CAACvK,IAAI,CAAC0K,GAAG,KAAKpH,GAAG,CAACtD,IAAI,CAAC0K,GAAG;QAClC,IAAIF,GAAG,EAAE;UACL3B,MAAM,GAAGvC,KAAK;QAClB;QACA,OAAOkE,GAAG;MACd,CAAC,CAAC;IACN,CAAC,CAAC;IACF,IAAIF,SAAS,EAAE;MACXH,OAAO,CAACQ,KAAK,CAAC,CAAC;MACfR,OAAO,GAAG,IAAI,CAACE,YAAY,CAACF,OAAO,EAAEtJ,IAAI,CAACa,KAAK,CAACmH,MAAM,CAAC,CAAC;IAC5D;IACA,OAAOsB,OAAO;EAClB,CAAC;EACDxK,wBAAwB,CAACa,SAAS,CAACoK,OAAO,GAAG,YAAY;IACrD,IAAI/J,IAAI,GAAG,EAAE;IACb,IAAI4G,IAAI,GAAGC,MAAM,CAACD,IAAI,CAAC,IAAI,CAAC3H,KAAK,CAAC;IAClC,KAAK,IAAI0D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiE,IAAI,CAACxE,MAAM,EAAEO,CAAC,EAAE,EAAE;MAClC3C,IAAI,GAAGA,IAAI,CAACe,MAAM,CAAC,IAAI,CAAC9B,KAAK,CAAC2H,IAAI,CAAC/D,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpE;IACA,OAAO9C,IAAI;EACf,CAAC;EACDlB,wBAAwB,CAACa,SAAS,CAACqK,aAAa,GAAG,UAAUC,cAAc,EAAE;IACzE,IAAIC,KAAK,GAAG,EAAE;IACd,IAAIvB,IAAI,GAAG,IAAI,CAAC5J,MAAM,CAACoL,WAAW;IAClC,KAAK,IAAIxH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgG,IAAI,CAACvG,MAAM,EAAEO,CAAC,EAAE,EAAE;MAClCuH,KAAK,CAAChK,IAAI,CAAC,IAAI,CAACT,iBAAiB,CAAC2K,YAAY,CAACzB,IAAI,CAAC9F,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAEmH,cAAc,CAAC,CAAC;IAC7H;IACA,OAAOC,KAAK;EAChB,CAAC;EACDpL,wBAAwB,CAACa,SAAS,CAACgE,6BAA6B,GAAG,UAAU3D,IAAI,EAAE;IAC/E,IAAI4F,MAAM,GAAG,IAAI,CAAC7G,MAAM,CAACsL,aAAa,CAACC,qBAAqB,CAAC,CAAC;IAC9D,IAAIC,SAAS,GAAG,IAAI,CAACxL,MAAM,CAACsL,aAAa,CAACG,YAAY,CAAC,CAAC;IACxD,IAAI3D,MAAM,CAACD,IAAI,CAAC,IAAI,CAAC3H,KAAK,CAAC,CAACmD,MAAM,KAAK,CAAC,EAAE;MACtC,IAAIqI,aAAa,GAAG,CAAC;MACrB,KAAK,IAAI9H,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIiD,MAAM,EAAEjD,CAAC,EAAE,EAAE;QAC9B,IAAI+H,KAAK,GAAG,CAAC;QACb,IAAI,CAACzL,KAAK,CAAC4D,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE;QAC3C,KAAK,IAAIuG,CAAC,GAAI,CAAC1G,CAAC,GAAG,CAAC,IAAI4H,SAAS,GAAGE,aAAc,EAAEpB,CAAC,GAAGrJ,IAAI,CAACoC,MAAM,EAAEiH,CAAC,EAAE,EAAE;UACtE,IAAIqB,KAAK,KAAKH,SAAS,EAAE;YACrB;UACJ;UACA,IAAI,CAACtL,KAAK,CAAC4D,QAAQ,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC5C,IAAI,CAACF,IAAI,CAAC6C,QAAQ,CAACwG,CAAC,CAACvG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UAC7E,IAAI9C,IAAI,CAAC6C,QAAQ,CAACwG,CAAC,CAACvG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACJ,SAAS,EAAE;YAC5CgI,KAAK,EAAE;UACX;UACAD,aAAa,EAAE;QACnB;QACAA,aAAa,IAAIC,KAAK;MAC1B;IACJ;EACJ,CAAC;EACD,OAAO5L,wBAAwB;AACnC,CAAC,CAAC,CAAE;AACJ,SAASA,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}