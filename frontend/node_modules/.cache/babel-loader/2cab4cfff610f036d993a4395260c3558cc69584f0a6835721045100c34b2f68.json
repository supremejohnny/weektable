{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Switch } from '@syncfusion/ej2-buttons';\nimport { extend } from '@syncfusion/ej2-base';\nimport { isEditable, addRemoveActiveClasses, createEditElement, getObject } from '../base/util';\nimport * as literals from '../base/string-literals';\nimport { EditCellBase } from './edit-cell-base';\n/**\n * `ToggleEditCell` is used to handle boolean cell type editing.\n *\n * @hidden\n */\nvar ToggleEditCell = /** @class */function (_super) {\n  __extends(ToggleEditCell, _super);\n  function ToggleEditCell() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.activeClasses = ['e-selectionbackground', 'e-active'];\n    return _this;\n  }\n  ToggleEditCell.prototype.create = function (args) {\n    var clsNames = 'e-field e-boolcell';\n    if (args.column.type === 'checkbox') {\n      clsNames = 'e-field e-boolcell e-edit-checkselect';\n    }\n    return createEditElement(this.parent, args.column, clsNames, {\n      type: 'checkbox',\n      value: args.value\n    });\n  };\n  ToggleEditCell.prototype.read = function (element) {\n    return element.checked;\n  };\n  ToggleEditCell.prototype.write = function (args) {\n    var chkBoxElement = !isNullOrUndefined(args.row) && args.row.querySelector('.e-edit-checkselect');\n    var data = getObject(args.column.field, args.rowData);\n    var checkState = data && JSON.parse(data.toString().toLowerCase());\n    if (!isNullOrUndefined(chkBoxElement)) {\n      this.editType = this.parent.editSettings.mode;\n      this.editRow = args.row;\n      if (args.requestType !== 'add') {\n        var row = this.parent.getRowObjectFromUID(args.row.getAttribute('data-uid'));\n        checkState = row ? row.isSelected : false;\n      }\n      addRemoveActiveClasses.apply(void 0, [[].slice.call(args.row.getElementsByClassName(literals.rowCell)), checkState].concat(this.activeClasses));\n    }\n    this.obj = new Switch(extend({\n      label: this.parent.editSettings.mode !== 'Dialog' ? ' ' : args.column.headerText,\n      checked: checkState,\n      disabled: !isEditable(args.column, args.requestType, args.element),\n      enableRtl: this.parent.enableRtl,\n      change: this.switchModeChange.bind(this),\n      cssClass: this.parent.cssClass ? this.parent.cssClass : ''\n    }, args.column.edit.params));\n    this.obj.appendTo(args.element);\n  };\n  ToggleEditCell.prototype.switchModeChange = function (args) {\n    if (this.editRow && this.editType !== 'Dialog') {\n      var addClass = false;\n      if (!args.checked) {\n        this.editRow.removeAttribute('aria-selected');\n      } else {\n        addClass = true;\n        this.editRow.setAttribute('aria-selected', addClass.toString());\n      }\n      addRemoveActiveClasses.apply(void 0, [[].slice.call(this.editRow.getElementsByClassName(literals.rowCell)), addClass].concat(this.activeClasses));\n    }\n  };\n  return ToggleEditCell;\n}(EditCellBase);\nexport { ToggleEditCell };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","isNullOrUndefined","Switch","extend","isEditable","addRemoveActiveClasses","createEditElement","getObject","literals","EditCellBase","ToggleEditCell","_super","_this","apply","arguments","activeClasses","args","clsNames","column","type","parent","value","read","element","checked","write","chkBoxElement","row","querySelector","data","field","rowData","checkState","JSON","parse","toString","toLowerCase","editType","editSettings","mode","editRow","requestType","getRowObjectFromUID","getAttribute","isSelected","slice","call","getElementsByClassName","rowCell","concat","obj","label","headerText","disabled","enableRtl","change","switchModeChange","bind","cssClass","edit","params","appendTo","addClass","removeAttribute","setAttribute"],"sources":["D:/weektable/frontend/node_modules/@syncfusion/ej2-grids/src/grid/renderer/toggleswitch-edit-cell.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Switch } from '@syncfusion/ej2-buttons';\nimport { extend } from '@syncfusion/ej2-base';\nimport { isEditable, addRemoveActiveClasses, createEditElement, getObject } from '../base/util';\nimport * as literals from '../base/string-literals';\nimport { EditCellBase } from './edit-cell-base';\n/**\n * `ToggleEditCell` is used to handle boolean cell type editing.\n *\n * @hidden\n */\nvar ToggleEditCell = /** @class */ (function (_super) {\n    __extends(ToggleEditCell, _super);\n    function ToggleEditCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.activeClasses = ['e-selectionbackground', 'e-active'];\n        return _this;\n    }\n    ToggleEditCell.prototype.create = function (args) {\n        var clsNames = 'e-field e-boolcell';\n        if (args.column.type === 'checkbox') {\n            clsNames = 'e-field e-boolcell e-edit-checkselect';\n        }\n        return createEditElement(this.parent, args.column, clsNames, { type: 'checkbox', value: args.value });\n    };\n    ToggleEditCell.prototype.read = function (element) {\n        return element.checked;\n    };\n    ToggleEditCell.prototype.write = function (args) {\n        var chkBoxElement = !isNullOrUndefined(args.row) && args.row.querySelector('.e-edit-checkselect');\n        var data = getObject(args.column.field, args.rowData);\n        var checkState = data && JSON.parse(data.toString().toLowerCase());\n        if (!isNullOrUndefined(chkBoxElement)) {\n            this.editType = this.parent.editSettings.mode;\n            this.editRow = args.row;\n            if (args.requestType !== 'add') {\n                var row = this.parent.getRowObjectFromUID(args.row.getAttribute('data-uid'));\n                checkState = row ? row.isSelected : false;\n            }\n            addRemoveActiveClasses.apply(void 0, [[].slice.call(args.row.getElementsByClassName(literals.rowCell)), checkState].concat(this.activeClasses));\n        }\n        this.obj = new Switch(extend({\n            label: this.parent.editSettings.mode !== 'Dialog' ? ' ' : args.column.headerText,\n            checked: checkState,\n            disabled: !isEditable(args.column, args.requestType, args.element), enableRtl: this.parent.enableRtl,\n            change: this.switchModeChange.bind(this),\n            cssClass: this.parent.cssClass ? this.parent.cssClass : ''\n        }, args.column.edit.params));\n        this.obj.appendTo(args.element);\n    };\n    ToggleEditCell.prototype.switchModeChange = function (args) {\n        if (this.editRow && this.editType !== 'Dialog') {\n            var addClass = false;\n            if (!args.checked) {\n                this.editRow.removeAttribute('aria-selected');\n            }\n            else {\n                addClass = true;\n                this.editRow.setAttribute('aria-selected', addClass.toString());\n            }\n            addRemoveActiveClasses.apply(void 0, [[].slice.call(this.editRow.getElementsByClassName(literals.rowCell)), addClass].concat(this.activeClasses));\n        }\n    };\n    return ToggleEditCell;\n}(EditCellBase));\nexport { ToggleEditCell };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}