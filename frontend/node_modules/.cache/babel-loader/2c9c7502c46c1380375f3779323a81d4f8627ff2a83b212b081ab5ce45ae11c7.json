{"ast":null,"code":"/* eslint-disable */\nvar Utils = /** @class */function () {\n  function Utils() {}\n  Utils.bitReverse = function (value) {\n    return Utils.reverseBits[value & 15] << 12 | Utils.reverseBits[value >> 4 & 15] << 8 | Utils.reverseBits[value >> 8 & 15] << 4 | Utils.reverseBits[value >> 12];\n  };\n  Utils.bitConverterToInt32 = function (value, index) {\n    return value[index] | value[index + 1] << 8 | value[index + 2] << 16 | value[index + 3] << 24;\n  };\n  Utils.bitConverterToInt16 = function (value, index) {\n    return value[index] | value[index + 1] << 8;\n  };\n  Utils.bitConverterToUInt32 = function (value) {\n    var uint = new Uint32Array(1);\n    uint[0] = value;\n    return uint[0];\n  };\n  Utils.bitConverterToUInt16 = function (value, index) {\n    var uint = new Uint16Array(1);\n    uint[0] = value[index] | value[index + 1] << 8;\n    return uint[0];\n  };\n  Utils.bitConverterUintToInt32 = function (value) {\n    var uint = new Int32Array(1);\n    uint[0] = value;\n    return uint[0];\n  };\n  Utils.bitConverterInt32ToUint = function (value) {\n    var uint = new Uint32Array(1);\n    uint[0] = value;\n    return uint[0];\n  };\n  Utils.bitConverterInt32ToInt16 = function (value) {\n    var uint = new Int16Array(1);\n    uint[0] = value;\n    return uint[0];\n  };\n  Utils.byteToString = function (value) {\n    var str = '';\n    for (var i = 0; i < value.length; i++) {\n      str += String.fromCharCode(value[i]);\n    }\n    return str;\n  };\n  Utils.byteIntToString = function (value) {\n    var str = '';\n    for (var i = 0; i < value.length; i++) {\n      str += String.fromCharCode(value[i]);\n    }\n    return str;\n  };\n  Utils.arrayCopy = function (source, sourceIndex, destination, destinationIndex, dataToCopy) {\n    var temp = new Uint8Array(source.buffer, sourceIndex);\n    var data = temp.subarray(0, dataToCopy);\n    destination.set(data, destinationIndex);\n  };\n  Utils.mergeArray = function (arrayOne, arrayTwo) {\n    var mergedArray = new Uint8Array(arrayOne.length + arrayTwo.length);\n    mergedArray.set(arrayOne);\n    mergedArray.set(arrayTwo, arrayOne.length);\n    return mergedArray;\n  };\n  /**\n   * @private\n   */\n  Utils.encodedString = function (input) {\n    var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var chr1;\n    var chr2;\n    var chr3;\n    var encode1;\n    var encode2;\n    var encode3;\n    var encode4;\n    var count = 0;\n    var resultIndex = 0;\n    /*let dataUrlPrefix: string = 'data:';*/\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n    var totalLength = input.length * 3 / 4;\n    if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n      totalLength--;\n    }\n    if (input.charAt(input.length - 2) === keyStr.charAt(64)) {\n      totalLength--;\n    }\n    if (totalLength % 1 !== 0) {\n      // totalLength is not an integer, the length does not match a valid\n      // base64 content. That can happen if:\n      // - the input is not a base64 content\n      // - the input is *almost* a base64 content, with a extra chars at the\n      // beginning or at the end\n      // - the input uses a base64 variant (base64url for example)\n      throw new Error('Invalid base64 input, bad content length.');\n    }\n    var output = new Uint8Array(totalLength | 0);\n    while (count < input.length) {\n      encode1 = keyStr.indexOf(input.charAt(count++));\n      encode2 = keyStr.indexOf(input.charAt(count++));\n      encode3 = keyStr.indexOf(input.charAt(count++));\n      encode4 = keyStr.indexOf(input.charAt(count++));\n      chr1 = encode1 << 2 | encode2 >> 4;\n      chr2 = (encode2 & 15) << 4 | encode3 >> 2;\n      chr3 = (encode3 & 3) << 6 | encode4;\n      output[resultIndex++] = chr1;\n      if (encode3 !== 64) {\n        output[resultIndex++] = chr2;\n      }\n      if (encode4 !== 64) {\n        output[resultIndex++] = chr3;\n      }\n    }\n    return output;\n  };\n  Utils.reverseBits = [0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15];\n  Utils.huffCodeLengthOrders = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n  return Utils;\n}();\nexport { Utils };\n/* eslint-enable */","map":{"version":3,"names":["Utils","bitReverse","value","reverseBits","bitConverterToInt32","index","bitConverterToInt16","bitConverterToUInt32","uint","Uint32Array","bitConverterToUInt16","Uint16Array","bitConverterUintToInt32","Int32Array","bitConverterInt32ToUint","bitConverterInt32ToInt16","Int16Array","byteToString","str","i","length","String","fromCharCode","byteIntToString","arrayCopy","source","sourceIndex","destination","destinationIndex","dataToCopy","temp","Uint8Array","buffer","data","subarray","set","mergeArray","arrayOne","arrayTwo","mergedArray","encodedString","input","keyStr","chr1","chr2","chr3","encode1","encode2","encode3","encode4","count","resultIndex","replace","totalLength","charAt","Error","output","indexOf","huffCodeLengthOrders"],"sources":["D:/weektable/frontend/node_modules/@syncfusion/ej2-compression/src/utils.js"],"sourcesContent":["/* eslint-disable */\nvar Utils = /** @class */ (function () {\n    function Utils() {\n    }\n    Utils.bitReverse = function (value) {\n        return (Utils.reverseBits[value & 15] << 12\n            | Utils.reverseBits[(value >> 4) & 15] << 8\n            | Utils.reverseBits[(value >> 8) & 15] << 4\n            | Utils.reverseBits[value >> 12]);\n    };\n    Utils.bitConverterToInt32 = function (value, index) {\n        return value[index] | value[index + 1] << 8 | value[index + 2] << 16 | value[index + 3] << 24;\n    };\n    Utils.bitConverterToInt16 = function (value, index) {\n        return value[index] | value[index + 1] << 8;\n    };\n    Utils.bitConverterToUInt32 = function (value) {\n        var uint = new Uint32Array(1);\n        uint[0] = value;\n        return uint[0];\n    };\n    Utils.bitConverterToUInt16 = function (value, index) {\n        var uint = new Uint16Array(1);\n        uint[0] = (value[index] | value[index + 1] << 8);\n        return uint[0];\n    };\n    Utils.bitConverterUintToInt32 = function (value) {\n        var uint = new Int32Array(1);\n        uint[0] = value;\n        return uint[0];\n    };\n    Utils.bitConverterInt32ToUint = function (value) {\n        var uint = new Uint32Array(1);\n        uint[0] = value;\n        return uint[0];\n    };\n    Utils.bitConverterInt32ToInt16 = function (value) {\n        var uint = new Int16Array(1);\n        uint[0] = value;\n        return uint[0];\n    };\n    Utils.byteToString = function (value) {\n        var str = '';\n        for (var i = 0; i < value.length; i++) {\n            str += String.fromCharCode(value[i]);\n        }\n        return str;\n    };\n    Utils.byteIntToString = function (value) {\n        var str = '';\n        for (var i = 0; i < value.length; i++) {\n            str += String.fromCharCode(value[i]);\n        }\n        return str;\n    };\n    Utils.arrayCopy = function (source, sourceIndex, destination, destinationIndex, dataToCopy) {\n        var temp = new Uint8Array(source.buffer, sourceIndex);\n        var data = temp.subarray(0, dataToCopy);\n        destination.set(data, destinationIndex);\n    };\n    Utils.mergeArray = function (arrayOne, arrayTwo) {\n        var mergedArray = new Uint8Array(arrayOne.length + arrayTwo.length);\n        mergedArray.set(arrayOne);\n        mergedArray.set(arrayTwo, arrayOne.length);\n        return mergedArray;\n    };\n    /**\n     * @private\n     */\n    Utils.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var encode1;\n        var encode2;\n        var encode3;\n        var encode4;\n        var count = 0;\n        var resultIndex = 0;\n        /*let dataUrlPrefix: string = 'data:';*/\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        if (input.charAt(input.length - 2) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        if (totalLength % 1 !== 0) {\n            // totalLength is not an integer, the length does not match a valid\n            // base64 content. That can happen if:\n            // - the input is not a base64 content\n            // - the input is *almost* a base64 content, with a extra chars at the\n            // beginning or at the end\n            // - the input uses a base64 variant (base64url for example)\n            throw new Error('Invalid base64 input, bad content length.');\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (count < input.length) {\n            encode1 = keyStr.indexOf(input.charAt(count++));\n            encode2 = keyStr.indexOf(input.charAt(count++));\n            encode3 = keyStr.indexOf(input.charAt(count++));\n            encode4 = keyStr.indexOf(input.charAt(count++));\n            chr1 = (encode1 << 2) | (encode2 >> 4);\n            chr2 = ((encode2 & 15) << 4) | (encode3 >> 2);\n            chr3 = ((encode3 & 3) << 6) | encode4;\n            output[resultIndex++] = chr1;\n            if (encode3 !== 64) {\n                output[resultIndex++] = chr2;\n            }\n            if (encode4 !== 64) {\n                output[resultIndex++] = chr3;\n            }\n        }\n        return output;\n    };\n    Utils.reverseBits = [0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15];\n    Utils.huffCodeLengthOrders = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n    return Utils;\n}());\nexport { Utils };\n/* eslint-enable */ \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}