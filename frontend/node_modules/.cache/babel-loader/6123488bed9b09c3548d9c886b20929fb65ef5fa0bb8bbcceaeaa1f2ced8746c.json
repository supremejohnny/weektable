{"ast":null,"code":"/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n  /**\n   * Specifies the type of `Unknown`.\n   * @hidden\n   * @private\n   */\n  ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n  /**\n   * Specifies the type of `Bmp`.\n   * @hidden\n   * @private\n   */\n  ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n  /**\n   * Specifies the type of `Emf`.\n   * @hidden\n   * @private\n   */\n  ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n  /**\n   * Specifies the type of `Gif`.\n   * @hidden\n   * @private\n   */\n  ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n  /**\n   * Specifies the type of `Jpeg`.\n   * @hidden\n   * @private\n   */\n  ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n  /**\n   * Specifies the type of `Png`.\n   * @hidden\n   * @private\n   */\n  ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n  /**\n   * Specifies the type of `Wmf`.\n   * @hidden\n   * @private\n   */\n  ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n  /**\n   * Specifies the type of `Icon`.\n   * @hidden\n   * @private\n   */\n  ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */function () {\n  /**\n   * Initialize the new instance for `image-decoder` class.\n   * @private\n   */\n  function ImageDecoder(stream) {\n    /**\n     * Start of file markers.\n     * @hidden\n     * @private\n     */\n    this.sof1Marker = 0x00C1;\n    this.sof2Marker = 0x00C2;\n    this.sof3Marker = 0x00C3;\n    this.sof5Marker = 0x00C5;\n    this.sof6Marker = 0x00C6;\n    this.sof7Marker = 0x00C7;\n    this.sof9Marker = 0x00C9;\n    this.sof10Marker = 0x00CA;\n    this.sof11Marker = 0x00CB;\n    this.sof13Marker = 0x00CD;\n    this.sof14Marker = 0x00CE;\n    this.sof15Marker = 0x00CF;\n    /**\n     * Specifies `format` of image.\n     * @hidden\n     * @private\n     */\n    this.mFormat = ImageFormat.Unknown;\n    /**\n     * `Bits per component`.\n     * @default 8\n     * @hidden\n     * @private\n     */\n    this.mbitsPerComponent = 8;\n    /**\n     * Internal variable for accessing fields from `DictionryProperties` class.\n     * @hidden\n     * @private\n     */\n    this.dictionaryProperties = new DictionaryProperties();\n    this.mStream = stream;\n    this.initialize();\n  }\n  Object.defineProperty(ImageDecoder.prototype, \"height\", {\n    /**\n     * Gets the `height` of image.\n     * @hidden\n     * @private\n     */\n    get: function () {\n      return this.mHeight;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ImageDecoder.prototype, \"width\", {\n    /**\n     * Gets the `width` of image.\n     * @hidden\n     * @private\n     */\n    get: function () {\n      return this.mWidth;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n    /**\n     * Gets `bits per component`.\n     * @hidden\n     * @private\n     */\n    get: function () {\n      return this.mbitsPerComponent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ImageDecoder.prototype, \"size\", {\n    /**\n     * Gets the `size` of an image data.\n     * @hidden\n     * @private\n     */\n    get: function () {\n      return this.mImageData.count;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n    /**\n     * Gets the value of an `image data`.\n     * @hidden\n     * @private\n     */\n    get: function () {\n      return this.mImageData;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n    /**\n     * Gets the value of an `image data as number array`.\n     * @hidden\n     * @private\n     */\n    get: function () {\n      return this.mImageData.internalBuffer.buffer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * `Initialize` image data and image stream.\n   * @hidden\n   * @private\n   */\n  ImageDecoder.prototype.initialize = function () {\n    if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n      this.mFormat = ImageFormat.Jpeg;\n      this.parseJpegImage();\n    } else {\n      throw new TypeError('Only the JPEG format is supported');\n    }\n    this.reset();\n    this.mImageData = new ByteArray(this.mStream.count);\n    this.mStream.read(this.mImageData, 0, this.mImageData.count);\n  };\n  /**\n   * `Reset` stream position into 0.\n   * @hidden\n   * @private\n   */\n  ImageDecoder.prototype.reset = function () {\n    this.mStream.position = 0;\n  };\n  /**\n   * `Parse` Jpeg image.\n   * @hidden\n   * @private\n   */\n  ImageDecoder.prototype.parseJpegImage = function () {\n    this.reset();\n    var imgData = new ByteArray(this.mStream.count);\n    this.mStream.read(imgData, 0, imgData.count);\n    var i = 4;\n    var isLengthExceed = false;\n    /* tslint:disable */\n    var length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n    while (i < imgData.count) {\n      i += length;\n      if (i < imgData.count) {\n        if (imgData.getBuffer(i + 1) === 192) {\n          this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n          this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n          return;\n        } else {\n          i += 2;\n          length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n        }\n      } else {\n        isLengthExceed = true;\n        break;\n      }\n    }\n    if (isLengthExceed) {\n      this.mStream.position = 0;\n      this.skip(this.mStream, 2);\n      this.readExceededJPGImage(this.mStream);\n    }\n    /* tslint:enable */\n  };\n  Object.defineProperty(ImageDecoder.prototype, \"format\", {\n    /**\n     * Gets the image `format`.\n     * @private\n     * @hidden\n     */\n    get: function () {\n      return this.mFormat;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * `Checks if JPG`.\n   * @private\n   * @hidden\n   */\n  ImageDecoder.prototype.checkIfJpeg = function () {\n    this.reset();\n    for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n      if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n        return false;\n      }\n      this.mStream.position++;\n    }\n    return true;\n  };\n  /**\n   * Return image `dictionary`.\n   * @hidden\n   * @private\n   */\n  ImageDecoder.prototype.getImageDictionary = function () {\n    if (this.mFormat === ImageFormat.Jpeg) {\n      var tempArrayBuffer = this.imageData.internalBuffer.length;\n      this.imageStream = new PdfStream();\n      this.imageStream.isResource = true;\n      var tempString = '';\n      var decodedString = '';\n      for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n        tempString += String.fromCharCode(null, this.mStream.readByte(i));\n      }\n      for (var i = 0; i < tempString.length; i++) {\n        if (i % 2 !== 0) {\n          decodedString += tempString[i];\n        }\n      }\n      this.imageStream.data = [decodedString];\n      this.imageStream.compress = false;\n      this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n      this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n      this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n      this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n      this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n      this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n      this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n      this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n      return this.imageStream;\n    } else {\n      return this.imageStream;\n    }\n  };\n  /**\n   * Return `colorSpace` of an image.\n   * @hidden\n   * @private\n   */\n  ImageDecoder.prototype.getColorSpace = function () {\n    return this.dictionaryProperties.deviceRgb;\n  };\n  /**\n   * Return `decode parameters` of an image.\n   * @hidden\n   * @private\n   */\n  ImageDecoder.prototype.getDecodeParams = function () {\n    var decodeParams = new PdfDictionary();\n    decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n    decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n    decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n    decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n    decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n    return decodeParams;\n  };\n  /**\n   * 'readExceededJPGImage' stream\n   * @hidden\n   * @private\n   */\n  ImageDecoder.prototype.readExceededJPGImage = function (stream) {\n    this.mStream = stream;\n    var isContinueReading = true;\n    while (isContinueReading) {\n      var marker = this.getMarker(stream);\n      switch (marker) {\n        case this.sof1Marker:\n        case this.sof2Marker:\n        case this.sof3Marker:\n        case this.sof5Marker:\n        case this.sof6Marker:\n        case this.sof7Marker:\n        case this.sof9Marker:\n        case this.sof10Marker:\n        case this.sof11Marker:\n        case this.sof13Marker:\n        case this.sof14Marker:\n        case this.sof15Marker:\n          stream.position += 3;\n          this.mHeight = this.mStream.readNextTwoBytes(stream);\n          this.mWidth = this.mStream.readNextTwoBytes(stream);\n          isContinueReading = false;\n          break;\n        default:\n          this.skipStream(stream);\n          break;\n      }\n    }\n  };\n  /**\n   * 'skip' stream\n   * @hidden\n   * @private\n   */\n  ImageDecoder.prototype.skip = function (stream, noOfBytes) {\n    this.mStream = stream;\n    var temp = new ByteArray(noOfBytes);\n    this.mStream.read(temp, 0, temp.count);\n  };\n  /**\n   * 'getMarker' stream\n   * @hidden\n   * @private\n   */\n  ImageDecoder.prototype.getMarker = function (stream) {\n    var skippedByte = 0;\n    var marker = 32;\n    marker = stream.readByte(this.mStream.position);\n    stream.position++;\n    while (marker !== 255) {\n      skippedByte++;\n      marker = stream.readByte(this.mStream.position);\n      stream.position++;\n    }\n    do {\n      marker = stream.readByte(this.mStream.position);\n      stream.position++;\n    } while (marker === 255);\n    return marker;\n  };\n  /**\n   * 'skipStream' stream\n   * @hidden\n   * @private\n   */\n  ImageDecoder.prototype.skipStream = function (stream) {\n    var markerLength = this.mStream.readNextTwoBytes(stream) - 2;\n    if (markerLength > 0) {\n      stream.position += markerLength;\n    }\n  };\n  /**\n   * Number array for `png header`.\n   * @hidden\n   * @private\n   */\n  ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n  /**\n   * Number Array for `jpeg header`.\n   * @hidden\n   * @private\n   */\n  ImageDecoder.mJpegHeader = [255, 216];\n  /**\n   * Number array for `gif header`.\n   * @hidden\n   * @private\n   */\n  ImageDecoder.GIF_HEADER = 'G,I,F,8';\n  /**\n   * Number array for `bmp header.`\n   * @hidden\n   * @private\n   */\n  ImageDecoder.BMP_HEADER = 'B,M';\n  return ImageDecoder;\n}();\nexport { ImageDecoder };","map":{"version":3,"names":["ByteArray","PdfStream","DictionaryProperties","PdfName","PdfNumber","PdfBoolean","PdfDictionary","ImageFormat","ImageDecoder","stream","sof1Marker","sof2Marker","sof3Marker","sof5Marker","sof6Marker","sof7Marker","sof9Marker","sof10Marker","sof11Marker","sof13Marker","sof14Marker","sof15Marker","mFormat","Unknown","mbitsPerComponent","dictionaryProperties","mStream","initialize","Object","defineProperty","prototype","get","mHeight","enumerable","configurable","mWidth","mImageData","count","internalBuffer","buffer","checkIfJpeg","Jpeg","parseJpegImage","TypeError","reset","read","position","imgData","i","isLengthExceed","length","getBuffer","skip","readExceededJPGImage","mJpegHeader","readByte","getImageDictionary","tempArrayBuffer","imageData","imageStream","isResource","tempString","decodedString","imageDataAsNumberArray","byteLength","String","fromCharCode","data","compress","items","setValue","type","xObject","subtype","image","width","height","bitsPerComponent","filter","dctdecode","colorSpace","getColorSpace","decodeParms","getDecodeParams","deviceRgb","decodeParams","columns","blackIs1","k","predictor","isContinueReading","marker","getMarker","readNextTwoBytes","skipStream","noOfBytes","temp","skippedByte","markerLength","mPngHeader","GIF_HEADER","BMP_HEADER"],"sources":["D:/weektable/frontend/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/image-decoder.js"],"sourcesContent":["/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Start of file markers.\n         * @hidden\n         * @private\n         */\n        this.sof1Marker = 0x00C1;\n        this.sof2Marker = 0x00C2;\n        this.sof3Marker = 0x00C3;\n        this.sof5Marker = 0x00C5;\n        this.sof6Marker = 0x00C6;\n        this.sof7Marker = 0x00C7;\n        this.sof9Marker = 0x00C9;\n        this.sof10Marker = 0x00CA;\n        this.sof11Marker = 0x00CB;\n        this.sof13Marker = 0x00CD;\n        this.sof14Marker = 0x00CE;\n        this.sof15Marker = 0x00CF;\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        else {\n            throw new TypeError('Only the JPEG format is supported');\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        var isLengthExceed = false;\n        /* tslint:disable */\n        var length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n        while (i < imgData.count) {\n            i += length;\n            if (i < imgData.count) {\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this.mStream.position = 0;\n            this.skip(this.mStream, 2);\n            this.readExceededJPGImage(this.mStream);\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isResource = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * 'readExceededJPGImage' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.readExceededJPGImage = function (stream) {\n        this.mStream = stream;\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this.getMarker(stream);\n            switch (marker) {\n                case this.sof1Marker:\n                case this.sof2Marker:\n                case this.sof3Marker:\n                case this.sof5Marker:\n                case this.sof6Marker:\n                case this.sof7Marker:\n                case this.sof9Marker:\n                case this.sof10Marker:\n                case this.sof11Marker:\n                case this.sof13Marker:\n                case this.sof14Marker:\n                case this.sof15Marker:\n                    stream.position += 3;\n                    this.mHeight = this.mStream.readNextTwoBytes(stream);\n                    this.mWidth = this.mStream.readNextTwoBytes(stream);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this.skipStream(stream);\n                    break;\n            }\n        }\n    };\n    /**\n     * 'skip' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skip = function (stream, noOfBytes) {\n        this.mStream = stream;\n        var temp = new ByteArray(noOfBytes);\n        this.mStream.read(temp, 0, temp.count);\n    };\n    /**\n     * 'getMarker' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getMarker = function (stream) {\n        var skippedByte = 0;\n        var marker = 32;\n        marker = stream.readByte(this.mStream.position);\n        stream.position++;\n        while (marker !== 255) {\n            skippedByte++;\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        }\n        do {\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        } while (marker === 255);\n        return marker;\n    };\n    /**\n     * 'skipStream' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skipStream = function (stream) {\n        var markerLength = this.mStream.readNextTwoBytes(stream) - 2;\n        if (markerLength > 0) {\n            stream.position += markerLength;\n        }\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}