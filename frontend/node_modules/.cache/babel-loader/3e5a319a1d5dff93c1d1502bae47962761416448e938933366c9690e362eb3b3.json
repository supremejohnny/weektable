{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { selectAll, select, createElement, Base, detach } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined, EventHandler } from '@syncfusion/ej2-base';\nimport { Property, NotifyPropertyChanges, Event, onIntlChange } from '@syncfusion/ej2-base';\nimport { Internationalization, L10n } from '@syncfusion/ej2-base';\n/**\n * global declarations\n */\nexport var regex = {\n  /* eslint-disable no-useless-escape */\n  EMAIL: new RegExp('^[A-Za-z0-9._%+-]{1,}@[A-Za-z0-9._%+-]{1,}([.]{1}[a-zA-Z0-9]{2,}' + '|[.]{1}[a-zA-Z0-9]{2,4}[.]{1}[a-zA-Z0-9]{2,4})$'),\n  /* eslint-disable-next-line security/detect-unsafe-regex */\n  URL: /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/m,\n  DATE_ISO: new RegExp('^([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$'),\n  DIGITS: new RegExp('^[0-9]*$'),\n  PHONE: new RegExp('^[+]?[0-9]{9,13}$'),\n  CREDITCARD: new RegExp('^\\\\d{13,16}$')\n  /* eslint-enable no-useless-escape */\n};\n/**\n * ErrorOption values\n *\n * @private\n */\nexport var ErrorOption;\n(function (ErrorOption) {\n  /**\n   * Defines the error message.\n   */\n  ErrorOption[ErrorOption[\"Message\"] = 0] = \"Message\";\n  /**\n   * Defines the error element type.\n   */\n  ErrorOption[ErrorOption[\"Label\"] = 1] = \"Label\";\n})(ErrorOption || (ErrorOption = {}));\n/**\n * FormValidator class enables you to validate the form fields based on your defined rules\n * ```html\n * <form id='formId'>\n *  <input type='text' name='Name' />\n *  <input type='text' name='Age' />\n * </form>\n * <script>\n *   let formObject = new FormValidator('#formId', {\n *      rules: { Name: { required: true }, Age: { range: [18, 30] } };\n *   });\n *   formObject.validate();\n * </script>\n * ```\n */\nvar FormValidator = /** @class */function (_super) {\n  __extends(FormValidator, _super);\n  /**\n   * Initializes the FormValidator.\n   *\n   * @param {string | HTMLFormElement} element - Specifies the element to render as component.\n   * @param {FormValidatorModel} options - Specifies the FormValidator model.\n   * @private\n   */\n  function FormValidator(element, options) {\n    var _this = _super.call(this, options, element) || this;\n    _this.validated = [];\n    _this.errorRules = [];\n    _this.allowSubmit = false;\n    _this.required = 'required';\n    _this.infoElement = null;\n    _this.inputElement = null;\n    _this.selectQuery = 'input:not([type=reset]):not([type=button]), select, textarea';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _this.localyMessage = {};\n    /**\n     * Specifies the default messages for validation rules.\n     *\n     * @default { List of validation message }\n     */\n    _this.defaultMessages = {\n      required: 'This field is required.',\n      email: 'Please enter a valid email address.',\n      url: 'Please enter a valid URL.',\n      date: 'Please enter a valid date.',\n      dateIso: 'Please enter a valid date ( ISO ).',\n      creditcard: 'Please enter valid card number',\n      number: 'Please enter a valid number.',\n      digits: 'Please enter only digits.',\n      maxLength: 'Please enter no more than {0} characters.',\n      minLength: 'Please enter at least {0} characters.',\n      rangeLength: 'Please enter a value between {0} and {1} characters long.',\n      range: 'Please enter a value between {0} and {1}.',\n      max: 'Please enter a value less than or equal to {0}.',\n      min: 'Please enter a value greater than or equal to {0}.',\n      regex: 'Please enter a correct value.',\n      tel: 'Please enter a valid phone number.',\n      pattern: 'Please enter a correct pattern value.',\n      equalTo: 'Please enter the valid match text'\n    };\n    if (typeof _this.rules === 'undefined') {\n      _this.rules = {};\n    }\n    _this.l10n = new L10n('formValidator', _this.defaultMessages, _this.locale);\n    if (_this.locale) {\n      _this.localeFunc();\n    }\n    onIntlChange.on('notifyExternalChange', _this.afterLocalization, _this);\n    element = typeof element === 'string' ? select(element, document) : element;\n    // Set novalidate to prevent default HTML5 form validation\n    if (_this.element != null) {\n      _this.element.setAttribute('novalidate', '');\n      _this.inputElements = selectAll(_this.selectQuery, _this.element);\n      _this.createHTML5Rules();\n      _this.wireEvents();\n    } else {\n      return undefined;\n    }\n    return _this;\n  }\n  FormValidator_1 = FormValidator;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n  /**\n   * Add validation rules to the corresponding input element based on `name` attribute.\n   *\n   * @param {string} name `name` of form field.\n   * @param {Object} rules Validation rules for the corresponding element.\n   * @returns {void}\n   */\n  FormValidator.prototype.addRules = function (name, rules) {\n    if (name) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (this.rules.hasOwnProperty(name)) {\n        extend(this.rules[\"\" + name], rules, {});\n      } else {\n        this.rules[\"\" + name] = rules;\n      }\n    }\n  };\n  /**\n   * Remove validation to the corresponding field based on name attribute.\n   * When no parameter is passed, remove all the validations in the form.\n   *\n   * @param {string} name Input name attribute value.\n   * @param {string[]} rules List of validation rules need to be remove from the corresponding element.\n   * @returns {void}\n   */\n  FormValidator.prototype.removeRules = function (name, rules) {\n    if (!name && !rules) {\n      this.rules = {};\n    } else if (this.rules[\"\" + name] && !rules) {\n      delete this.rules[\"\" + name];\n    } else if (!isNullOrUndefined(this.rules[\"\" + name] && rules)) {\n      for (var i = 0; i < rules.length; i++) {\n        delete this.rules[\"\" + name][rules[parseInt(i.toString(), 10)]];\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * Validate the current form values using defined rules.\n   * Returns `true` when the form is valid otherwise `false`\n   *\n   * @param {string} selected - Optional parameter to validate specified element.\n   * @returns {boolean} - Returns form validation status.\n   */\n  FormValidator.prototype.validate = function (selected) {\n    var rules = Object.keys(this.rules);\n    if (selected && rules.length) {\n      this.validateRules(selected);\n      //filter the selected element it don't have any valid input element\n      return rules.indexOf(selected) !== -1 && this.errorRules.filter(function (data) {\n        return data.name === selected;\n      }).length === 0;\n    } else {\n      this.errorRules = [];\n      for (var _i = 0, rules_1 = rules; _i < rules_1.length; _i++) {\n        var name_1 = rules_1[_i];\n        this.validateRules(name_1);\n      }\n      return this.errorRules.length === 0;\n    }\n  };\n  /**\n   * Reset the value of all the fields in form.\n   *\n   * @returns {void}\n   */\n  FormValidator.prototype.reset = function () {\n    this.element.reset();\n    this.clearForm();\n  };\n  /**\n   * Get input element by name.\n   *\n   * @param {string} name - Input element name attribute value.\n   * @returns {HTMLInputElement} - Returns the input element.\n   */\n  FormValidator.prototype.getInputElement = function (name) {\n    this.inputElement = select('[name=\"' + name + '\"]', this.element);\n    return this.inputElement;\n  };\n  /**\n   * Destroy the form validator object and error elements.\n   *\n   * @returns {void}\n   */\n  FormValidator.prototype.destroy = function () {\n    this.reset();\n    this.unwireEvents();\n    this.rules = {};\n    var elements = selectAll('.' + this.errorClass + ', .' + this.validClass, this.element);\n    for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n      var element = elements_1[_i];\n      detach(element);\n    }\n    _super.prototype.destroy.call(this);\n    this.infoElement = null;\n    onIntlChange.off('notifyExternalChange', this.afterLocalization);\n  };\n  /**\n   * @param {FormValidatorModel} newProp - Returns the dynamic property value of the component.\n   * @param {FormValidatorModel} oldProp - Returns the previous property value of the component.\n   * @returns {void}\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  FormValidator.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'locale':\n          this.localeFunc();\n          break;\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n  FormValidator.prototype.localeFunc = function () {\n    for (var _i = 0, _a = Object.keys(this.defaultMessages); _i < _a.length; _i++) {\n      var key = _a[_i];\n      this.l10n.setLocale(this.locale);\n      var value = this.l10n.getConstant(key);\n      this.localyMessage[\"\" + key] = value;\n    }\n  };\n  /**\n   * @private\n   * @returns {string} - Returns the component name.\n   */\n  FormValidator.prototype.getModuleName = function () {\n    return 'formvalidator';\n  };\n  /**\n   * @param {any} args - Specifies the culture name.\n   * @returns {void}\n   * @private\n   */\n  FormValidator.prototype.afterLocalization = function (args) {\n    this.locale = args.locale;\n    this.localeFunc();\n  };\n  /**\n   * Allows you to refresh the form validator base events to the elements inside the form.\n   *\n   * @returns {void}\n   */\n  FormValidator.prototype.refresh = function () {\n    this.unwireEvents();\n    this.inputElements = selectAll(this.selectQuery, this.element);\n    this.wireEvents();\n  };\n  FormValidator.prototype.clearForm = function () {\n    this.errorRules = [];\n    this.validated = [];\n    var elements = selectAll(this.selectQuery, this.element);\n    for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {\n      var element = elements_2[_i];\n      var input = element;\n      input.removeAttribute('aria-invalid');\n      var inputParent = input.parentElement;\n      var grandParent = inputParent.parentElement;\n      if (inputParent.classList.contains('e-control-wrapper') || inputParent.classList.contains('e-wrapper') || input.classList.contains('e-input') && inputParent.classList.contains('e-input-group')) {\n        inputParent.classList.remove(this.errorClass);\n      } else if (grandParent != null && (grandParent.classList.contains('e-control-wrapper') || grandParent.classList.contains('e-wrapper'))) {\n        grandParent.classList.remove(this.errorClass);\n      } else {\n        input.classList.remove(this.errorClass);\n      }\n      if (input.name.length > 0) {\n        this.getInputElement(input.name);\n        this.getErrorElement(input.name);\n        this.hideMessage(input.name);\n      }\n      if (inputParent.classList.contains('e-control-wrapper') || inputParent.classList.contains('e-wrapper') || input.classList.contains('e-input') && inputParent.classList.contains('e-input-group')) {\n        inputParent.classList.remove(this.validClass);\n      } else if (grandParent != null && (grandParent.classList.contains('e-control-wrapper') || grandParent.classList.contains('e-wrapper'))) {\n        grandParent.classList.remove(this.validClass);\n      } else {\n        input.classList.remove(this.validClass);\n      }\n    }\n  };\n  FormValidator.prototype.createHTML5Rules = function () {\n    var defRules = ['required', 'validateHidden', 'regex', 'rangeLength', 'maxLength', 'minLength', 'dateIso', 'digits', 'pattern', 'data-val-required', 'type', 'data-validation', 'min', 'max', 'range', 'equalTo', 'data-val-minlength-min', 'data-val-equalto-other', 'data-val-maxlength-max', 'data-val-range-min', 'data-val-regex-pattern', 'data-val-length-max', 'data-val-creditcard', 'data-val-phone'];\n    var acceptedTypes = ['hidden', 'email', 'url', 'date', 'number', 'tel'];\n    for (var _i = 0, _a = this.inputElements; _i < _a.length; _i++) {\n      var input = _a[_i];\n      // Default attribute rules\n      var allRule = {};\n      for (var _b = 0, defRules_1 = defRules; _b < defRules_1.length; _b++) {\n        var rule = defRules_1[_b];\n        if (input.getAttribute(rule) !== null) {\n          switch (rule) {\n            case 'required':\n              this.defRule(input, allRule, rule, input.required);\n              break;\n            case 'data-validation':\n              rule = input.getAttribute(rule);\n              this.defRule(input, allRule, rule, true);\n              break;\n            case 'type':\n              if (acceptedTypes.indexOf(input.type) !== -1) {\n                this.defRule(input, allRule, input.type, true);\n              }\n              break;\n            case 'rangeLength':\n            case 'range':\n              this.defRule(input, allRule, rule, JSON.parse(input.getAttribute(rule)));\n              break;\n            case 'equalTo':\n              {\n                var id = input.getAttribute(rule);\n                this.defRule(input, allRule, rule, id);\n              }\n              break;\n            default:\n              if (input.getAttribute('data-val') === 'true') {\n                this.annotationRule(input, allRule, rule, input.getAttribute(rule));\n              } else {\n                this.defRule(input, allRule, rule, input.getAttribute(rule));\n              }\n          }\n        }\n      }\n      //adding pattern type validation\n      if (Object.keys(allRule).length !== 0) {\n        this.addRules(input.name, allRule);\n      }\n    }\n  };\n  FormValidator.prototype.annotationRule = function (input, ruleCon, ruleName, value) {\n    var annotationRule = ruleName.split('-');\n    var rulesList = ['required', 'creditcard', 'phone', 'maxlength', 'minlength', 'range', 'regex', 'equalto'];\n    var ruleFirstName = annotationRule[annotationRule.length - 1];\n    var ruleSecondName = annotationRule[annotationRule.length - 2];\n    if (rulesList.indexOf(ruleFirstName) !== -1) {\n      switch (ruleFirstName) {\n        case 'required':\n          this.defRule(input, ruleCon, 'required', value);\n          break;\n        case 'creditcard':\n          this.defRule(input, ruleCon, 'creditcard', value);\n          break;\n        case 'phone':\n          this.defRule(input, ruleCon, 'tel', value);\n          break;\n      }\n    } else if (rulesList.indexOf(ruleSecondName) !== -1) {\n      switch (ruleSecondName) {\n        case 'maxlength':\n          this.defRule(input, ruleCon, 'maxLength', value);\n          break;\n        case 'minlength':\n          this.defRule(input, ruleCon, 'minLength', value);\n          break;\n        case 'range':\n          {\n            var minvalue = input.getAttribute('data-val-range-min');\n            var maxvalue = input.getAttribute('data-val-range-max');\n            this.defRule(input, ruleCon, 'range', [minvalue, maxvalue]);\n          }\n          break;\n        case 'equalto':\n          {\n            var id = input.getAttribute(ruleName).split('.');\n            this.defRule(input, ruleCon, 'equalTo', id[id.length - 1]);\n          }\n          break;\n        case 'regex':\n          this.defRule(input, ruleCon, 'regex', value);\n          break;\n      }\n    }\n  };\n  FormValidator.prototype.defRule = function (input, ruleCon, ruleName, value) {\n    var message = input.getAttribute('data-' + ruleName + '-message');\n    var annotationMessage = input.getAttribute('data-val-' + ruleName);\n    var customMessage;\n    if (this.rules[input.name] && ruleName !== 'validateHidden' && ruleName !== 'hidden') {\n      this.getInputElement(input.name);\n      customMessage = this.getErrorMessage(this.rules[input.name][\"\" + ruleName], ruleName);\n    }\n    if (message) {\n      value = [value, message];\n    } else if (annotationMessage) {\n      value = [value, annotationMessage];\n    } else if (customMessage) {\n      value = [value, customMessage];\n    }\n    ruleCon[\"\" + ruleName] = value;\n  };\n  // Wire events to the form elements\n  FormValidator.prototype.wireEvents = function () {\n    for (var _i = 0, _a = this.inputElements; _i < _a.length; _i++) {\n      var input = _a[_i];\n      if (FormValidator_1.isCheckable(input)) {\n        EventHandler.add(input, 'click', this.clickHandler, this);\n      } else if (input.tagName === 'SELECT') {\n        EventHandler.add(input, 'change', this.changeHandler, this);\n      } else {\n        EventHandler.add(input, 'focusout', this.focusOutHandler, this);\n        EventHandler.add(input, 'keyup', this.keyUpHandler, this);\n      }\n    }\n    EventHandler.add(this.element, 'submit', this.submitHandler, this);\n    EventHandler.add(this.element, 'reset', this.resetHandler, this);\n  };\n  // UnWire events to the form elements\n  FormValidator.prototype.unwireEvents = function () {\n    for (var _i = 0, _a = this.inputElements; _i < _a.length; _i++) {\n      var input = _a[_i];\n      EventHandler.clearEvents(input);\n    }\n    EventHandler.remove(this.element, 'submit', this.submitHandler);\n    EventHandler.remove(this.element, 'reset', this.resetHandler);\n  };\n  // Handle input element focusout event\n  FormValidator.prototype.focusOutHandler = function (e) {\n    this.trigger('focusout', e);\n    //FormValidator.triggerCallback(this.focusout, e);\n    var element = e.target;\n    if (this.rules[element.name]) {\n      if (this.rules[element.name][this.required] || element.value.length > 0) {\n        this.validate(element.name);\n      } else if (this.validated.indexOf(element.name) === -1) {\n        this.validated.push(element.name);\n      }\n    }\n  };\n  // Handle input element keyup event\n  FormValidator.prototype.keyUpHandler = function (e) {\n    this.trigger('keyup', e);\n    var element = e.target;\n    // List of keys need to prevent while validation\n    var excludeKeys = [16, 17, 18, 20, 35, 36, 37, 38, 39, 40, 45, 144, 225];\n    if (e.which === 9 && (!this.rules[element.name] || this.rules[element.name] && !this.rules[element.name][this.required])) {\n      return;\n    }\n    if (this.validated.indexOf(element.name) !== -1 && this.rules[element.name] && excludeKeys.indexOf(e.which) === -1) {\n      this.validate(element.name);\n    }\n  };\n  // Handle input click event\n  FormValidator.prototype.clickHandler = function (e) {\n    this.trigger('click', e);\n    var element = e.target;\n    // If element type is not submit allow validation\n    if (element.type !== 'submit') {\n      this.validate(element.name);\n    } else if (element.getAttribute('formnovalidate') !== null) {\n      // Prevent form validation, if submit button has formnovalidate attribute\n      this.allowSubmit = true;\n    }\n  };\n  // Handle input change event\n  FormValidator.prototype.changeHandler = function (e) {\n    this.trigger('change', e);\n    var element = e.target;\n    this.validate(element.name);\n  };\n  // Handle form submit event\n  FormValidator.prototype.submitHandler = function (e) {\n    this.trigger('submit', e);\n    //FormValidator.triggerCallback(this.submit, e);\n    // Prevent form submit if validation failed\n    if (!this.allowSubmit && !this.validate()) {\n      e.preventDefault();\n    } else {\n      this.allowSubmit = false;\n    }\n  };\n  // Handle form reset\n  FormValidator.prototype.resetHandler = function () {\n    this.clearForm();\n  };\n  // Validate each rule based on input element name\n  FormValidator.prototype.validateRules = function (name) {\n    if (!this.rules[\"\" + name]) {\n      return;\n    }\n    var rules = Object.keys(this.rules[\"\" + name]);\n    var hiddenType = false;\n    var validateHiddenType = false;\n    var vhPos = rules.indexOf('validateHidden');\n    var hPos = rules.indexOf('hidden');\n    this.getInputElement(name);\n    if (hPos !== -1) {\n      hiddenType = true;\n    }\n    if (vhPos !== -1) {\n      validateHiddenType = true;\n    }\n    if (!hiddenType || hiddenType && validateHiddenType) {\n      if (vhPos !== -1) {\n        rules.splice(vhPos, 1);\n      }\n      if (hPos !== -1) {\n        rules.splice(hPos - 1, 1);\n      }\n      this.getErrorElement(name);\n      for (var _i = 0, rules_2 = rules; _i < rules_2.length; _i++) {\n        var rule = rules_2[_i];\n        var errorMessage = this.getErrorMessage(this.rules[\"\" + name][\"\" + rule], rule);\n        var errorRule = {\n          name: name,\n          message: errorMessage\n        };\n        var eventArgs = {\n          inputName: name,\n          element: this.inputElement,\n          message: errorMessage\n        };\n        if (!this.isValid(name, rule) && !this.inputElement.classList.contains(this.ignore)) {\n          this.removeErrorRules(name);\n          this.errorRules.push(errorRule);\n          // Set aria attributes to invalid elements\n          this.inputElement.setAttribute('aria-invalid', 'true');\n          this.inputElement.setAttribute('aria-describedby', this.inputElement.id + '-info');\n          var inputParent = this.inputElement.parentElement;\n          var grandParent = inputParent.parentElement;\n          if (inputParent.classList.contains('e-control-wrapper') || inputParent.classList.contains('e-wrapper') || this.inputElement.classList.contains('e-input') && inputParent.classList.contains('e-input-group')) {\n            inputParent.classList.add(this.errorClass);\n            inputParent.classList.remove(this.validClass);\n          } else if (grandParent != null && (grandParent.classList.contains('e-control-wrapper') || grandParent.classList.contains('e-wrapper'))) {\n            grandParent.classList.add(this.errorClass);\n            grandParent.classList.remove(this.validClass);\n          } else {\n            this.inputElement.classList.add(this.errorClass);\n            this.inputElement.classList.remove(this.validClass);\n          }\n          if (!this.infoElement) {\n            this.createErrorElement(name, errorRule.message, this.inputElement);\n          } else {\n            this.showMessage(errorRule);\n          }\n          eventArgs.errorElement = this.infoElement;\n          eventArgs.status = 'failure';\n          if (inputParent.classList.contains('e-control-wrapper') || inputParent.classList.contains('e-wrapper') || this.inputElement.classList.contains('e-input') && inputParent.classList.contains('e-input-group')) {\n            inputParent.classList.add(this.errorClass);\n            inputParent.classList.remove(this.validClass);\n          } else if (grandParent != null && (grandParent.classList.contains('e-control-wrapper') || grandParent.classList.contains('e-wrapper'))) {\n            grandParent.classList.add(this.errorClass);\n            grandParent.classList.remove(this.validClass);\n          } else {\n            this.inputElement.classList.add(this.errorClass);\n            this.inputElement.classList.remove(this.validClass);\n          }\n          this.optionalValidationStatus(name, eventArgs);\n          this.trigger('validationComplete', eventArgs);\n          // Set aria-required to required rule elements\n          if (rule === 'required') {\n            this.inputElement.setAttribute('aria-required', 'true');\n          }\n          break;\n        } else {\n          this.hideMessage(name);\n          eventArgs.status = 'success';\n          this.trigger('validationComplete', eventArgs);\n        }\n      }\n    } else {\n      return;\n    }\n  };\n  // Update the optional validation status\n  FormValidator.prototype.optionalValidationStatus = function (name, refer) {\n    if (!this.rules[\"\" + name][this.required] && !this.inputElement.value.length && !isNullOrUndefined(this.infoElement)) {\n      this.infoElement.innerHTML = this.inputElement.value;\n      this.infoElement.setAttribute('aria-invalid', 'false');\n      refer.status = '';\n      this.hideMessage(name);\n    }\n  };\n  // Check the input element whether it's value satisfy the validation rule or not\n  FormValidator.prototype.isValid = function (name, rule) {\n    var params = this.rules[\"\" + name][\"\" + rule];\n    var param = params instanceof Array && typeof params[1] === 'string' ? params[0] : params;\n    var currentRule = this.rules[\"\" + name][\"\" + rule];\n    var dateFormat = (rule === 'min' || rule === 'max') && this.rules['' + name].date && typeof this.rules['' + name].date === 'string' ? this.rules['' + name].date : null;\n    var args = {\n      value: this.inputElement.value,\n      param: param,\n      element: this.inputElement,\n      formElement: this.element,\n      format: dateFormat,\n      culture: this.locale\n    };\n    this.trigger('validationBegin', args);\n    if (!args.param && rule === 'required') {\n      return true;\n    }\n    if (currentRule && typeof currentRule[0] === 'function') {\n      var fn = currentRule[0];\n      return fn.call(this, {\n        element: this.inputElement,\n        value: this.inputElement.value\n      });\n    } else if (FormValidator_1.isCheckable(this.inputElement)) {\n      if (rule !== 'required') {\n        return true;\n      }\n      return selectAll('input[name=\"' + name + '\"]:checked', this.element).length > 0;\n    } else {\n      return FormValidator_1.checkValidator[\"\" + rule](args);\n    }\n  };\n  // Return default error message or custom error message\n  FormValidator.prototype.getErrorMessage = function (ruleValue, rule) {\n    var message = this.inputElement.getAttribute('data-' + rule + '-message') ? this.inputElement.getAttribute('data-' + rule + '-message') : ruleValue instanceof Array && typeof ruleValue[1] === 'string' ? ruleValue[1] : Object.keys(this.localyMessage).length !== 0 ? this.localyMessage[\"\" + rule] : this.defaultMessages[\"\" + rule];\n    var formats = message.match(/{(\\d)}/g);\n    if (!isNullOrUndefined(formats)) {\n      for (var i = 0; i < formats.length; i++) {\n        var value = ruleValue instanceof Array ? ruleValue[parseInt(i.toString(), 10)] : ruleValue;\n        message = message.replace(formats[parseInt(i.toString(), 10)], value);\n      }\n    }\n    return message;\n  };\n  // Create error element based on name and error message\n  FormValidator.prototype.createErrorElement = function (name, message, input) {\n    var errorElement = createElement(this.errorElement, {\n      className: this.errorClass,\n      innerHTML: message,\n      attrs: {\n        for: name\n      }\n    });\n    // Create message design if errorOption is message\n    if (this.errorOption === ErrorOption.Message) {\n      errorElement.classList.remove(this.errorClass);\n      errorElement.classList.add('e-message');\n      errorElement = createElement(this.errorContainer, {\n        className: this.errorClass,\n        innerHTML: errorElement.outerHTML\n      });\n    }\n    errorElement.id = this.inputElement.name + '-info';\n    // Append error message into MVC error message element\n    if (this.element.querySelector('[data-valmsg-for=\"' + input.id + '\"]')) {\n      this.element.querySelector('[data-valmsg-for=\"' + input.id + '\"]').appendChild(errorElement);\n    } else if (input.hasAttribute('data-msg-containerid') === true) {\n      // Append error message into custom div element\n      var containerId = input.getAttribute('data-msg-containerid');\n      var divElement = select('#' + containerId, this.element);\n      divElement.appendChild(errorElement);\n    } else if (this.customPlacement != null) {\n      // Call custom placement function if customPlacement is not null\n      this.customPlacement.call(this, this.inputElement, errorElement);\n    } else {\n      var inputParent = this.inputElement.parentElement;\n      var grandParent = inputParent.parentElement;\n      if (inputParent.classList.contains('e-control-wrapper') || inputParent.classList.contains('e-wrapper')) {\n        grandParent.insertBefore(errorElement, inputParent.nextSibling);\n      } else if (grandParent.classList.contains('e-control-wrapper') || grandParent.classList.contains('e-wrapper')) {\n        grandParent.parentElement.insertBefore(errorElement, grandParent.nextSibling);\n      } else {\n        inputParent.insertBefore(errorElement, this.inputElement.nextSibling);\n      }\n    }\n    errorElement.style.display = 'block';\n    this.getErrorElement(name);\n    this.validated.push(name);\n    this.checkRequired(name);\n  };\n  // Get error element by name\n  FormValidator.prototype.getErrorElement = function (name) {\n    this.infoElement = select(this.errorElement + '.' + this.errorClass, this.inputElement.parentElement);\n    if (!this.infoElement) {\n      this.infoElement = select(this.errorElement + '.' + this.errorClass + '[for=\"' + name + '\"]', this.element);\n    }\n    return this.infoElement;\n  };\n  // Remove existing rule from errorRules object\n  FormValidator.prototype.removeErrorRules = function (name) {\n    for (var i = 0; i < this.errorRules.length; i++) {\n      var rule = this.errorRules[parseInt(i.toString(), 10)];\n      if (rule.name === name) {\n        this.errorRules.splice(i, 1);\n      }\n    }\n  };\n  // Show error message to the input element\n  FormValidator.prototype.showMessage = function (errorRule) {\n    this.infoElement.style.display = 'block';\n    this.infoElement.innerHTML = errorRule.message;\n    this.checkRequired(errorRule.name);\n  };\n  // Hide error message based on input name\n  FormValidator.prototype.hideMessage = function (name) {\n    if (this.infoElement) {\n      this.infoElement.style.display = 'none';\n      this.removeErrorRules(name);\n      var inputParent = this.inputElement.parentElement;\n      var grandParent = inputParent.parentElement;\n      if (inputParent.classList.contains('e-control-wrapper') || inputParent.classList.contains('e-wrapper') || this.inputElement.classList.contains('e-input') && inputParent.classList.contains('e-input-group')) {\n        inputParent.classList.add(this.validClass);\n        inputParent.classList.remove(this.errorClass);\n      } else if (grandParent != null && (grandParent.classList.contains('e-control-wrapper') || grandParent.classList.contains('e-wrapper'))) {\n        grandParent.classList.add(this.validClass);\n        grandParent.classList.remove(this.errorClass);\n      } else {\n        this.inputElement.classList.add(this.validClass);\n        this.inputElement.classList.remove(this.errorClass);\n      }\n      this.inputElement.setAttribute('aria-invalid', 'false');\n    }\n  };\n  // Check whether the input element have required rule and its value is not empty\n  FormValidator.prototype.checkRequired = function (name) {\n    if (!this.rules[\"\" + name][this.required] && !this.inputElement.value.length && !isNullOrUndefined(this.infoElement)) {\n      this.infoElement.innerHTML = this.inputElement.value;\n      this.infoElement.setAttribute('aria-invalid', 'false');\n      this.hideMessage(name);\n    }\n  };\n  // Return boolean result if the input have checkable or submit types\n  FormValidator.isCheckable = function (input) {\n    var inputType = input.getAttribute('type');\n    return inputType && (inputType === 'checkbox' || inputType === 'radio' || inputType === 'submit');\n  };\n  var FormValidator_1;\n  // List of function to validate the rules\n  FormValidator.checkValidator = {\n    required: function (option) {\n      return !isNaN(Date.parse(option.value)) ? !isNaN(new Date(option.value).getTime()) : option.value.toString().length > 0;\n    },\n    email: function (option) {\n      return regex.EMAIL.test(option.value);\n    },\n    url: function (option) {\n      return regex.URL.test(option.value);\n    },\n    dateIso: function (option) {\n      return regex.DATE_ISO.test(option.value);\n    },\n    tel: function (option) {\n      return regex.PHONE.test(option.value);\n    },\n    creditcard: function (option) {\n      return regex.CREDITCARD.test(option.value);\n    },\n    number: function (option) {\n      return !isNaN(Number(option.value)) && String(option.value).indexOf(' ') === -1;\n    },\n    digits: function (option) {\n      return regex.DIGITS.test(option.value);\n    },\n    maxLength: function (option) {\n      return option.value.length <= Number(option.param);\n    },\n    minLength: function (option) {\n      return option.value.length >= Number(option.param);\n    },\n    rangeLength: function (option) {\n      var param = option.param;\n      return option.value.length >= param[0] && option.value.length <= param[1];\n    },\n    range: function (option) {\n      var param = option.param;\n      return !isNaN(Number(option.value)) && Number(option.value) >= param[0] && Number(option.value) <= param[1];\n    },\n    date: function (option) {\n      if (!isNullOrUndefined(option.param) && typeof option.param === 'string' && option.param !== '') {\n        var globalize = option.culture && option.culture !== '' ? new Internationalization(option.culture) : new Internationalization();\n        var dateOptions = {\n          format: option.param.toString(),\n          type: 'dateTime',\n          skeleton: 'yMd'\n        };\n        var dateValue = globalize.parseDate(option.value, dateOptions);\n        return !isNullOrUndefined(dateValue) && dateValue instanceof Date && !isNaN(+dateValue);\n      } else {\n        return !isNaN(new Date(option.value).getTime());\n      }\n    },\n    max: function (option) {\n      if (!isNaN(Number(option.value))) {\n        // Maximum rule validation for number\n        return +option.value <= +option.param;\n      }\n      // Maximum rule validation for date\n      if (option.format && option.format !== '') {\n        var globalize = option.culture && option.culture !== '' ? new Internationalization(option.culture) : new Internationalization();\n        var dateOptions = {\n          format: option.format.toString(),\n          type: 'dateTime',\n          skeleton: 'yMd'\n        };\n        var dateValue = globalize.parseDate(option.value, dateOptions);\n        var maxValue = typeof option.param === 'string' ? globalize.parseDate(JSON.parse(JSON.stringify(option.param)), dateOptions) : option.param;\n        return new Date(dateValue).getTime() <= new Date(maxValue).getTime();\n      } else {\n        return new Date(option.value).getTime() <= new Date(JSON.parse(JSON.stringify(option.param))).getTime();\n      }\n    },\n    min: function (option) {\n      if (!isNaN(Number(option.value))) {\n        // Minimum rule validation for number\n        return +option.value >= +option.param;\n      } else if (option.value.indexOf(',') !== -1) {\n        var uNum = option.value.replace(/,/g, '');\n        return parseFloat(uNum) >= Number(option.param); // Convert option.param to a number\n      } else {\n        // Minimum rule validation for date\n        if (option.format && option.format !== '') {\n          var globalize = option.culture && option.culture !== '' ? new Internationalization(option.culture) : new Internationalization();\n          var dateOptions = {\n            format: option.format.toString(),\n            type: 'dateTime',\n            skeleton: 'yMd'\n          };\n          var dateValue = globalize.parseDate(option.value, dateOptions);\n          var minValue = typeof option.param === 'string' ? globalize.parseDate(JSON.parse(JSON.stringify(option.param)), dateOptions) : option.param;\n          return new Date(dateValue).getTime() >= new Date(minValue).getTime();\n        } else {\n          return new Date(option.value).getTime() >= new Date(JSON.parse(JSON.stringify(option.param))).getTime();\n        }\n      }\n    },\n    regex: function (option) {\n      /* eslint-disable-next-line security/detect-non-literal-regexp */\n      return new RegExp(option.param).test(option.value);\n    },\n    equalTo: function (option) {\n      var compareTo = option.formElement.querySelector('#' + option.param);\n      option.param = compareTo.value;\n      return option.param === option.value;\n    }\n  };\n  __decorate([Property('')], FormValidator.prototype, \"locale\", void 0);\n  __decorate([Property('e-hidden')], FormValidator.prototype, \"ignore\", void 0);\n  __decorate([Property()], FormValidator.prototype, \"rules\", void 0);\n  __decorate([Property('e-error')], FormValidator.prototype, \"errorClass\", void 0);\n  __decorate([Property('e-valid')], FormValidator.prototype, \"validClass\", void 0);\n  __decorate([Property('label')], FormValidator.prototype, \"errorElement\", void 0);\n  __decorate([Property('div')], FormValidator.prototype, \"errorContainer\", void 0);\n  __decorate([Property(ErrorOption.Label)], FormValidator.prototype, \"errorOption\", void 0);\n  __decorate([Event()], FormValidator.prototype, \"focusout\", void 0);\n  __decorate([Event()], FormValidator.prototype, \"keyup\", void 0);\n  __decorate([Event()], FormValidator.prototype, \"click\", void 0);\n  __decorate([Event()], FormValidator.prototype, \"change\", void 0);\n  __decorate([Event()], FormValidator.prototype, \"submit\", void 0);\n  __decorate([Event()], FormValidator.prototype, \"validationBegin\", void 0);\n  __decorate([Event()], FormValidator.prototype, \"validationComplete\", void 0);\n  __decorate([Event()], FormValidator.prototype, \"customPlacement\", void 0);\n  FormValidator = FormValidator_1 = __decorate([NotifyPropertyChanges], FormValidator);\n  return FormValidator;\n}(Base);\nexport { FormValidator };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","selectAll","select","createElement","Base","detach","extend","isNullOrUndefined","EventHandler","Property","NotifyPropertyChanges","Event","onIntlChange","Internationalization","L10n","regex","EMAIL","RegExp","URL","DATE_ISO","DIGITS","PHONE","CREDITCARD","ErrorOption","FormValidator","_super","element","options","_this","call","validated","errorRules","allowSubmit","required","infoElement","inputElement","selectQuery","localyMessage","defaultMessages","email","url","date","dateIso","creditcard","number","digits","maxLength","minLength","rangeLength","range","max","min","tel","pattern","equalTo","rules","l10n","locale","localeFunc","on","afterLocalization","document","setAttribute","inputElements","createHTML5Rules","wireEvents","undefined","FormValidator_1","addRules","name","removeRules","parseInt","toString","validate","selected","keys","validateRules","indexOf","filter","data","_i","rules_1","name_1","reset","clearForm","getInputElement","destroy","unwireEvents","elements","errorClass","validClass","elements_1","off","onPropertyChanged","newProp","oldProp","_a","prop","setLocale","value","getConstant","getModuleName","args","refresh","elements_2","input","removeAttribute","inputParent","parentElement","grandParent","classList","contains","remove","getErrorElement","hideMessage","defRules","acceptedTypes","allRule","_b","defRules_1","rule","getAttribute","defRule","type","JSON","parse","id","annotationRule","ruleCon","ruleName","split","rulesList","ruleFirstName","ruleSecondName","minvalue","maxvalue","message","annotationMessage","customMessage","getErrorMessage","isCheckable","add","clickHandler","tagName","changeHandler","focusOutHandler","keyUpHandler","submitHandler","resetHandler","clearEvents","e","trigger","push","excludeKeys","which","preventDefault","hiddenType","validateHiddenType","vhPos","hPos","splice","rules_2","errorMessage","errorRule","eventArgs","inputName","isValid","ignore","removeErrorRules","createErrorElement","showMessage","errorElement","status","optionalValidationStatus","refer","innerHTML","params","param","currentRule","dateFormat","formElement","format","culture","fn","checkValidator","ruleValue","formats","match","replace","className","attrs","for","errorOption","Message","errorContainer","outerHTML","querySelector","appendChild","hasAttribute","containerId","divElement","customPlacement","insertBefore","nextSibling","style","display","checkRequired","inputType","option","isNaN","Date","getTime","test","Number","String","globalize","dateOptions","skeleton","dateValue","parseDate","maxValue","stringify","uNum","parseFloat","minValue","compareTo","Label"],"sources":["D:/weektable/frontend/node_modules/@syncfusion/ej2-inputs/src/form-validator/form-validator.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { selectAll, select, createElement, Base, detach } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined, EventHandler } from '@syncfusion/ej2-base';\nimport { Property, NotifyPropertyChanges, Event, onIntlChange } from '@syncfusion/ej2-base';\nimport { Internationalization, L10n } from '@syncfusion/ej2-base';\n/**\n * global declarations\n */\nexport var regex = {\n    /* eslint-disable no-useless-escape */\n    EMAIL: new RegExp('^[A-Za-z0-9._%+-]{1,}@[A-Za-z0-9._%+-]{1,}([.]{1}[a-zA-Z0-9]{2,}' +\n        '|[.]{1}[a-zA-Z0-9]{2,4}[.]{1}[a-zA-Z0-9]{2,4})$'),\n    /* eslint-disable-next-line security/detect-unsafe-regex */\n    URL: /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/m,\n    DATE_ISO: new RegExp('^([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$'),\n    DIGITS: new RegExp('^[0-9]*$'),\n    PHONE: new RegExp('^[+]?[0-9]{9,13}$'),\n    CREDITCARD: new RegExp('^\\\\d{13,16}$')\n    /* eslint-enable no-useless-escape */\n};\n/**\n * ErrorOption values\n *\n * @private\n */\nexport var ErrorOption;\n(function (ErrorOption) {\n    /**\n     * Defines the error message.\n     */\n    ErrorOption[ErrorOption[\"Message\"] = 0] = \"Message\";\n    /**\n     * Defines the error element type.\n     */\n    ErrorOption[ErrorOption[\"Label\"] = 1] = \"Label\";\n})(ErrorOption || (ErrorOption = {}));\n/**\n * FormValidator class enables you to validate the form fields based on your defined rules\n * ```html\n * <form id='formId'>\n *  <input type='text' name='Name' />\n *  <input type='text' name='Age' />\n * </form>\n * <script>\n *   let formObject = new FormValidator('#formId', {\n *      rules: { Name: { required: true }, Age: { range: [18, 30] } };\n *   });\n *   formObject.validate();\n * </script>\n * ```\n */\nvar FormValidator = /** @class */ (function (_super) {\n    __extends(FormValidator, _super);\n    /**\n     * Initializes the FormValidator.\n     *\n     * @param {string | HTMLFormElement} element - Specifies the element to render as component.\n     * @param {FormValidatorModel} options - Specifies the FormValidator model.\n     * @private\n     */\n    function FormValidator(element, options) {\n        var _this = _super.call(this, options, element) || this;\n        _this.validated = [];\n        _this.errorRules = [];\n        _this.allowSubmit = false;\n        _this.required = 'required';\n        _this.infoElement = null;\n        _this.inputElement = null;\n        _this.selectQuery = 'input:not([type=reset]):not([type=button]), select, textarea';\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _this.localyMessage = {};\n        /**\n         * Specifies the default messages for validation rules.\n         *\n         * @default { List of validation message }\n         */\n        _this.defaultMessages = {\n            required: 'This field is required.',\n            email: 'Please enter a valid email address.',\n            url: 'Please enter a valid URL.',\n            date: 'Please enter a valid date.',\n            dateIso: 'Please enter a valid date ( ISO ).',\n            creditcard: 'Please enter valid card number',\n            number: 'Please enter a valid number.',\n            digits: 'Please enter only digits.',\n            maxLength: 'Please enter no more than {0} characters.',\n            minLength: 'Please enter at least {0} characters.',\n            rangeLength: 'Please enter a value between {0} and {1} characters long.',\n            range: 'Please enter a value between {0} and {1}.',\n            max: 'Please enter a value less than or equal to {0}.',\n            min: 'Please enter a value greater than or equal to {0}.',\n            regex: 'Please enter a correct value.',\n            tel: 'Please enter a valid phone number.',\n            pattern: 'Please enter a correct pattern value.',\n            equalTo: 'Please enter the valid match text'\n        };\n        if (typeof _this.rules === 'undefined') {\n            _this.rules = {};\n        }\n        _this.l10n = new L10n('formValidator', _this.defaultMessages, _this.locale);\n        if (_this.locale) {\n            _this.localeFunc();\n        }\n        onIntlChange.on('notifyExternalChange', _this.afterLocalization, _this);\n        element = typeof element === 'string' ? select(element, document) : element;\n        // Set novalidate to prevent default HTML5 form validation\n        if (_this.element != null) {\n            _this.element.setAttribute('novalidate', '');\n            _this.inputElements = selectAll(_this.selectQuery, _this.element);\n            _this.createHTML5Rules();\n            _this.wireEvents();\n        }\n        else {\n            return undefined;\n        }\n        return _this;\n    }\n    FormValidator_1 = FormValidator;\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n    /**\n     * Add validation rules to the corresponding input element based on `name` attribute.\n     *\n     * @param {string} name `name` of form field.\n     * @param {Object} rules Validation rules for the corresponding element.\n     * @returns {void}\n     */\n    FormValidator.prototype.addRules = function (name, rules) {\n        if (name) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (this.rules.hasOwnProperty(name)) {\n                extend(this.rules[\"\" + name], rules, {});\n            }\n            else {\n                this.rules[\"\" + name] = rules;\n            }\n        }\n    };\n    /**\n     * Remove validation to the corresponding field based on name attribute.\n     * When no parameter is passed, remove all the validations in the form.\n     *\n     * @param {string} name Input name attribute value.\n     * @param {string[]} rules List of validation rules need to be remove from the corresponding element.\n     * @returns {void}\n     */\n    FormValidator.prototype.removeRules = function (name, rules) {\n        if (!name && !rules) {\n            this.rules = {};\n        }\n        else if (this.rules[\"\" + name] && !rules) {\n            delete this.rules[\"\" + name];\n        }\n        else if (!isNullOrUndefined(this.rules[\"\" + name] && rules)) {\n            for (var i = 0; i < rules.length; i++) {\n                delete this.rules[\"\" + name][rules[parseInt(i.toString(), 10)]];\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Validate the current form values using defined rules.\n     * Returns `true` when the form is valid otherwise `false`\n     *\n     * @param {string} selected - Optional parameter to validate specified element.\n     * @returns {boolean} - Returns form validation status.\n     */\n    FormValidator.prototype.validate = function (selected) {\n        var rules = Object.keys(this.rules);\n        if (selected && rules.length) {\n            this.validateRules(selected);\n            //filter the selected element it don't have any valid input element\n            return rules.indexOf(selected) !== -1 && this.errorRules.filter(function (data) {\n                return data.name === selected;\n            }).length === 0;\n        }\n        else {\n            this.errorRules = [];\n            for (var _i = 0, rules_1 = rules; _i < rules_1.length; _i++) {\n                var name_1 = rules_1[_i];\n                this.validateRules(name_1);\n            }\n            return this.errorRules.length === 0;\n        }\n    };\n    /**\n     * Reset the value of all the fields in form.\n     *\n     * @returns {void}\n     */\n    FormValidator.prototype.reset = function () {\n        this.element.reset();\n        this.clearForm();\n    };\n    /**\n     * Get input element by name.\n     *\n     * @param {string} name - Input element name attribute value.\n     * @returns {HTMLInputElement} - Returns the input element.\n     */\n    FormValidator.prototype.getInputElement = function (name) {\n        this.inputElement = (select('[name=\"' + name + '\"]', this.element));\n        return this.inputElement;\n    };\n    /**\n     * Destroy the form validator object and error elements.\n     *\n     * @returns {void}\n     */\n    FormValidator.prototype.destroy = function () {\n        this.reset();\n        this.unwireEvents();\n        this.rules = {};\n        var elements = selectAll('.' + this.errorClass + ', .' + this.validClass, this.element);\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            detach(element);\n        }\n        _super.prototype.destroy.call(this);\n        this.infoElement = null;\n        onIntlChange.off('notifyExternalChange', this.afterLocalization);\n    };\n    /**\n     * @param {FormValidatorModel} newProp - Returns the dynamic property value of the component.\n     * @param {FormValidatorModel} oldProp - Returns the previous property value of the component.\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    FormValidator.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'locale':\n                    this.localeFunc();\n                    break;\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    FormValidator.prototype.localeFunc = function () {\n        for (var _i = 0, _a = Object.keys(this.defaultMessages); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.l10n.setLocale(this.locale);\n            var value = this.l10n.getConstant(key);\n            this.localyMessage[\"\" + key] = value;\n        }\n    };\n    /**\n     * @private\n     * @returns {string} - Returns the component name.\n     */\n    FormValidator.prototype.getModuleName = function () {\n        return 'formvalidator';\n    };\n    /**\n     * @param {any} args - Specifies the culture name.\n     * @returns {void}\n     * @private\n     */\n    FormValidator.prototype.afterLocalization = function (args) {\n        this.locale = args.locale;\n        this.localeFunc();\n    };\n    /**\n     * Allows you to refresh the form validator base events to the elements inside the form.\n     *\n     * @returns {void}\n     */\n    FormValidator.prototype.refresh = function () {\n        this.unwireEvents();\n        this.inputElements = selectAll(this.selectQuery, this.element);\n        this.wireEvents();\n    };\n    FormValidator.prototype.clearForm = function () {\n        this.errorRules = [];\n        this.validated = [];\n        var elements = selectAll(this.selectQuery, this.element);\n        for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {\n            var element = elements_2[_i];\n            var input = element;\n            input.removeAttribute('aria-invalid');\n            var inputParent = input.parentElement;\n            var grandParent = inputParent.parentElement;\n            if (inputParent.classList.contains('e-control-wrapper') || inputParent.classList.contains('e-wrapper') ||\n                (input.classList.contains('e-input') && inputParent.classList.contains('e-input-group'))) {\n                inputParent.classList.remove(this.errorClass);\n            }\n            else if ((grandParent != null) && (grandParent.classList.contains('e-control-wrapper') ||\n                grandParent.classList.contains('e-wrapper'))) {\n                grandParent.classList.remove(this.errorClass);\n            }\n            else {\n                input.classList.remove(this.errorClass);\n            }\n            if (input.name.length > 0) {\n                this.getInputElement(input.name);\n                this.getErrorElement(input.name);\n                this.hideMessage(input.name);\n            }\n            if (inputParent.classList.contains('e-control-wrapper') || inputParent.classList.contains('e-wrapper') ||\n                (input.classList.contains('e-input') && inputParent.classList.contains('e-input-group'))) {\n                inputParent.classList.remove(this.validClass);\n            }\n            else if ((grandParent != null) && (grandParent.classList.contains('e-control-wrapper') ||\n                grandParent.classList.contains('e-wrapper'))) {\n                grandParent.classList.remove(this.validClass);\n            }\n            else {\n                input.classList.remove(this.validClass);\n            }\n        }\n    };\n    FormValidator.prototype.createHTML5Rules = function () {\n        var defRules = ['required', 'validateHidden', 'regex', 'rangeLength', 'maxLength', 'minLength', 'dateIso', 'digits',\n            'pattern', 'data-val-required', 'type', 'data-validation', 'min', 'max', 'range', 'equalTo', 'data-val-minlength-min',\n            'data-val-equalto-other', 'data-val-maxlength-max', 'data-val-range-min', 'data-val-regex-pattern', 'data-val-length-max',\n            'data-val-creditcard', 'data-val-phone'];\n        var acceptedTypes = ['hidden', 'email', 'url', 'date', 'number', 'tel'];\n        for (var _i = 0, _a = (this.inputElements); _i < _a.length; _i++) {\n            var input = _a[_i];\n            // Default attribute rules\n            var allRule = {};\n            for (var _b = 0, defRules_1 = defRules; _b < defRules_1.length; _b++) {\n                var rule = defRules_1[_b];\n                if (input.getAttribute(rule) !== null) {\n                    switch (rule) {\n                        case 'required':\n                            this.defRule(input, allRule, rule, input.required);\n                            break;\n                        case 'data-validation':\n                            rule = input.getAttribute(rule);\n                            this.defRule(input, allRule, rule, true);\n                            break;\n                        case 'type':\n                            if (acceptedTypes.indexOf(input.type) !== -1) {\n                                this.defRule(input, allRule, input.type, true);\n                            }\n                            break;\n                        case 'rangeLength':\n                        case 'range':\n                            this.defRule(input, allRule, rule, JSON.parse(input.getAttribute(rule)));\n                            break;\n                        case 'equalTo':\n                            {\n                                var id = input.getAttribute(rule);\n                                this.defRule(input, allRule, rule, id);\n                            }\n                            break;\n                        default:\n                            if (input.getAttribute('data-val') === 'true') {\n                                this.annotationRule(input, allRule, rule, input.getAttribute(rule));\n                            }\n                            else {\n                                this.defRule(input, allRule, rule, input.getAttribute(rule));\n                            }\n                    }\n                }\n            }\n            //adding pattern type validation\n            if (Object.keys(allRule).length !== 0) {\n                this.addRules(input.name, allRule);\n            }\n        }\n    };\n    FormValidator.prototype.annotationRule = function (input, ruleCon, ruleName, value) {\n        var annotationRule = ruleName.split('-');\n        var rulesList = ['required', 'creditcard', 'phone', 'maxlength', 'minlength', 'range', 'regex', 'equalto'];\n        var ruleFirstName = annotationRule[annotationRule.length - 1];\n        var ruleSecondName = annotationRule[annotationRule.length - 2];\n        if (rulesList.indexOf(ruleFirstName) !== -1) {\n            switch (ruleFirstName) {\n                case 'required':\n                    this.defRule(input, ruleCon, 'required', value);\n                    break;\n                case 'creditcard':\n                    this.defRule(input, ruleCon, 'creditcard', value);\n                    break;\n                case 'phone':\n                    this.defRule(input, ruleCon, 'tel', value);\n                    break;\n            }\n        }\n        else if (rulesList.indexOf(ruleSecondName) !== -1) {\n            switch (ruleSecondName) {\n                case 'maxlength':\n                    this.defRule(input, ruleCon, 'maxLength', value);\n                    break;\n                case 'minlength':\n                    this.defRule(input, ruleCon, 'minLength', value);\n                    break;\n                case 'range':\n                    {\n                        var minvalue = input.getAttribute('data-val-range-min');\n                        var maxvalue = input.getAttribute('data-val-range-max');\n                        this.defRule(input, ruleCon, 'range', [minvalue, maxvalue]);\n                    }\n                    break;\n                case 'equalto':\n                    {\n                        var id = input.getAttribute(ruleName).split('.');\n                        this.defRule(input, ruleCon, 'equalTo', id[id.length - 1]);\n                    }\n                    break;\n                case 'regex':\n                    this.defRule(input, ruleCon, 'regex', value);\n                    break;\n            }\n        }\n    };\n    FormValidator.prototype.defRule = function (input, ruleCon, ruleName, value) {\n        var message = input.getAttribute('data-' + ruleName + '-message');\n        var annotationMessage = input.getAttribute('data-val-' + ruleName);\n        var customMessage;\n        if (this.rules[input.name] && ruleName !== 'validateHidden' && ruleName !== 'hidden') {\n            this.getInputElement(input.name);\n            customMessage = this.getErrorMessage(this.rules[input.name][\"\" + ruleName], ruleName);\n        }\n        if (message) {\n            value = [value, message];\n        }\n        else if (annotationMessage) {\n            value = [value, annotationMessage];\n        }\n        else if (customMessage) {\n            value = [value, customMessage];\n        }\n        ruleCon[\"\" + ruleName] = value;\n    };\n    // Wire events to the form elements\n    FormValidator.prototype.wireEvents = function () {\n        for (var _i = 0, _a = (this.inputElements); _i < _a.length; _i++) {\n            var input = _a[_i];\n            if (FormValidator_1.isCheckable(input)) {\n                EventHandler.add(input, 'click', this.clickHandler, this);\n            }\n            else if (input.tagName === 'SELECT') {\n                EventHandler.add(input, 'change', this.changeHandler, this);\n            }\n            else {\n                EventHandler.add(input, 'focusout', this.focusOutHandler, this);\n                EventHandler.add(input, 'keyup', this.keyUpHandler, this);\n            }\n        }\n        EventHandler.add(this.element, 'submit', this.submitHandler, this);\n        EventHandler.add(this.element, 'reset', this.resetHandler, this);\n    };\n    // UnWire events to the form elements\n    FormValidator.prototype.unwireEvents = function () {\n        for (var _i = 0, _a = (this.inputElements); _i < _a.length; _i++) {\n            var input = _a[_i];\n            EventHandler.clearEvents(input);\n        }\n        EventHandler.remove(this.element, 'submit', this.submitHandler);\n        EventHandler.remove(this.element, 'reset', this.resetHandler);\n    };\n    // Handle input element focusout event\n    FormValidator.prototype.focusOutHandler = function (e) {\n        this.trigger('focusout', e);\n        //FormValidator.triggerCallback(this.focusout, e);\n        var element = e.target;\n        if (this.rules[element.name]) {\n            if (this.rules[element.name][this.required] || element.value.length > 0) {\n                this.validate(element.name);\n            }\n            else if (this.validated.indexOf(element.name) === -1) {\n                this.validated.push(element.name);\n            }\n        }\n    };\n    // Handle input element keyup event\n    FormValidator.prototype.keyUpHandler = function (e) {\n        this.trigger('keyup', e);\n        var element = e.target;\n        // List of keys need to prevent while validation\n        var excludeKeys = [16, 17, 18, 20, 35, 36, 37, 38, 39, 40, 45, 144, 225];\n        if (e.which === 9 && (!this.rules[element.name] || (this.rules[element.name] && !this.rules[element.name][this.required]))) {\n            return;\n        }\n        if (this.validated.indexOf(element.name) !== -1 && this.rules[element.name] && excludeKeys.indexOf(e.which) === -1) {\n            this.validate(element.name);\n        }\n    };\n    // Handle input click event\n    FormValidator.prototype.clickHandler = function (e) {\n        this.trigger('click', e);\n        var element = e.target;\n        // If element type is not submit allow validation\n        if (element.type !== 'submit') {\n            this.validate(element.name);\n        }\n        else if (element.getAttribute('formnovalidate') !== null) {\n            // Prevent form validation, if submit button has formnovalidate attribute\n            this.allowSubmit = true;\n        }\n    };\n    // Handle input change event\n    FormValidator.prototype.changeHandler = function (e) {\n        this.trigger('change', e);\n        var element = e.target;\n        this.validate(element.name);\n    };\n    // Handle form submit event\n    FormValidator.prototype.submitHandler = function (e) {\n        this.trigger('submit', e);\n        //FormValidator.triggerCallback(this.submit, e);\n        // Prevent form submit if validation failed\n        if (!this.allowSubmit && !this.validate()) {\n            e.preventDefault();\n        }\n        else {\n            this.allowSubmit = false;\n        }\n    };\n    // Handle form reset\n    FormValidator.prototype.resetHandler = function () {\n        this.clearForm();\n    };\n    // Validate each rule based on input element name\n    FormValidator.prototype.validateRules = function (name) {\n        if (!this.rules[\"\" + name]) {\n            return;\n        }\n        var rules = Object.keys(this.rules[\"\" + name]);\n        var hiddenType = false;\n        var validateHiddenType = false;\n        var vhPos = rules.indexOf('validateHidden');\n        var hPos = rules.indexOf('hidden');\n        this.getInputElement(name);\n        if (hPos !== -1) {\n            hiddenType = true;\n        }\n        if (vhPos !== -1) {\n            validateHiddenType = true;\n        }\n        if (!hiddenType || (hiddenType && validateHiddenType)) {\n            if (vhPos !== -1) {\n                rules.splice(vhPos, 1);\n            }\n            if (hPos !== -1) {\n                rules.splice((hPos - 1), 1);\n            }\n            this.getErrorElement(name);\n            for (var _i = 0, rules_2 = rules; _i < rules_2.length; _i++) {\n                var rule = rules_2[_i];\n                var errorMessage = this.getErrorMessage(this.rules[\"\" + name][\"\" + rule], rule);\n                var errorRule = { name: name, message: errorMessage };\n                var eventArgs = {\n                    inputName: name,\n                    element: this.inputElement,\n                    message: errorMessage\n                };\n                if (!this.isValid(name, rule) && !this.inputElement.classList.contains(this.ignore)) {\n                    this.removeErrorRules(name);\n                    this.errorRules.push(errorRule);\n                    // Set aria attributes to invalid elements\n                    this.inputElement.setAttribute('aria-invalid', 'true');\n                    this.inputElement.setAttribute('aria-describedby', this.inputElement.id + '-info');\n                    var inputParent = this.inputElement.parentElement;\n                    var grandParent = inputParent.parentElement;\n                    if (inputParent.classList.contains('e-control-wrapper') || inputParent.classList.contains('e-wrapper') ||\n                        (this.inputElement.classList.contains('e-input') && inputParent.classList.contains('e-input-group'))) {\n                        inputParent.classList.add(this.errorClass);\n                        inputParent.classList.remove(this.validClass);\n                    }\n                    else if ((grandParent != null) && (grandParent.classList.contains('e-control-wrapper') ||\n                        grandParent.classList.contains('e-wrapper'))) {\n                        grandParent.classList.add(this.errorClass);\n                        grandParent.classList.remove(this.validClass);\n                    }\n                    else {\n                        this.inputElement.classList.add(this.errorClass);\n                        this.inputElement.classList.remove(this.validClass);\n                    }\n                    if (!this.infoElement) {\n                        this.createErrorElement(name, errorRule.message, this.inputElement);\n                    }\n                    else {\n                        this.showMessage(errorRule);\n                    }\n                    eventArgs.errorElement = this.infoElement;\n                    eventArgs.status = 'failure';\n                    if (inputParent.classList.contains('e-control-wrapper') || inputParent.classList.contains('e-wrapper') ||\n                        (this.inputElement.classList.contains('e-input') && inputParent.classList.contains('e-input-group'))) {\n                        inputParent.classList.add(this.errorClass);\n                        inputParent.classList.remove(this.validClass);\n                    }\n                    else if ((grandParent != null) && (grandParent.classList.contains('e-control-wrapper') ||\n                        grandParent.classList.contains('e-wrapper'))) {\n                        grandParent.classList.add(this.errorClass);\n                        grandParent.classList.remove(this.validClass);\n                    }\n                    else {\n                        this.inputElement.classList.add(this.errorClass);\n                        this.inputElement.classList.remove(this.validClass);\n                    }\n                    this.optionalValidationStatus(name, eventArgs);\n                    this.trigger('validationComplete', eventArgs);\n                    // Set aria-required to required rule elements\n                    if (rule === 'required') {\n                        this.inputElement.setAttribute('aria-required', 'true');\n                    }\n                    break;\n                }\n                else {\n                    this.hideMessage(name);\n                    eventArgs.status = 'success';\n                    this.trigger('validationComplete', eventArgs);\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    // Update the optional validation status\n    FormValidator.prototype.optionalValidationStatus = function (name, refer) {\n        if (!this.rules[\"\" + name][this.required] && !this.inputElement.value.length && !isNullOrUndefined(this.infoElement)) {\n            this.infoElement.innerHTML = this.inputElement.value;\n            this.infoElement.setAttribute('aria-invalid', 'false');\n            refer.status = '';\n            this.hideMessage(name);\n        }\n    };\n    // Check the input element whether it's value satisfy the validation rule or not\n    FormValidator.prototype.isValid = function (name, rule) {\n        var params = this.rules[\"\" + name][\"\" + rule];\n        var param = (params instanceof Array && typeof params[1] === 'string') ? params[0] : params;\n        var currentRule = this.rules[\"\" + name][\"\" + rule];\n        var dateFormat = ((rule === 'min' || rule === 'max') && this.rules['' + name].date &&\n            typeof (this.rules['' + name].date) === 'string') ? this.rules['' + name].date : null;\n        var args = { value: this.inputElement.value,\n            param: param, element: this.inputElement, formElement: this.element, format: dateFormat, culture: this.locale };\n        this.trigger('validationBegin', args);\n        if (!args.param && rule === 'required') {\n            return true;\n        }\n        if (currentRule && typeof currentRule[0] === 'function') {\n            var fn = currentRule[0];\n            return fn.call(this, { element: this.inputElement, value: this.inputElement.value });\n        }\n        else if (FormValidator_1.isCheckable(this.inputElement)) {\n            if (rule !== 'required') {\n                return true;\n            }\n            return selectAll('input[name=\"' + name + '\"]:checked', this.element).length > 0;\n        }\n        else {\n            return FormValidator_1.checkValidator[\"\" + rule](args);\n        }\n    };\n    // Return default error message or custom error message\n    FormValidator.prototype.getErrorMessage = function (ruleValue, rule) {\n        var message = this.inputElement.getAttribute('data-' + rule + '-message') ?\n            this.inputElement.getAttribute('data-' + rule + '-message') :\n            (ruleValue instanceof Array && typeof ruleValue[1] === 'string') ? ruleValue[1] :\n                (Object.keys(this.localyMessage).length !== 0) ? this.localyMessage[\"\" + rule] : this.defaultMessages[\"\" + rule];\n        var formats = message.match(/{(\\d)}/g);\n        if (!isNullOrUndefined(formats)) {\n            for (var i = 0; i < formats.length; i++) {\n                var value = ruleValue instanceof Array ? ruleValue[parseInt(i.toString(), 10)] : ruleValue;\n                message = message.replace(formats[parseInt(i.toString(), 10)], value);\n            }\n        }\n        return message;\n    };\n    // Create error element based on name and error message\n    FormValidator.prototype.createErrorElement = function (name, message, input) {\n        var errorElement = createElement(this.errorElement, {\n            className: this.errorClass,\n            innerHTML: message,\n            attrs: { for: name }\n        });\n        // Create message design if errorOption is message\n        if (this.errorOption === ErrorOption.Message) {\n            errorElement.classList.remove(this.errorClass);\n            errorElement.classList.add('e-message');\n            errorElement = createElement(this.errorContainer, { className: this.errorClass, innerHTML: errorElement.outerHTML });\n        }\n        errorElement.id = this.inputElement.name + '-info';\n        // Append error message into MVC error message element\n        if (this.element.querySelector('[data-valmsg-for=\"' + input.id + '\"]')) {\n            this.element.querySelector('[data-valmsg-for=\"' + input.id + '\"]').appendChild(errorElement);\n        }\n        else if (input.hasAttribute('data-msg-containerid') === true) {\n            // Append error message into custom div element\n            var containerId = input.getAttribute('data-msg-containerid');\n            var divElement = select('#' + containerId, this.element);\n            divElement.appendChild(errorElement);\n        }\n        else if (this.customPlacement != null) {\n            // Call custom placement function if customPlacement is not null\n            this.customPlacement.call(this, this.inputElement, errorElement);\n        }\n        else {\n            var inputParent = this.inputElement.parentElement;\n            var grandParent = inputParent.parentElement;\n            if (inputParent.classList.contains('e-control-wrapper') || inputParent.classList.contains('e-wrapper')) {\n                grandParent.insertBefore(errorElement, inputParent.nextSibling);\n            }\n            else if (grandParent.classList.contains('e-control-wrapper') || grandParent.classList.contains('e-wrapper')) {\n                grandParent.parentElement.insertBefore(errorElement, grandParent.nextSibling);\n            }\n            else {\n                inputParent.insertBefore(errorElement, this.inputElement.nextSibling);\n            }\n        }\n        errorElement.style.display = 'block';\n        this.getErrorElement(name);\n        this.validated.push(name);\n        this.checkRequired(name);\n    };\n    // Get error element by name\n    FormValidator.prototype.getErrorElement = function (name) {\n        this.infoElement = select(this.errorElement + '.' + this.errorClass, this.inputElement.parentElement);\n        if (!this.infoElement) {\n            this.infoElement = select(this.errorElement + '.' + this.errorClass + '[for=\"' + name + '\"]', this.element);\n        }\n        return this.infoElement;\n    };\n    // Remove existing rule from errorRules object\n    FormValidator.prototype.removeErrorRules = function (name) {\n        for (var i = 0; i < this.errorRules.length; i++) {\n            var rule = this.errorRules[parseInt(i.toString(), 10)];\n            if (rule.name === name) {\n                this.errorRules.splice(i, 1);\n            }\n        }\n    };\n    // Show error message to the input element\n    FormValidator.prototype.showMessage = function (errorRule) {\n        this.infoElement.style.display = 'block';\n        this.infoElement.innerHTML = errorRule.message;\n        this.checkRequired(errorRule.name);\n    };\n    // Hide error message based on input name\n    FormValidator.prototype.hideMessage = function (name) {\n        if (this.infoElement) {\n            this.infoElement.style.display = 'none';\n            this.removeErrorRules(name);\n            var inputParent = this.inputElement.parentElement;\n            var grandParent = inputParent.parentElement;\n            if (inputParent.classList.contains('e-control-wrapper') || inputParent.classList.contains('e-wrapper') ||\n                (this.inputElement.classList.contains('e-input') && inputParent.classList.contains('e-input-group'))) {\n                inputParent.classList.add(this.validClass);\n                inputParent.classList.remove(this.errorClass);\n            }\n            else if ((grandParent != null) && (grandParent.classList.contains('e-control-wrapper') || grandParent.classList.contains('e-wrapper'))) {\n                grandParent.classList.add(this.validClass);\n                grandParent.classList.remove(this.errorClass);\n            }\n            else {\n                this.inputElement.classList.add(this.validClass);\n                this.inputElement.classList.remove(this.errorClass);\n            }\n            this.inputElement.setAttribute('aria-invalid', 'false');\n        }\n    };\n    // Check whether the input element have required rule and its value is not empty\n    FormValidator.prototype.checkRequired = function (name) {\n        if (!this.rules[\"\" + name][this.required] && !this.inputElement.value.length && !isNullOrUndefined(this.infoElement)) {\n            this.infoElement.innerHTML = this.inputElement.value;\n            this.infoElement.setAttribute('aria-invalid', 'false');\n            this.hideMessage(name);\n        }\n    };\n    // Return boolean result if the input have checkable or submit types\n    FormValidator.isCheckable = function (input) {\n        var inputType = input.getAttribute('type');\n        return inputType && (inputType === 'checkbox' || inputType === 'radio' || inputType === 'submit');\n    };\n    var FormValidator_1;\n    // List of function to validate the rules\n    FormValidator.checkValidator = {\n        required: function (option) {\n            return !isNaN(Date.parse(option.value)) ? !isNaN(new Date(option.value).getTime()) : option.value.toString().length > 0;\n        },\n        email: function (option) {\n            return regex.EMAIL.test(option.value);\n        },\n        url: function (option) {\n            return regex.URL.test(option.value);\n        },\n        dateIso: function (option) {\n            return regex.DATE_ISO.test(option.value);\n        },\n        tel: function (option) {\n            return regex.PHONE.test(option.value);\n        },\n        creditcard: function (option) {\n            return regex.CREDITCARD.test(option.value);\n        },\n        number: function (option) {\n            return !isNaN(Number(option.value)) && String(option.value).indexOf(' ') === -1;\n        },\n        digits: function (option) {\n            return regex.DIGITS.test(option.value);\n        },\n        maxLength: function (option) {\n            return option.value.length <= Number(option.param);\n        },\n        minLength: function (option) {\n            return option.value.length >= Number(option.param);\n        },\n        rangeLength: function (option) {\n            var param = option.param;\n            return option.value.length >= param[0] && option.value.length <= param[1];\n        },\n        range: function (option) {\n            var param = option.param;\n            return !isNaN(Number(option.value)) && Number(option.value) >= param[0] && Number(option.value) <= param[1];\n        },\n        date: function (option) {\n            if (!isNullOrUndefined(option.param) && (typeof (option.param) === 'string' && option.param !== '')) {\n                var globalize = option.culture && option.culture !== '' ? new Internationalization(option.culture) : new Internationalization;\n                var dateOptions = { format: option.param.toString(), type: 'dateTime', skeleton: 'yMd' };\n                var dateValue = globalize.parseDate(option.value, dateOptions);\n                return (!isNullOrUndefined(dateValue) && dateValue instanceof Date && !isNaN(+dateValue));\n            }\n            else {\n                return !isNaN(new Date(option.value).getTime());\n            }\n        },\n        max: function (option) {\n            if (!isNaN(Number(option.value))) {\n                // Maximum rule validation for number\n                return +option.value <= +option.param;\n            }\n            // Maximum rule validation for date\n            if (option.format && option.format !== '') {\n                var globalize = option.culture && option.culture !== '' ? new Internationalization(option.culture) : new Internationalization;\n                var dateOptions = { format: option.format.toString(), type: 'dateTime', skeleton: 'yMd' };\n                var dateValue = globalize.parseDate(option.value, dateOptions);\n                var maxValue = (typeof (option.param) === 'string') ? globalize.parseDate(JSON.parse(JSON.stringify(option.param)), dateOptions) : option.param;\n                return new Date(dateValue).getTime() <= new Date(maxValue).getTime();\n            }\n            else {\n                return new Date(option.value).getTime() <= new Date(JSON.parse(JSON.stringify(option.param))).getTime();\n            }\n        },\n        min: function (option) {\n            if (!isNaN(Number(option.value))) {\n                // Minimum rule validation for number\n                return +option.value >= +option.param;\n            }\n            else if ((option.value).indexOf(',') !== -1) {\n                var uNum = (option.value).replace(/,/g, '');\n                return parseFloat(uNum) >= Number(option.param); // Convert option.param to a number\n            }\n            else {\n                // Minimum rule validation for date\n                if (option.format && option.format !== '') {\n                    var globalize = option.culture && option.culture !== '' ? new Internationalization(option.culture) : new Internationalization;\n                    var dateOptions = { format: option.format.toString(), type: 'dateTime', skeleton: 'yMd' };\n                    var dateValue = globalize.parseDate(option.value, dateOptions);\n                    var minValue = (typeof (option.param) === 'string') ? globalize.parseDate(JSON.parse(JSON.stringify(option.param)), dateOptions) : option.param;\n                    return new Date(dateValue).getTime() >= new Date(minValue).getTime();\n                }\n                else {\n                    return new Date(option.value).getTime() >= new Date(JSON.parse(JSON.stringify(option.param))).getTime();\n                }\n            }\n        },\n        regex: function (option) {\n            /* eslint-disable-next-line security/detect-non-literal-regexp */\n            return new RegExp(option.param).test(option.value);\n        },\n        equalTo: function (option) {\n            var compareTo = option.formElement.querySelector('#' + option.param);\n            option.param = compareTo.value;\n            return option.param === option.value;\n        }\n    };\n    __decorate([\n        Property('')\n    ], FormValidator.prototype, \"locale\", void 0);\n    __decorate([\n        Property('e-hidden')\n    ], FormValidator.prototype, \"ignore\", void 0);\n    __decorate([\n        Property()\n    ], FormValidator.prototype, \"rules\", void 0);\n    __decorate([\n        Property('e-error')\n    ], FormValidator.prototype, \"errorClass\", void 0);\n    __decorate([\n        Property('e-valid')\n    ], FormValidator.prototype, \"validClass\", void 0);\n    __decorate([\n        Property('label')\n    ], FormValidator.prototype, \"errorElement\", void 0);\n    __decorate([\n        Property('div')\n    ], FormValidator.prototype, \"errorContainer\", void 0);\n    __decorate([\n        Property(ErrorOption.Label)\n    ], FormValidator.prototype, \"errorOption\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"focusout\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"keyup\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"submit\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"validationBegin\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"validationComplete\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"customPlacement\", void 0);\n    FormValidator = FormValidator_1 = __decorate([\n        NotifyPropertyChanges\n    ], FormValidator);\n    return FormValidator;\n}(Base));\nexport { FormValidator };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}