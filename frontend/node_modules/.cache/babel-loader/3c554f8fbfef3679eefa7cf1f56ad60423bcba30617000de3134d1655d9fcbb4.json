{"ast":null,"code":"import * as events from '../base/constant';\nimport { isActionPrevent } from '../base/util';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\n * @hidden\n * `CheckBoxFilter` module is used to handle filtering action.\n */\nvar CheckBoxFilter = /** @class */function () {\n  /**\n   * Constructor for checkbox filtering module\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {FilterSettings} filterSettings - specifies the filtersettings\n   * @param {ServiceLocator} serviceLocator - specifies the ServiceLocator\n   * @hidden\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function CheckBoxFilter(parent, filterSettings, serviceLocator) {\n    this.parent = parent;\n    this.isresetFocus = true;\n    this.checkBoxBase = new CheckBoxFilterBase(parent);\n    this.addEventListener();\n  }\n  /**\n   * To destroy the check box filter.\n   *\n   * @returns {void}\n   * @hidden\n   */\n  CheckBoxFilter.prototype.destroy = function () {\n    this.removeEventListener();\n    this.checkBoxBase.closeDialog();\n  };\n  CheckBoxFilter.prototype.openDialog = function (options) {\n    this.checkBoxBase.openDialog(options);\n    this.parent.log('column_type_missing', {\n      column: options.column\n    });\n  };\n  CheckBoxFilter.prototype.closeDialog = function () {\n    this.destroy();\n    if (this.isresetFocus) {\n      this.parent.notify(events.restoreFocus, {});\n    }\n  };\n  CheckBoxFilter.prototype.closeResponsiveDialog = function () {\n    this.checkBoxBase.closeDialog();\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} - returns the module name\n   * @private\n   */\n  CheckBoxFilter.prototype.getModuleName = function () {\n    return 'checkboxFilter';\n  };\n  CheckBoxFilter.prototype.actionBegin = function (args) {\n    this.parent.trigger(events.actionBegin, args);\n  };\n  CheckBoxFilter.prototype.actionComplete = function (args) {\n    this.parent.trigger(events.actionComplete, args);\n  };\n  CheckBoxFilter.prototype.actionPrevent = function (args) {\n    if (isActionPrevent(this.parent)) {\n      this.parent.notify(events.preventBatch, args);\n      args.cancel = true;\n    }\n  };\n  CheckBoxFilter.prototype.clearCustomFilter = function (col) {\n    this.checkBoxBase.clearFilter(col);\n  };\n  CheckBoxFilter.prototype.applyCustomFilter = function () {\n    this.checkBoxBase.fltrBtnHandler();\n    this.checkBoxBase.closeDialog();\n  };\n  CheckBoxFilter.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.on(events.cBoxFltrBegin, this.actionBegin, this);\n    this.parent.on(events.cBoxFltrComplete, this.actionComplete, this);\n    this.parent.on(events.fltrPrevent, this.actionPrevent, this);\n  };\n  CheckBoxFilter.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.off(events.cBoxFltrBegin, this.actionBegin);\n    this.parent.off(events.cBoxFltrComplete, this.actionComplete);\n    this.parent.off(events.fltrPrevent, this.actionPrevent);\n  };\n  return CheckBoxFilter;\n}();\nexport { CheckBoxFilter };","map":{"version":3,"names":["events","isActionPrevent","CheckBoxFilterBase","CheckBoxFilter","parent","filterSettings","serviceLocator","isresetFocus","checkBoxBase","addEventListener","prototype","destroy","removeEventListener","closeDialog","openDialog","options","log","column","notify","restoreFocus","closeResponsiveDialog","getModuleName","actionBegin","args","trigger","actionComplete","actionPrevent","preventBatch","cancel","clearCustomFilter","col","clearFilter","applyCustomFilter","fltrBtnHandler","isDestroyed","on","cBoxFltrBegin","cBoxFltrComplete","fltrPrevent","off"],"sources":["D:/weektable/frontend/node_modules/@syncfusion/ej2-grids/src/grid/actions/checkbox-filter.js"],"sourcesContent":["import * as events from '../base/constant';\nimport { isActionPrevent } from '../base/util';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\n * @hidden\n * `CheckBoxFilter` module is used to handle filtering action.\n */\nvar CheckBoxFilter = /** @class */ (function () {\n    /**\n     * Constructor for checkbox filtering module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {FilterSettings} filterSettings - specifies the filtersettings\n     * @param {ServiceLocator} serviceLocator - specifies the ServiceLocator\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function CheckBoxFilter(parent, filterSettings, serviceLocator) {\n        this.parent = parent;\n        this.isresetFocus = true;\n        this.checkBoxBase = new CheckBoxFilterBase(parent);\n        this.addEventListener();\n    }\n    /**\n     * To destroy the check box filter.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    CheckBoxFilter.prototype.destroy = function () {\n        this.removeEventListener();\n        this.checkBoxBase.closeDialog();\n    };\n    CheckBoxFilter.prototype.openDialog = function (options) {\n        this.checkBoxBase.openDialog(options);\n        this.parent.log('column_type_missing', { column: options.column });\n    };\n    CheckBoxFilter.prototype.closeDialog = function () {\n        this.destroy();\n        if (this.isresetFocus) {\n            this.parent.notify(events.restoreFocus, {});\n        }\n    };\n    CheckBoxFilter.prototype.closeResponsiveDialog = function () {\n        this.checkBoxBase.closeDialog();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} - returns the module name\n     * @private\n     */\n    CheckBoxFilter.prototype.getModuleName = function () {\n        return 'checkboxFilter';\n    };\n    CheckBoxFilter.prototype.actionBegin = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    CheckBoxFilter.prototype.actionComplete = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    CheckBoxFilter.prototype.actionPrevent = function (args) {\n        if (isActionPrevent(this.parent)) {\n            this.parent.notify(events.preventBatch, args);\n            args.cancel = true;\n        }\n    };\n    CheckBoxFilter.prototype.clearCustomFilter = function (col) {\n        this.checkBoxBase.clearFilter(col);\n    };\n    CheckBoxFilter.prototype.applyCustomFilter = function () {\n        this.checkBoxBase.fltrBtnHandler();\n        this.checkBoxBase.closeDialog();\n    };\n    CheckBoxFilter.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.cBoxFltrBegin, this.actionBegin, this);\n        this.parent.on(events.cBoxFltrComplete, this.actionComplete, this);\n        this.parent.on(events.fltrPrevent, this.actionPrevent, this);\n    };\n    CheckBoxFilter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cBoxFltrBegin, this.actionBegin);\n        this.parent.off(events.cBoxFltrComplete, this.actionComplete);\n        this.parent.off(events.fltrPrevent, this.actionPrevent);\n    };\n    return CheckBoxFilter;\n}());\nexport { CheckBoxFilter };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}