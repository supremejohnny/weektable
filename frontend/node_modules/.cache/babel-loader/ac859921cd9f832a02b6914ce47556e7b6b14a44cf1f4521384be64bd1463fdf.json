{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isNullOrUndefined, setValue, getValue, defaultCurrencyCode, updateCSSText } from '@syncfusion/ej2-base';\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData, getScrollBarWidth } from './util';\nimport { getRowHeight, setColumnIndex, Global, ispercentageWidth, getNumberFormat, getTransformValues } from './util';\nimport { setRowElements, resetRowIndex, compareChanges, getCellByColAndRowIndex, performComplexDataOperation } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { Column } from '../models/column';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { ColumnChooserSettings } from '../models/column-chooser-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { Logger } from '../actions/logger';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport * as literals from '../base/string-literals';\nimport { HeaderCellRenderer } from '../renderer/header-cell-renderer';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */function (_super) {\n  __extends(SortDescriptor, _super);\n  function SortDescriptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property()], SortDescriptor.prototype, \"field\", void 0);\n  __decorate([Property()], SortDescriptor.prototype, \"direction\", void 0);\n  __decorate([Property(false)], SortDescriptor.prototype, \"isFromGroup\", void 0);\n  return SortDescriptor;\n}(ChildProperty);\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\nvar SortSettings = /** @class */function (_super) {\n  __extends(SortSettings, _super);\n  function SortSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Collection([], SortDescriptor)], SortSettings.prototype, \"columns\", void 0);\n  __decorate([Property(true)], SortSettings.prototype, \"allowUnsort\", void 0);\n  return SortSettings;\n}(ChildProperty);\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */function (_super) {\n  __extends(Predicate, _super);\n  function Predicate() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property()], Predicate.prototype, \"field\", void 0);\n  __decorate([Property()], Predicate.prototype, \"operator\", void 0);\n  __decorate([Property()], Predicate.prototype, \"value\", void 0);\n  __decorate([Property()], Predicate.prototype, \"matchCase\", void 0);\n  __decorate([Property(false)], Predicate.prototype, \"ignoreAccent\", void 0);\n  __decorate([Property()], Predicate.prototype, \"predicate\", void 0);\n  __decorate([Property({})], Predicate.prototype, \"actualFilterValue\", void 0);\n  __decorate([Property({})], Predicate.prototype, \"actualOperator\", void 0);\n  __decorate([Property()], Predicate.prototype, \"type\", void 0);\n  __decorate([Property()], Predicate.prototype, \"ejpredicate\", void 0);\n  __decorate([Property()], Predicate.prototype, \"uid\", void 0);\n  __decorate([Property()], Predicate.prototype, \"isForeignKey\", void 0);\n  __decorate([Property()], Predicate.prototype, \"condition\", void 0);\n  return Predicate;\n}(ChildProperty);\nexport { Predicate };\n/**\n * Configures the infinite scroll behavior of Grid.\n */\nvar InfiniteScrollSettings = /** @class */function (_super) {\n  __extends(InfiniteScrollSettings, _super);\n  function InfiniteScrollSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(false)], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n  __decorate([Property(3)], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n  __decorate([Property(3)], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n  return InfiniteScrollSettings;\n}(ChildProperty);\nexport { InfiniteScrollSettings };\n/**\n * Configures the filtering behavior of the Grid.\n */\nvar FilterSettings = /** @class */function (_super) {\n  __extends(FilterSettings, _super);\n  function FilterSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Collection([], Predicate)], FilterSettings.prototype, \"columns\", void 0);\n  __decorate([Property('FilterBar')], FilterSettings.prototype, \"type\", void 0);\n  __decorate([Property('OnEnter')], FilterSettings.prototype, \"mode\", void 0);\n  __decorate([Property(true)], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n  __decorate([Property(1500)], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n  __decorate([Property()], FilterSettings.prototype, \"operators\", void 0);\n  __decorate([Property(false)], FilterSettings.prototype, \"ignoreAccent\", void 0);\n  __decorate([Property(false)], FilterSettings.prototype, \"enableInfiniteScrolling\", void 0);\n  __decorate([Property(50)], FilterSettings.prototype, \"itemsCount\", void 0);\n  __decorate([Property('Shimmer')], FilterSettings.prototype, \"loadingIndicator\", void 0);\n  __decorate([Property(false)], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n  __decorate([Property(false)], FilterSettings.prototype, \"showFilterBarOperator\", void 0);\n  return FilterSettings;\n}(ChildProperty);\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\nvar SelectionSettings = /** @class */function (_super) {\n  __extends(SelectionSettings, _super);\n  function SelectionSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('Row')], SelectionSettings.prototype, \"mode\", void 0);\n  __decorate([Property('Flow')], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n  __decorate([Property('Single')], SelectionSettings.prototype, \"type\", void 0);\n  __decorate([Property(false)], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n  __decorate([Property(false)], SelectionSettings.prototype, \"persistSelection\", void 0);\n  __decorate([Property('Default')], SelectionSettings.prototype, \"checkboxMode\", void 0);\n  __decorate([Property(false)], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n  __decorate([Property(true)], SelectionSettings.prototype, \"enableToggle\", void 0);\n  __decorate([Property(false)], SelectionSettings.prototype, \"allowColumnSelection\", void 0);\n  return SelectionSettings;\n}(ChildProperty);\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\nvar SearchSettings = /** @class */function (_super) {\n  __extends(SearchSettings, _super);\n  function SearchSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property([])], SearchSettings.prototype, \"fields\", void 0);\n  __decorate([Property('')], SearchSettings.prototype, \"key\", void 0);\n  __decorate([Property('contains')], SearchSettings.prototype, \"operator\", void 0);\n  __decorate([Property(true)], SearchSettings.prototype, \"ignoreCase\", void 0);\n  __decorate([Property(false)], SearchSettings.prototype, \"ignoreAccent\", void 0);\n  return SearchSettings;\n}(ChildProperty);\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\nvar RowDropSettings = /** @class */function (_super) {\n  __extends(RowDropSettings, _super);\n  function RowDropSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property()], RowDropSettings.prototype, \"targetID\", void 0);\n  return RowDropSettings;\n}(ChildProperty);\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\nvar TextWrapSettings = /** @class */function (_super) {\n  __extends(TextWrapSettings, _super);\n  function TextWrapSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('Both')], TextWrapSettings.prototype, \"wrapMode\", void 0);\n  return TextWrapSettings;\n}(ChildProperty);\nexport { TextWrapSettings };\n/**\n * Configures the resize behavior of the Grid.\n */\nvar ResizeSettings = /** @class */function (_super) {\n  __extends(ResizeSettings, _super);\n  function ResizeSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('Normal')], ResizeSettings.prototype, \"mode\", void 0);\n  return ResizeSettings;\n}(ChildProperty);\nexport { ResizeSettings };\n/**\n * Configures the group behavior of the Grid.\n */\nvar GroupSettings = /** @class */function (_super) {\n  __extends(GroupSettings, _super);\n  function GroupSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(true)], GroupSettings.prototype, \"showDropArea\", void 0);\n  __decorate([Property(false)], GroupSettings.prototype, \"allowReordering\", void 0);\n  __decorate([Property(false)], GroupSettings.prototype, \"showToggleButton\", void 0);\n  __decorate([Property(false)], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n  __decorate([Property(true)], GroupSettings.prototype, \"showUngroupButton\", void 0);\n  __decorate([Property(false)], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n  __decorate([Property([])], GroupSettings.prototype, \"columns\", void 0);\n  __decorate([Property()], GroupSettings.prototype, \"captionTemplate\", void 0);\n  __decorate([Property(false)], GroupSettings.prototype, \"enableLazyLoading\", void 0);\n  return GroupSettings;\n}(ChildProperty);\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\nvar EditSettings = /** @class */function (_super) {\n  __extends(EditSettings, _super);\n  function EditSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(false)], EditSettings.prototype, \"allowAdding\", void 0);\n  __decorate([Property(false)], EditSettings.prototype, \"allowEditing\", void 0);\n  __decorate([Property(false)], EditSettings.prototype, \"allowDeleting\", void 0);\n  __decorate([Property('Normal')], EditSettings.prototype, \"mode\", void 0);\n  __decorate([Property(true)], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n  __decorate([Property(true)], EditSettings.prototype, \"showConfirmDialog\", void 0);\n  __decorate([Property(false)], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n  __decorate([Property()], EditSettings.prototype, \"template\", void 0);\n  __decorate([Property()], EditSettings.prototype, \"headerTemplate\", void 0);\n  __decorate([Property()], EditSettings.prototype, \"footerTemplate\", void 0);\n  __decorate([Property('Top')], EditSettings.prototype, \"newRowPosition\", void 0);\n  __decorate([Property({})], EditSettings.prototype, \"dialog\", void 0);\n  __decorate([Property(false)], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n  __decorate([Property(false)], EditSettings.prototype, \"showAddNewRow\", void 0);\n  return EditSettings;\n}(ChildProperty);\nexport { EditSettings };\n/**\n * Configures the Loading Indicator of the Grid.\n */\nvar LoadingIndicator = /** @class */function (_super) {\n  __extends(LoadingIndicator, _super);\n  function LoadingIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('Spinner')], LoadingIndicator.prototype, \"indicatorType\", void 0);\n  return LoadingIndicator;\n}(ChildProperty);\nexport { LoadingIndicator };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\nvar Grid = /** @class */function (_super) {\n  __extends(Grid, _super);\n  /**\n   * Constructor for creating the component\n   *\n   * @param {GridModel} options - specifies the options\n   * @param {string | HTMLElement} element - specifies the element\n   * @hidden\n   */\n  function Grid(options, element) {\n    var _this_1 = _super.call(this, options, element) || this;\n    _this_1.isPreventScrollEvent = false;\n    _this_1.inViewIndexes = [];\n    _this_1.keyA = false;\n    _this_1.frozenRightCount = 0;\n    _this_1.freezeColumnRefresh = true;\n    _this_1.rightcount = 0;\n    _this_1.frozenLeftCount = 0;\n    _this_1.leftcount = 0;\n    _this_1.tablesCount = 1;\n    _this_1.movableCount = 0;\n    _this_1.movablecount = 0;\n    _this_1.fixedcount = 0;\n    _this_1.fixedCount = 0;\n    _this_1.visibleFrozenLeft = 0;\n    _this_1.visibleFrozenFixed = 0;\n    _this_1.isPreparedFrozenColumns = false;\n    _this_1.visibleFrozenRight = 0;\n    _this_1.visibleMovable = 0;\n    _this_1.frozenLeftColumns = [];\n    _this_1.frozenRightColumns = [];\n    _this_1.movableColumns = [];\n    _this_1.fixedColumns = [];\n    _this_1.stackedLeft = [];\n    _this_1.stackedRight = [];\n    _this_1.stackedFixed = [];\n    _this_1.stackedMovable = [];\n    _this_1.stackedarrayLeft = [];\n    _this_1.stackedarrayRight = [];\n    _this_1.stackedarrayFixed = [];\n    _this_1.stackedarrayMovable = [];\n    _this_1.media = {};\n    _this_1.autoFitColumnsResize = false;\n    /** @hidden */\n    _this_1.tableIndex = 0;\n    _this_1.componentRefresh = Component.prototype.refresh;\n    _this_1.isChangeDataSourceCall = false;\n    _this_1.mergedColumns = false;\n    /** @hidden */\n    _this_1.isVirtualAdaptive = false;\n    /** @hidden */\n    /**\n     * * If `requireTemplateRef` is set to false in the load event, then the template element can't be accessed in grid queryCellInfo, and rowDataBound events.\n     * * By default, React's grid queryCellInfo and rowDataBound events allow access to the template element.\n     * * Avoid accessing the template elements in the grid queryCellInfo and rowDataBound events to improve rendering performance by setting this value as false.\n     *\n     * @default true\n     */\n    _this_1.requireTemplateRef = true;\n    /** @hidden */\n    _this_1.vRows = [];\n    /** @hidden */\n    _this_1.vcRows = [];\n    /** @hidden */\n    _this_1.vGroupOffsets = {};\n    /** @hidden */\n    _this_1.rowUid = 0;\n    /** @hidden */\n    _this_1.translateX = 0;\n    /** @hidden */\n    _this_1.isManualRefresh = false;\n    /** @hidden */\n    _this_1.isAutoFitColumns = false;\n    /** @hidden */\n    _this_1.enableDeepCompare = false;\n    /** @hidden */\n    _this_1.totalDataRecordsCount = 0;\n    /** @hidden */\n    _this_1.disableSelectedRecords = [];\n    /** @hidden */\n    _this_1.partialSelectedRecords = [];\n    /** @hidden */\n    _this_1.isSpan = false;\n    /** @hidden */\n    _this_1.islazyloadRequest = false;\n    /** @hidden */\n    _this_1.isAddNewRow = false;\n    /** @hidden */\n    _this_1.addNewRowFocus = true;\n    /** @hidden */\n    _this_1.selectVirtualRowOnAdd = false;\n    /** @hidden */\n    _this_1.lockcolPositionCount = 0;\n    /** @hidden */\n    _this_1.prevPageMoving = false;\n    /** @hidden */\n    _this_1.pageTemplateChange = false;\n    /** @hidden */\n    _this_1.isAutoGen = false;\n    /** @hidden */\n    _this_1.isAutoGenerateColumns = false;\n    /** @hidden */\n    _this_1.pageRequireRefresh = true;\n    _this_1.mediaBindInstance = {};\n    /** @hidden */\n    _this_1.commandDelIndex = undefined;\n    /** @hidden */\n    _this_1.preventAutoFit = false;\n    /** @hidden */\n    _this_1.asyncTimeOut = 50;\n    /** @hidden */\n    _this_1.isExportGrid = false;\n    /** @hidden */\n    _this_1.isWidgetsDestroyed = false;\n    _this_1.enableLogger = false;\n    _this_1.needsID = true;\n    Grid_1.Inject(Selection);\n    setValue('mergePersistData', _this_1.mergePersistGridData, _this_1);\n    return _this_1;\n  }\n  Grid_1 = Grid;\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @returns {string} returns the persist data\n   */\n  Grid.prototype.getPersistData = function () {\n    var keyEntity = ['pageSettings', 'sortSettings', 'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n    var ignoreOnPersist = {\n      pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n      filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n      groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton', 'disablePageWiseAggregates', 'hideCaptionCount'],\n      searchSettings: ['fields', 'operator', 'ignoreCase'],\n      sortSettings: [],\n      columns: [],\n      selectedRowIndex: [],\n      scrollPosition: []\n    };\n    for (var i = 0; i < keyEntity.length; i++) {\n      var currentObject = this[keyEntity[parseInt(i.toString(), 10)]];\n      for (var _i = 0, _a = ignoreOnPersist[keyEntity[parseInt(i.toString(), 10)]]; _i < _a.length; _i++) {\n        var val = _a[_i];\n        delete currentObject[\"\" + val];\n      }\n    }\n    var temp = this.pageSettings.template;\n    var settings = Object.assign({\n      template: undefined\n    }, this.pageSettings);\n    if (this.enableVirtualization && this.enablePersistence && this.contentModule && this.contentModule.getPageFromTop && !isNullOrUndefined(this.scrollPosition) && !isNullOrUndefined(this.scrollPosition.top)) {\n      settings['properties']['currentPage'] = this.contentModule.getPageFromTop(this.scrollPosition.top, {\n        block: 1\n      });\n    }\n    this.setProperties({\n      pageSettings: settings\n    }, true);\n    var captionTemplateRef = this.groupSettings.captionTemplate;\n    var isAngularCaptionTemplate = captionTemplateRef && this.isAngular;\n    if (isAngularCaptionTemplate) {\n      delete this.groupSettings['properties']['captionTemplate'];\n    }\n    this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n    var persistData = this.addOnPersist(keyEntity);\n    settings.template = temp;\n    this.setProperties({\n      pageSettings: settings\n    }, true);\n    if (isAngularCaptionTemplate) {\n      this.groupSettings.captionTemplate = captionTemplateRef;\n    }\n    return persistData;\n  };\n  /**\n   * To provide the array of modules needed for component rendering\n   *\n   * @returns {ModuleDeclaration[]} Returns the module Declaration\n   * @hidden\n   */\n  Grid.prototype.requiredModules = function () {\n    this.setFrozenCount();\n    this.enableInfiniteAggrgate();\n    var modules = [];\n    if (this.isDestroyed) {\n      return modules;\n    }\n    if (this.allowFiltering) {\n      modules.push({\n        member: 'filter',\n        args: [this, this.filterSettings, this.serviceLocator],\n        name: 'Filter'\n      });\n    }\n    if (this.allowExcelExport) {\n      modules.push({\n        member: 'ExcelExport',\n        args: [this, this.serviceLocator],\n        name: 'ExcelExport'\n      });\n    }\n    if (this.allowPdfExport) {\n      modules.push({\n        member: 'PdfExport',\n        args: [this],\n        name: 'PdfExport'\n      });\n    }\n    if (this.allowSorting) {\n      modules.push({\n        member: 'sort',\n        args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator],\n        name: 'Sort'\n      });\n    }\n    if (this.allowPaging) {\n      modules.push({\n        member: 'pager',\n        args: [this, this.pageSettings],\n        name: 'Page'\n      });\n    }\n    if (this.allowSelection) {\n      modules.push({\n        member: 'selection',\n        args: [this, this.selectionSettings, this.serviceLocator],\n        name: 'Selection'\n      });\n    }\n    if (this.resizeCheck()) {\n      modules.push({\n        member: 'resize',\n        args: [this],\n        name: 'Resize'\n      });\n    }\n    if (this.allowReordering) {\n      modules.push({\n        member: 'reorder',\n        args: [this],\n        name: 'Reorder'\n      });\n    }\n    if (this.allowRowDragAndDrop) {\n      modules.push({\n        member: 'rowDragAndDrop',\n        args: [this],\n        name: 'RowDD'\n      });\n    }\n    if (this.allowGrouping) {\n      modules.push({\n        member: 'group',\n        args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator],\n        name: 'Group'\n      });\n    }\n    if (this.aggregates.length) {\n      modules.push({\n        member: 'aggregate',\n        args: [this, this.serviceLocator],\n        name: 'Aggregate'\n      });\n    }\n    if (this.isDetail()) {\n      modules.push({\n        member: 'detailRow',\n        args: [this, this.serviceLocator],\n        name: 'DetailRow'\n      });\n    }\n    if (this.toolbar || this.toolbarTemplate) {\n      modules.push({\n        member: 'toolbar',\n        args: [this, this.serviceLocator],\n        name: 'Toolbar'\n      });\n    }\n    if (this.enableVirtualization || this.enableColumnVirtualization) {\n      modules.push({\n        member: 'virtualscroll',\n        args: [this, this.serviceLocator],\n        name: 'VirtualScroll'\n      });\n    }\n    if (this.getFrozenColumns() || this.frozenRows || this.frozenRightCount || this.frozenLeftCount) {\n      modules.push({\n        member: 'freeze',\n        args: [this, this.serviceLocator],\n        name: 'Freeze'\n      });\n    }\n    if (!isNullOrUndefined(this.columns) && this.isCommandColumn(this.columns)) {\n      modules.push({\n        member: 'commandColumn',\n        args: [this, this.serviceLocator],\n        name: 'CommandColumn'\n      });\n    }\n    if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n      modules.push({\n        member: 'edit',\n        args: [this, this.serviceLocator],\n        name: 'Edit'\n      });\n    }\n    this.extendRequiredModules(modules);\n    return modules;\n  };\n  Grid.prototype.extendRequiredModules = function (modules) {\n    if (this.enableInfiniteScrolling) {\n      modules.push({\n        member: 'infiniteScroll',\n        args: [this, this.serviceLocator],\n        name: 'InfiniteScroll'\n      });\n    }\n    if (this.groupSettings.enableLazyLoading) {\n      modules.push({\n        member: 'lazyLoadGroup',\n        args: [this, this.serviceLocator],\n        name: 'LazyLoadGroup'\n      });\n    }\n    if (this.contextMenuItems) {\n      modules.push({\n        member: 'contextMenu',\n        args: [this, this.serviceLocator],\n        name: 'ContextMenu'\n      });\n    }\n    if (this.showColumnMenu) {\n      modules.push({\n        member: 'columnMenu',\n        args: [this, this.serviceLocator],\n        name: 'ColumnMenu'\n      });\n    }\n    if (this.showColumnChooser) {\n      modules.push({\n        member: 'columnChooser',\n        args: [this, this.serviceLocator],\n        name: 'ColumnChooser'\n      });\n    }\n    if (!isNullOrUndefined(this.columns) && this.isForeignKeyEnabled(this.columns)) {\n      modules.push({\n        member: 'foreignKey',\n        args: [this, this.serviceLocator],\n        name: 'ForeignKey'\n      });\n    }\n    if (this.enableLogger) {\n      modules.push({\n        member: 'logger',\n        args: [this],\n        name: 'Logger'\n      });\n    }\n  };\n  Grid.prototype.resizeCheck = function () {\n    var autoFitColumns = this.getColumns().filter(function (c) {\n      return c.autoFit === true;\n    }).length ? true : false;\n    if (!isNullOrUndefined(this.columnModel) && this.columnModel.length && !(this.columnModel[0] instanceof Column)) {\n      this.columnModel = [];\n    }\n    var columnMenu = this.showColumnMenu && (!this.columnMenuItems || this.columnMenuItems.filter(function (c) {\n      return c === 'AutoFit' || c === 'AutoFitAll';\n    }).length) ? true : false;\n    var contextMenu = this.contextMenuItems && this.contextMenuItems.filter(function (c) {\n      return c === 'AutoFit' || c === 'AutoFitAll';\n    }).length ? true : false;\n    return this.allowResizing || this.autoFitColumnsResize || autoFitColumns || columnMenu || contextMenu;\n  };\n  /**\n   * For internal use only - Initialize the event handler;\n   *\n   * @returns {void}\n   * @private\n   */\n  Grid.prototype.preRender = function () {\n    this.serviceLocator = new ServiceLocator();\n    this.initProperties();\n    this.initializeServices();\n  };\n  Grid.prototype.initProperties = function () {\n    this.isInitial = true;\n    this.sortedColumns = [];\n    this.inViewIndexes = [];\n    this.mediaCol = [];\n    this.isInitialLoad = false;\n    this.allowServerDataBinding = false;\n    this.ignoreCollectionWatch = true;\n    this.mergeCells = {};\n    this.isEdit = false;\n    this.checkAllRows = 'None';\n    this.isCheckBoxSelection = false;\n    this.isPersistSelection = false;\n    this.componentRefresh = Component.prototype.refresh;\n    this.freezeColumnRefresh = true;\n    this.filterOperators = {\n      contains: 'contains',\n      endsWith: 'endswith',\n      equal: 'equal',\n      greaterThan: 'greaterthan',\n      greaterThanOrEqual: 'greaterthanorequal',\n      lessThan: 'lessthan',\n      lessThanOrEqual: 'lessthanorequal',\n      notEqual: 'notequal',\n      startsWith: 'startswith',\n      wildCard: 'wildcard',\n      isNull: 'isnull',\n      notNull: 'notnull',\n      like: 'like'\n    };\n    this.defaultLocale = {\n      EmptyRecord: 'No records to display',\n      True: 'true',\n      False: 'false',\n      InvalidFilterMessage: 'Invalid Filter Data',\n      GroupDropArea: 'Drag a column header here to group its column',\n      UnGroup: 'Click here to ungroup',\n      UnGroupButton: 'Click here to ungroup',\n      GroupDisable: 'Grouping is disabled for this column',\n      FilterbarTitle: '\\'s filter bar cell',\n      EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n      // Toolbar Items\n      Add: 'Add',\n      Edit: 'Edit',\n      Cancel: 'Cancel',\n      Update: 'Update',\n      Delete: 'Delete',\n      Print: 'Print',\n      Pdfexport: 'PDF Export',\n      Excelexport: 'Excel Export',\n      Wordexport: 'Word Export',\n      Csvexport: 'CSV Export',\n      Search: 'Search',\n      Columnchooser: 'Columns',\n      Save: 'Save',\n      Item: 'item',\n      Items: 'items',\n      EditOperationAlert: 'No records selected for edit operation',\n      DeleteOperationAlert: 'No records selected for delete operation',\n      SaveButton: 'Save',\n      OKButton: 'OK',\n      CancelButton: 'Cancel',\n      EditFormTitle: 'Details of ',\n      AddFormTitle: 'Add New Record',\n      BatchSaveConfirm: 'Are you sure you want to save changes?',\n      BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n      ConfirmDelete: 'Are you sure you want to Delete Record?',\n      CancelEdit: 'Are you sure you want to Cancel the changes?',\n      ChooseColumns: 'Choose Column',\n      ColumnMenu: 'Column Menu',\n      SearchColumns: 'search columns',\n      Matchs: 'No matches found',\n      FilterButton: 'Filter',\n      FilterTitle: 'Filter',\n      FilterIcon: 'Filter',\n      ClearButton: 'Clear',\n      StartsWith: 'Starts With',\n      NotStartsWith: 'Does Not Start With',\n      Like: 'Like',\n      EndsWith: 'Ends With',\n      NotEndsWith: 'Does Not End With',\n      Contains: 'Contains',\n      NotContains: 'Does Not Contain',\n      IsNull: 'Null',\n      NotNull: 'Not Null',\n      IsEmpty: 'Empty',\n      IsNotEmpty: 'Not Empty',\n      Equal: 'Equal',\n      NotEqual: 'Not Equal',\n      LessThan: 'Less Than',\n      LessThanOrEqual: 'Less Than Or Equal',\n      GreaterThan: 'Greater Than',\n      GreaterThanOrEqual: 'Greater Than Or Equal',\n      In: 'In',\n      NotIn: 'Not In',\n      ChooseDate: 'Choose a Date',\n      EnterValue: 'Enter the value',\n      Copy: 'Copy',\n      Group: 'Group by this column',\n      Ungroup: 'Ungroup by this column',\n      GroupButton: 'Group button',\n      UnGroupAria: 'ungroup button',\n      GroupSeperator: 'Separator for the grouped columns',\n      UnGroupIcon: 'ungroup the grouped column ',\n      GroupedSortIcon: 'sort the grouped column ',\n      GroupedDrag: 'Drag the grouped column',\n      GroupCaption: ' is groupcaption cell',\n      CheckBoxLabel: 'checkbox',\n      SelectAllCheckbox: 'Select all checkbox',\n      SelectRow: 'Select row',\n      autoFitAll: 'Autofit all columns',\n      autoFit: 'Autofit this column',\n      AutoFitAll: 'Autofit all columns',\n      AutoFit: 'Autofit this column',\n      Export: 'Export',\n      FirstPage: 'First Page',\n      LastPage: 'Last Page',\n      PreviousPage: 'Previous Page',\n      NextPage: 'Next Page',\n      SortAscending: 'Sort Ascending',\n      SortDescending: 'Sort Descending',\n      EditRecord: 'Edit Record',\n      DeleteRecord: 'Delete Record',\n      FilterMenu: 'Filter',\n      SelectAll: 'Select All',\n      AddCurrentSelection: 'Add current selection to filter',\n      Blanks: 'Blanks',\n      FilterTrue: 'True',\n      FilterFalse: 'False',\n      NoResult: 'No matches found',\n      ClearFilter: 'Clear Filter',\n      Clear: 'Clear',\n      NumberFilter: 'Number Filters',\n      TextFilter: 'Text Filters',\n      DateFilter: 'Date Filters',\n      DateTimeFilter: 'DateTime Filters',\n      MatchCase: 'Match Case',\n      Between: 'Between',\n      CustomFilter: 'Custom Filter',\n      CustomFilterPlaceHolder: 'Enter the value',\n      CustomFilterDatePlaceHolder: 'Choose a date',\n      AND: 'AND',\n      OR: 'OR',\n      ShowRowsWhere: 'Show rows where:',\n      ToolbarMenuDialogARIA: 'Toolbar menu dialog',\n      FilterMenuDialogARIA: 'Filter menu',\n      ExcelFilterDialogARIA: 'Excel filter',\n      CheckBoxFilterDialogARIA: 'Checkbox filter',\n      DialogEditARIA: 'Edit dialog',\n      ColumnMenuDialogARIA: 'Column menu dialog',\n      CustomFilterDialogARIA: 'Customer filter dialog',\n      SortAtoZ: 'Sort A to Z',\n      SortZtoA: 'Sort Z to A',\n      SortByOldest: 'Sort by Oldest',\n      SortByNewest: 'Sort by Newest',\n      SortSmallestToLargest: 'Sort Smallest to Largest',\n      SortLargestToSmallest: 'Sort Largest to Smallest',\n      Sort: 'Sort',\n      SortIcon: 'Sort',\n      FilterDescription: 'Press Alt Down to open filter Menu',\n      SortDescription: 'Press Enter to sort',\n      ColumnMenuDescription: 'Press Alt Down to open Column Menu',\n      GroupDescription: 'Press Ctrl space to group',\n      ColumnHeader: ' column header ',\n      TemplateCell: ' is template cell',\n      CommandColumnAria: 'is Command column column header ',\n      DialogEdit: 'Dialog edit',\n      ClipBoard: 'clipboard',\n      AscendingText: 'Ascending',\n      DescendingText: 'Descending',\n      NoneText: 'None',\n      Expanded: 'Expanded',\n      Collapsed: 'Collapsed'\n    };\n    this.keyConfigs = {\n      downArrow: 'downarrow',\n      upArrow: 'uparrow',\n      rightArrow: 'rightarrow',\n      leftArrow: 'leftarrow',\n      shiftDown: 'shift+downarrow',\n      shiftUp: 'shift+uparrow',\n      shiftRight: 'shift+rightarrow',\n      shiftLeft: 'shift+leftarrow',\n      home: 'home',\n      end: 'end',\n      escape: 'escape',\n      ctrlHome: 'ctrl+home',\n      ctrlEnd: 'ctrl+end',\n      pageUp: 'pageup',\n      pageDown: 'pagedown',\n      ctrlAltPageUp: 'ctrl+alt+pageup',\n      ctrlAltPageDown: 'ctrl+alt+pagedown',\n      altPageUp: 'alt+pageup',\n      altPageDown: 'alt+pagedown',\n      altDownArrow: 'alt+downarrow',\n      altUpArrow: 'alt+uparrow',\n      ctrlDownArrow: 'ctrl+downarrow',\n      ctrlUpArrow: 'ctrl+uparrow',\n      ctrlPlusA: 'ctrl+A',\n      ctrlPlusP: 'ctrl+P',\n      insert: 'insert',\n      delete: 'delete',\n      f2: 'f2',\n      enter: 'enter',\n      ctrlEnter: 'ctrl+enter',\n      shiftEnter: 'shift+enter',\n      tab: 'tab',\n      shiftTab: 'shift+tab',\n      space: 'space',\n      ctrlPlusC: 'ctrl+C',\n      ctrlShiftPlusH: 'ctrl+shift+H',\n      ctrlSpace: 'ctrl+space',\n      ctrlLeftArrow: 'ctrl+leftarrow',\n      ctrlRightArrow: 'ctrl+rightarrow'\n    };\n  };\n  /**\n   * For internal use only - To Initialize the component rendering.\n   *\n   * @returns {void}\n   * @private\n   */\n  Grid.prototype.render = function () {\n    this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n    this.ariaService.setOptions(this.element, {\n      role: 'grid'\n    });\n    createSpinner({\n      target: this.element,\n      cssClass: this.cssClass ? this.cssClass : null\n    }, this.createElement);\n    this.renderModule = new Render(this, this.serviceLocator);\n    this.searchModule = new Search(this);\n    this.scrollModule = new Scroll(this);\n    this.notify(events.initialLoad, {});\n    if (this.pageSettings.enableQueryString) {\n      var pageValue = new URL(window.location.href).searchParams.get('page');\n      if (!isNullOrUndefined(pageValue) && window.location.href.indexOf('?page=') > 0) {\n        var currentPageValue = parseInt(pageValue, 10);\n        this.setProperties({\n          pageSettings: {\n            currentPage: currentPageValue\n          }\n        }, true);\n        this.pageSettings.currentPage = currentPageValue;\n      }\n    }\n    if ((this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined) && !(!isNullOrUndefined(this.dataSource) && this.dataSource.result)) {\n      this.isVirtualAdaptive = true;\n    }\n    if (this.aggregateModule && this.aggregates.length) {\n      for (var i = 0; i < this.aggregates.length; i++) {\n        for (var j = 0; j < this.aggregates[parseInt(i.toString(), 10)].columns.length; j++) {\n          var column = this.aggregates[parseInt(i.toString(), 10)].columns[parseInt(j.toString(), 10)];\n          if (column['types']) {\n            column.type = column['types'];\n          }\n        }\n      }\n    }\n    if (this.isReact) {\n      var args = {\n        requireTemplateRef: this.requireTemplateRef\n      };\n      this.trigger(events.load, args);\n      if (!args.requireTemplateRef) {\n        this.requireTemplateRef = args.requireTemplateRef;\n      }\n    } else {\n      this.trigger(events.load);\n    }\n    prepareColumns(this.columns, this.enableColumnVirtualization, this);\n    if (this.enableColumnVirtualization && this.isChangeDataSourceCall && this.columnModel) {\n      this.columnModel = [];\n      this.updateColumnModel(this.columns);\n    }\n    this.isPreparedFrozenColumns = true;\n    if (this.enablePersistence) {\n      this.notify(events.columnsPrepared, {});\n    }\n    this.getMediaColumns();\n    setColumnIndex(this.columns);\n    if (this.isFrozenGrid() && !this.mergedColumns) {\n      this.setInitialFrozenColumnIndex(this.columns);\n    }\n    this.checkLockColumns(this.columns);\n    this.getColumns();\n    this.processModel();\n    this.gridRender();\n    this.wireEvents();\n    this.addListener();\n    this.updateDefaultCursor();\n    this.updateStackedFilter();\n    if (this.loadingIndicator.indicatorType === 'Spinner') {\n      this.showSpinner();\n    }\n    this.notify(events.initialEnd, {});\n    if (this.loadingIndicator.indicatorType === 'Shimmer') {\n      this.refreshMaskRow();\n    }\n    if (this.refreshing) {\n      this.trigger('created');\n    }\n  };\n  Grid.prototype.setInitialFrozenColumnIndex = function (columns) {\n    for (var i = 0; i < columns.length; i++) {\n      var column = columns[parseInt(i.toString(), 10)];\n      column[\"\" + literals.initialFrozenColumnIndex] = column.index;\n      if (column.columns) {\n        this.setInitialFrozenColumnIndex(column.columns);\n      }\n    }\n  };\n  /**\n   * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.showSpinner = function () {\n    if (!this.isExportGrid) {\n      showSpinner(this.element);\n    }\n  };\n  /**\n   * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.hideSpinner = function () {\n    if (!this.isExportGrid) {\n      hideSpinner(this.element);\n    }\n  };\n  Grid.prototype.showMaskRow = function (axisDirection, dialogElement) {\n    if (isNullOrUndefined(this.headerModule) || isNullOrUndefined(this.contentModule)) {\n      return;\n    }\n    var gridHeader = this.getHeaderContent().firstChild;\n    var gridContent = this.getContent().firstChild;\n    var gridFooter = this.getFooterContent();\n    if (dialogElement) {\n      var dialogHolder = dialogElement.querySelector('.e-checkboxlist');\n      var maskRowCount = Math.floor(dialogHolder.getBoundingClientRect().height / this.getRowHeight());\n      var maskTemplate = '<div class=\"e-ftrchk e-mask-ftrchk\">' + '<div class=\"e-checkbox-wrapper\"><input class=\"e-chk-hidden\">' + this.getShimmerTemplate() + this.getShimmerTemplate() + '</div></div>';\n      dialogHolder.innerHTML = '';\n      for (var i = 0; i < maskRowCount; i++) {\n        dialogHolder.innerHTML += maskTemplate;\n        dialogHolder.querySelector('.e-ftrchk.e-mask-ftrchk').style.width = '100%';\n        dialogHolder.querySelector('.e-checkbox-wrapper').style.width = '100%';\n        var maskSpan = [].slice.call(dialogHolder.querySelectorAll('.e-mask:not(.e-mask-checkbox-filter-intent):not(.e-mask-checkbox-filter-span-intent)'));\n        maskSpan[0].classList.add('e-mask-checkbox-filter-intent');\n        maskSpan[1].classList.add('e-mask-checkbox-filter-span-intent');\n      }\n      return;\n    }\n    if (!this.enableRtl && !this.getHeaderContent().style.paddingRight || this.enableRtl && !this.getHeaderContent().style.paddingLeft) {\n      gridContent.style.overflowY = 'hidden';\n    }\n    if (!this.isInitialLoad && !this.getColumns().length) {\n      var contentHeight = gridContent.getBoundingClientRect().height;\n      var maskTableHeight = contentHeight === 0 ? this.allowPaging ? this.pageSettings.pageSize * this.getRowHeight() : window.innerHeight : contentHeight;\n      var contentRowCount = Math.ceil(maskTableHeight / this.getRowHeight());\n      if (this.rowRenderingMode !== 'Vertical') {\n        this.headerMaskTable = this.createEmptyMaskTable(gridHeader, 1);\n      }\n      this.contentMaskTable = this.createEmptyMaskTable(gridContent, contentRowCount);\n      return;\n    }\n    this.maskRowContentScroll = (this.enableVirtualization || this.enableColumnVirtualization) && axisDirection ? true : false;\n    if (!this.contentMaskTable) {\n      var content = gridContent;\n      if (this.enableVirtualization || this.enableColumnVirtualization) {\n        content = content.querySelector('.e-virtualtable');\n      }\n      if (!isNullOrUndefined(content.querySelector('tbody'))) {\n        this.contentMaskTable = this.createMaskTable(content, this.getContentMaskColumns(), axisDirection);\n      }\n    }\n    if (!this.headerMaskTable && (this.isFrozenGrid() || this.enableColumnVirtualization && axisDirection === 'X')) {\n      var content = gridHeader;\n      if (this.enableColumnVirtualization && axisDirection === 'X') {\n        content = content.querySelector('.e-virtualtable');\n      }\n      this.headerMaskTable = this.createMaskTable(content, this.getContentMaskColumns(), axisDirection);\n    }\n    if (gridFooter && gridFooter.querySelector('.e-summaryrow')) {\n      var gridFooterContent = gridFooter.firstChild;\n      if (!this.footerContentMaskTable) {\n        var footerContent = gridFooterContent;\n        this.footerContentMaskTable = this.createMaskTable(footerContent);\n      }\n    }\n    if (!(this.enableVirtualization && axisDirection)) {\n      EventHandler.add(gridContent, 'scroll', this.translateMaskRow, this);\n    }\n  };\n  Grid.prototype.getContentMaskColumns = function () {\n    return this.getColumns();\n  };\n  Grid.prototype.createEmptyMaskTable = function (maskElement, rowCount) {\n    var table = this.createElement('table', {\n      className: 'e-table e-masked-table'\n    });\n    var tbody = this.createElement('tbody', {\n      className: 'e-masked-tbody'\n    });\n    var row = this.createElement('tr', {\n      className: 'e-masked-row e-row'\n    });\n    row.style.height = this.getRowHeight() + \"px\";\n    var cell = this.createElement('td', {\n      className: 'e-masked-cell e-rowcell'\n    });\n    cell.innerHTML = this.getShimmerTemplate();\n    row.appendChild(cell);\n    for (var i = 0; i < rowCount; i++) {\n      tbody.appendChild(row.cloneNode(true));\n    }\n    table.appendChild(tbody);\n    maskElement.appendChild(table);\n    return table;\n  };\n  Grid.prototype.createMaskTable = function (element, columns, axisDirection) {\n    var parentElement = element;\n    var header = closest(parentElement, '.e-gridheader') ? true : false;\n    var content = closest(parentElement, '.e-gridcontent') ? true : false;\n    var footer = closest(parentElement, '.e-gridfooter') ? true : false;\n    var gridContent = this.getContent().firstChild;\n    var gridContentScrollHeight = gridContent.scrollHeight;\n    var table = parentElement.querySelector('table');\n    var maskTable = table.cloneNode();\n    maskTable.removeAttribute('role');\n    maskTable.removeAttribute('id');\n    updateCSSText(maskTable, \"position: absolute; z-index: 5; width: \" + table.getBoundingClientRect().width + \"px;\");\n    if (header && !(this.enableColumnVirtualization && axisDirection === 'X')) {\n      maskTable.style.transform = 'translate(0px,' + table.querySelector('thead').getBoundingClientRect().height + 'px)';\n    }\n    maskTable.setAttribute('class', 'e-table e-masked-table');\n    var maskColgroup = table.querySelector('colgroup').cloneNode(true);\n    maskColgroup.removeAttribute('id');\n    maskColgroup.setAttribute('class', 'e-masked-colgroup');\n    maskTable.appendChild(maskColgroup);\n    if (header && this.enableColumnVirtualization && axisDirection === 'X') {\n      var row = this.createMaskRow(maskColgroup, columns);\n      if (this.isFrozenGrid()) {\n        var frzTd = [].slice.call(row.querySelectorAll('.e-rowcell'));\n        for (var i = 0; i < frzTd.length; i++) {\n          if (i < this.frozenLeftCount) {\n            if (this.frozenLeftCount - 1 === i) {\n              frzTd[parseInt(i.toString(), 10)].classList.add('e-freezeleftborder');\n            }\n            frzTd[parseInt(i.toString(), 10)].classList.add('e-leftfreeze');\n            frzTd[parseInt(i.toString(), 10)].setAttribute('aria-colindex', (i + 1).toString());\n            frzTd[parseInt(i.toString(), 10)].style.left = columns[parseInt(i.toString(), 10)].valueX - this.translateX + 'px';\n          } else if (frzTd.length - this.frozenRightCount <= i && columns[parseInt(i.toString(), 10)]) {\n            if (frzTd.length - this.frozenRightCount === i) {\n              frzTd[parseInt(i.toString(), 10)].classList.add('e-freezerightborder');\n            }\n            frzTd[parseInt(i.toString(), 10)].classList.add('e-rightfreeze');\n            frzTd[parseInt(i.toString(), 10)].setAttribute('aria-colindex', (i + 1).toString());\n            frzTd[parseInt(i.toString(), 10)].style.right = this.translateX + columns[parseInt(i.toString(), 10)].valueX + 'px';\n          }\n        }\n      }\n      var thead = table.querySelector('thead');\n      var rows = [].slice.call(thead.querySelectorAll('tr'));\n      var maskTHead = thead.cloneNode();\n      maskTHead.removeAttribute('role');\n      maskTHead.setAttribute('class', 'e-masked-thead');\n      var rowCount = rows.length;\n      for (var i = 0; i < rowCount; i++) {\n        maskTHead.appendChild(row.cloneNode(true));\n        maskTHead.childNodes[parseInt(i.toString(), 10)].style.height = rows[parseInt(i.toString(), 10)].getBoundingClientRect().height + 'px';\n      }\n      maskTable.appendChild(maskTHead);\n    }\n    var maskTBody = table.querySelector('tbody').cloneNode();\n    maskTBody.removeAttribute('role');\n    maskTBody.setAttribute('class', 'e-masked-tbody');\n    var tbody = table.querySelector('tbody');\n    if (content || header) {\n      var rowCountElement = gridContent;\n      var rowCount = Math.ceil(rowCountElement.getBoundingClientRect().height / this.getRowHeight());\n      if (this.allowPaging && this.pageSettings.pageSize !== this.currentViewData.length && this.pagerModule.pagerObj.totalPages !== this.pageSettings.currentPage) {\n        var row = this.createMaskRow(maskColgroup, columns);\n        var altRow = row.cloneNode(true);\n        altRow.classList.add('e-altrow');\n        for (var i = 0; i < this.pageSettings.pageSize - this.currentViewData.length; i++) {\n          maskTBody.appendChild(i % 2 === 1 ? altRow.cloneNode(true) : row.cloneNode(true));\n        }\n      }\n      if (tbody.querySelector('.e-emptyrow') || !tbody.childNodes.length || content && this.childGrid) {\n        var row = this.createMaskRow(maskColgroup, columns);\n        var altRow = row.cloneNode(true);\n        altRow.classList.add('e-altrow');\n        for (var i = 0; i < rowCount; i++) {\n          var altNumber = 1;\n          maskTBody.appendChild((i + altNumber) % 2 === 0 ? altRow.cloneNode(true) : row.cloneNode(true));\n        }\n      } else {\n        var rowsQuery = 'tr:not(.e-hide):not([style*=\"display:none\"]):not([style*=\"display: none\"])';\n        var rows = [].slice.call(tbody.querySelectorAll(rowsQuery));\n        var addEditRow = tbody.querySelector('.e-addedrow, .e-editedrow');\n        var addEditRowIndex = void 0;\n        if (addEditRow) {\n          addEditRowIndex = rows.indexOf(addEditRow);\n          if (this.isFrozenGrid() && this.enableColumnVirtualization) {\n            var frzTd = [].slice.call(rows[addEditRowIndex + 1].querySelectorAll('.e-rowcell'));\n            for (var i = 0; i < frzTd.length; i++) {\n              if (i < this.frozenLeftCount) {\n                frzTd[parseInt(i.toString(), 10)].classList.add('e-leftfreeze');\n                frzTd[parseInt(i.toString(), 10)].setAttribute('aria-colindex', (i + 1).toString());\n                frzTd[parseInt(i.toString(), 10)].style.left = columns[parseInt(i.toString(), 10)].valueX - this.translateX + 'px';\n              } else if (frzTd.length - this.frozenRightCount <= i && columns[parseInt(i.toString(), 10)]) {\n                frzTd[parseInt(i.toString(), 10)].classList.add('e-rightfreeze');\n                frzTd[parseInt(i.toString(), 10)].setAttribute('aria-colindex', (i + 1).toString());\n                frzTd[parseInt(i.toString(), 10)].style.right = this.translateX + columns[parseInt(i.toString(), 10)].valueX + 'px';\n              }\n            }\n          }\n          if (addEditRow.classList.contains('e-addedrow')) {\n            rows.splice(addEditRowIndex, 2);\n          } else {\n            rows.splice(addEditRowIndex, 1);\n          }\n        }\n        rowCount = (this.enableVirtualization || this.enableColumnVirtualization) && axisDirection ? rows.length : rowCount <= rows.length ? rowCount : rows.length;\n        for (var i = 0; i < rowCount; i++) {\n          maskTBody.appendChild(this.applyMaskRow(rows[parseInt(i.toString(), 10)].cloneNode(true), rows[parseInt(i.toString(), 10)].getBoundingClientRect().height));\n        }\n        if (addEditRow && addEditRow.classList.contains('e-editedrow') && addEditRowIndex < rowCount) {\n          var addEditMaskRow = maskTBody.childNodes[parseInt(addEditRowIndex.toString(), 10)];\n          addEditMaskRow.style.height = this.getRowHeight() + 'px';\n          addEditMaskRow.classList.add('e-row');\n          if (addEditRow.classList.contains('e-altrow')) {\n            addEditMaskRow.classList.add('e-altrow');\n          }\n        }\n      }\n    }\n    maskTable.appendChild(maskTBody);\n    if (footer) {\n      var tfoot = table.querySelector('tfoot');\n      var maskTFoot = tfoot.cloneNode();\n      maskTFoot.setAttribute('class', 'e-masked-tfoot');\n      var rows = [].slice.call(tfoot.querySelectorAll('tr'));\n      for (var i = 0; i < rows.length; i++) {\n        maskTFoot.appendChild(this.applyMaskRow(rows[parseInt(i.toString(), 10)].cloneNode(true), rows[parseInt(i.toString(), 10)].getBoundingClientRect().height));\n      }\n      maskTable.appendChild(maskTFoot);\n    }\n    if (header && this.isFrozenGrid() && !this.enableColumnVirtualization) {\n      this.getHeaderContent().querySelector('.' + literals.headerContent).style.position = 'relative';\n    }\n    parentElement.insertBefore(maskTable, parentElement.firstChild);\n    if (content && !(this.enableVirtualization && axisDirection)) {\n      var minScrollTop = gridContentScrollHeight - maskTable.getBoundingClientRect().height;\n      minScrollTop = minScrollTop < 0 ? 0 : minScrollTop;\n      var scrollTop = gridContent.scrollTop <= minScrollTop ? gridContent.scrollTop : minScrollTop;\n      if (this.enableVirtualization) {\n        scrollTop -= getTransformValues(closest(parentElement, '.e-virtualtable')).height;\n      }\n      maskTable.style.transform = 'translate(0px,' + scrollTop + 'px)';\n    }\n    return maskTable;\n  };\n  Grid.prototype.applyMaskRow = function (row, rowHeight) {\n    var maskRow = row;\n    maskRow.removeAttribute('role');\n    maskRow.removeAttribute('aria-rowindex');\n    maskRow.removeAttribute('data-uid');\n    maskRow.classList.add('e-masked-row');\n    maskRow.style.height = rowHeight + 'px';\n    var maskCells = [].slice.call(maskRow.childNodes);\n    for (var i = 0; i < maskCells.length; i++) {\n      var maskCell = maskCells[parseInt(i.toString(), 10)];\n      var displayAsCheckBoxCell = maskCell.firstChild && maskCell.firstChild.classList && maskCell.firstChild.classList.contains('e-checkbox-wrapper');\n      maskCell.removeAttribute('role');\n      maskCell.removeAttribute('tabindex');\n      maskCell.removeAttribute('aria-label');\n      if (this.enableColumnVirtualization && maskCell.classList.contains('e-fixedfreeze')) {\n        removeClass([maskCell], ['e-fixedfreeze', 'e-freezeleftborder', 'e-freezerightborder']);\n        addClass([maskCell], ['e-unfreeze']);\n      }\n      maskCell.removeAttribute('aria-colindex');\n      maskCell.removeAttribute('index');\n      maskCell.removeAttribute('ej-mappingname');\n      maskCell.removeAttribute('ej-mappingvalue');\n      maskCell.removeAttribute('e-mappinguid');\n      maskCell.removeAttribute('aria-expanded');\n      maskCell.classList.add('e-masked-cell');\n      maskCell.innerHTML = this.getShimmerTemplate();\n      if (maskCell.classList.contains('e-recordplusexpand') || maskCell.classList.contains('e-recordpluscollapse')) {\n        maskCell.firstChild.classList.add('e-mask-group-intent');\n      } else if (maskCell.classList.contains('e-gridchkbox') || displayAsCheckBoxCell) {\n        maskCell.firstChild.classList.add('e-mask-checkbox-intent');\n      } else if (maskCell.classList.contains('e-rowdragdrop')) {\n        maskCell.firstChild.classList.add('e-mask-drag-intent');\n      } else if (maskCell.classList.contains('e-indentcell')) {\n        maskCell.innerHTML = '';\n      }\n    }\n    return maskRow;\n  };\n  Grid.prototype.createMaskRow = function (refColgroup, refColumns) {\n    var colgroup = refColgroup;\n    var columns = refColumns;\n    var row = this.createElement('tr', {\n      className: 'e-masked-row e-row'\n    });\n    if (this.rowRenderingMode !== 'Vertical') {\n      row.style.height = this.getRowHeight() + 'px';\n    }\n    var td = this.createElement('td', {\n      className: 'e-masked-cell e-rowcell'\n    });\n    for (var i = 0, colIndex = 0; i < colgroup.childNodes.length; i++) {\n      var col = colgroup.childNodes[parseInt(i.toString(), 10)];\n      var localTD = td.cloneNode();\n      localTD.innerHTML = this.getShimmerTemplate();\n      if (!(col.classList.contains('e-group-intent') || col.classList.contains('e-detail-intent') || col.classList.contains('e-drag-intent'))) {\n        if (this.rowRenderingMode === 'Vertical' && columns[parseInt(colIndex.toString(), 10)]) {\n          localTD.setAttribute('data-cell', columns[parseInt(colIndex.toString(), 10)].headerText ? columns[parseInt(colIndex.toString(), 10)].headerText : columns[parseInt(colIndex.toString(), 10)].field);\n        }\n        if (col.style.display === 'none') {\n          localTD.classList.add('e-hide');\n        } else {\n          localTD.style.textAlign = columns[parseInt(colIndex.toString(), 10)] && columns[parseInt(colIndex.toString(), 10)].textAlign ? columns[parseInt(colIndex.toString(), 10)].textAlign.toLowerCase() : this.enableRtl ? 'right' : 'left';\n          if (columns[parseInt(colIndex.toString(), 10)] && (columns[parseInt(colIndex.toString(), 10)].type === 'checkbox' || columns[parseInt(colIndex.toString(), 10)].displayAsCheckBox)) {\n            localTD.firstChild.classList.add('e-mask-checkbox-intent');\n          }\n        }\n        colIndex++;\n      } else {\n        if (col.classList.contains('e-group-intent')) {\n          localTD.firstChild.classList.add('e-mask-group-intent');\n        } else if (col.classList.contains('e-detail-intent')) {\n          localTD.firstChild.classList.add('e-mask-detail-intent');\n        } else if (col.classList.contains('e-drag-intent')) {\n          localTD.firstChild.classList.add('e-mask-drag-intent');\n        }\n      }\n      row.appendChild(localTD);\n    }\n    return row;\n  };\n  Grid.prototype.getShimmerTemplate = function () {\n    if (this.maskRowContentScroll) {\n      return '<span class=\"e-mask e-skeleton e-skeleton-text\"></span>';\n    }\n    return '<span class=\"e-mask e-skeleton e-skeleton-text e-shimmer-wave\"></span>';\n  };\n  Grid.prototype.addShimmerEffect = function () {\n    this.maskRowContentScroll = false;\n    var maskSpan = [].slice.call(this.element.querySelectorAll('.e-mask:not(.e-shimmer-wave)'));\n    for (var i = 0; i < maskSpan.length; i++) {\n      if (maskSpan[parseInt(i.toString(), 10)]) {\n        maskSpan[parseInt(i.toString(), 10)].classList.add('e-shimmer-wave');\n      }\n    }\n  };\n  Grid.prototype.translateMaskRow = function (e) {\n    var target = e.target;\n    var maskTables = target.querySelectorAll('.e-masked-table');\n    for (var i = 0; i < maskTables.length; i++) {\n      var maskTable = maskTables[parseInt(i.toString(), 10)];\n      if (maskTable) {\n        var minScrollTop = target.scrollHeight - maskTable.getBoundingClientRect().height;\n        minScrollTop = minScrollTop < 0 ? 0 : minScrollTop;\n        var scrollTop = target.scrollTop <= minScrollTop ? target.scrollTop : minScrollTop;\n        if (this.enableVirtualization) {\n          scrollTop -= getTransformValues(closest(maskTable, '.e-virtualtable')).height;\n        }\n        maskTable.style.transform = 'translate(0px,' + scrollTop + 'px)';\n      }\n    }\n  };\n  Grid.prototype.removeMaskRow = function () {\n    if (!isNullOrUndefined(this.contentModule)) {\n      var gridContent = this.getContent().firstChild;\n      EventHandler.remove(gridContent, 'scroll', this.translateMaskRow);\n    }\n    if (this.headerMaskTable && this.isFrozenGrid() && !this.enableColumnVirtualization) {\n      this.getHeaderContent().querySelector('.' + literals.headerContent).style.position = '';\n    }\n    var maskTables = [this.headerMaskTable, this.contentMaskTable, this.footerContentMaskTable];\n    for (var i = 0; i < maskTables.length; i++) {\n      var maskTable = maskTables[parseInt(i.toString(), 10)];\n      if (maskTable) {\n        remove(maskTable);\n      }\n    }\n    this.headerMaskTable = null;\n    this.contentMaskTable = null;\n    this.footerContentMaskTable = null;\n  };\n  Grid.prototype.refreshMaskRow = function () {\n    var gridContent = this.getContent().firstChild;\n    if (!this.isInitialLoad && !this.getColumns().length) {\n      return;\n    }\n    if (this.contentMaskTable && gridContent.querySelector('.e-masked-table')) {\n      var content = gridContent;\n      if (this.enableVirtualization) {\n        content = content.querySelector('.e-virtualtable');\n      }\n      this.refreshMaskRowColgroupWidth(content);\n    }\n  };\n  Grid.prototype.refreshMaskRowColgroupWidth = function (content) {\n    var table = content.querySelector('table:not(.e-masked-table)');\n    var colgroup = table.querySelector(literals.colGroup).cloneNode(true);\n    var maskTable = content.querySelector('.e-masked-table');\n    colgroup.removeAttribute('id');\n    colgroup.setAttribute('class', 'e-masked-colgroup');\n    for (var i = 0; i < colgroup.childNodes.length; i++) {\n      colgroup.childNodes[parseInt(i.toString(), 10)].removeAttribute('class');\n    }\n    remove(maskTable.querySelector('.e-masked-colgroup'));\n    maskTable.insertBefore(colgroup, maskTable.firstChild);\n    maskTable.style.width = table.getBoundingClientRect().width + 'px';\n  };\n  Grid.prototype.updateStackedFilter = function () {\n    if (this.allowFiltering && this.filterSettings.type === 'FilterBar' && this.getHeaderContent().getElementsByClassName('e-stackedheadercell').length) {\n      this.getHeaderContent().classList.add('e-stackedfilter');\n    } else {\n      this.getHeaderContent().classList.remove('e-stackedfilter');\n    }\n  };\n  Grid.prototype.getMediaColumns = function () {\n    if (!this.enableColumnVirtualization) {\n      var gcol = this.getColumns();\n      this.getShowHideService = this.serviceLocator.getService('showHideService');\n      if (!isNullOrUndefined(gcol)) {\n        for (var index = 0; index < gcol.length; index++) {\n          if (!isNullOrUndefined(gcol[parseInt(index.toString(), 10)].hideAtMedia) && (isNullOrUndefined(gcol[parseInt(index.toString(), 10)].visible) || gcol[parseInt(index.toString(), 10)].visible)) {\n            this.pushMediaColumn(gcol[parseInt(index.toString(), 10)], index);\n          }\n        }\n      }\n    }\n    this.updateFrozenColumnsWidth();\n  };\n  Grid.prototype.pushMediaColumn = function (col, index) {\n    this.mediaCol.push(col);\n    this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n    this.mediaQueryUpdate(index, this.media[col.uid]);\n    this.mediaBindInstance[parseInt(index.toString(), 10)] = this.mediaQueryUpdate.bind(this, index);\n    this.media[col.uid].addListener(this.mediaBindInstance[parseInt(index.toString(), 10)]);\n  };\n  /**\n   * @param {Column} col - specifies the column\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.updateMediaColumns = function (col) {\n    if (!this.enableColumnVirtualization) {\n      var index = this.getColumnIndexByUid(col.uid);\n      for (var i = 0; i < this.mediaCol.length; i++) {\n        if (col.uid === this.mediaCol[parseInt(i.toString(), 10)].uid) {\n          this.mediaCol.splice(i, 1);\n          return;\n        }\n      }\n      this.pushMediaColumn(col, index);\n    }\n  };\n  /**\n   * @param {number} columnIndex - specifies the column index\n   * @param {MediaQueryList} e - specifies the MediaQueryList\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n    var col = this.getColumns()[parseInt(columnIndex.toString(), 10)];\n    if (this.mediaCol.some(function (mediaColumn) {\n      return mediaColumn.uid === col.uid;\n    })) {\n      col.visible = e.matches;\n      if (this.isInitialLoad) {\n        this.invokedFromMedia = true;\n        if (col.visible) {\n          this.showHider.show(col.headerText, 'headerText');\n        } else {\n          this.showHider.hide(col.headerText, 'headerText');\n        }\n      }\n    }\n  };\n  Grid.prototype.refreshMediaCol = function () {\n    this.isInitialLoad = true;\n    var footerContent = this.element.querySelector('.' + literals.gridFooter);\n    if (this.aggregates.length && this.element.scrollHeight > parseInt(this.height.toString(), 10) && footerContent) {\n      addClass([footerContent], ['e-footerpadding']);\n    }\n    var checkboxColumn = this.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n    if (checkboxColumn.length === 0 || checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n      this.isCheckBoxSelection = false;\n    }\n    if (this.rowRenderingMode === 'Vertical') {\n      if (this.enableHover) {\n        this.setProperties({\n          enableAdaptiveUI: true,\n          enableHover: false\n        }, true);\n        removeClass([this.element], 'e-gridhover');\n      }\n    }\n    if (this.enableAdaptiveUI && this.scrollModule) {\n      this.scrollModule.refresh();\n    }\n    if (this.isFrozenGrid() && this.isAutoGenerateColumns) {\n      this.widthService.setWidthToColumns();\n      this.isAutoGenerateColumns = false;\n    }\n  };\n  Grid.prototype.removeMediaListener = function () {\n    for (var i = 0; i < this.mediaCol.length; i++) {\n      this.media[this.mediaCol[parseInt(i.toString(), 10)].uid].removeListener(this.mediaBindInstance[this.mediaCol[parseInt(i.toString(), 10)].index]);\n    }\n  };\n  /**\n   * For internal use only - Initialize the event handler\n   *\n   * @returns {void}\n   * @private\n   */\n  Grid.prototype.eventInitializer = function () {\n    //eventInitializer\n  };\n  /**\n   * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n   *\n   * @function destroy\n   * @returns {void}\n   */\n  Grid.prototype.destroy = function () {\n    var gridElement = this.element;\n    if (!gridElement) {\n      return;\n    }\n    var hasGridChild = gridElement.querySelector('.' + literals.gridHeader) && gridElement.querySelector('.' + literals.gridContent) ? true : false;\n    if (hasGridChild) {\n      this.unwireEvents();\n    }\n    this.removeListener();\n    this.removeMediaListener();\n    this.notify(events.destroy, {});\n    this.destroyDependentModules();\n    if (this.isReact) {\n      this.destroyTemplate(['template']);\n    }\n    if (this.isVue) {\n      this.destroyTemplate();\n    }\n    if (hasGridChild) {\n      _super.prototype.destroy.call(this);\n    }\n    this.toolTipObj.destroy();\n    if (this.isReact && !Browser.isIE) {\n      this.element.innerHTML = '';\n    }\n    var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService', 'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider', 'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n    for (var i = 0; i < modules.length; i++) {\n      if (this[modules[parseInt(i.toString(), 10)]]) {\n        this[modules[parseInt(i.toString(), 10)]] = null;\n      }\n    }\n    this.element.innerHTML = '';\n    classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n  };\n  Grid.prototype.destroyDependentModules = function () {\n    var gridElement = this.element;\n    if (!gridElement || !gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent)) {\n      return;\n    }\n    this.scrollModule.destroy();\n    this.keyboardModule.destroy();\n    this.focusModule.destroy();\n    this.clipboardModule.destroy();\n    this.printModule.destroy();\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n  Grid.prototype.getModuleName = function () {\n    return 'grid';\n  };\n  Grid.prototype.enableBoxSelection = function () {\n    if (this.enableAutoFill) {\n      this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n      this.element.classList.add('e-afenabled');\n    } else {\n      this.element.classList.remove('e-afenabled');\n      this.notify(events.destroyAutoFillElements, {});\n    }\n  };\n  Grid.prototype.setCSSClass = function (oldCSSClass) {\n    if (this.cssClass) {\n      addClass([this.element], this.cssClass.split(' '));\n    }\n    if (oldCSSClass) {\n      removeClass([this.element], oldCSSClass.split(' '));\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   *\n   * @param {GridModel} newProp - Defines new properties\n   * @param {GridModel} oldProp - Defines old properties\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n    var requireRefresh = false;\n    var requireGridRefresh = false;\n    var freezeRefresh = false;\n    var checkCursor;\n    var args = {\n      requestType: 'refresh'\n    };\n    var childGridParent = null;\n    var parentInstance = null;\n    if (this.isDestroyed) {\n      return;\n    }\n    this.log('module_missing');\n    if (this.isEllipsisTooltip()) {\n      this.toolTipObj.close();\n    }\n    var properties = Object.keys(newProp);\n    if (properties.indexOf('columns') > -1) {\n      if (this.enableColumnVirtualization) {\n        this.columnModel = [];\n      }\n      this.updateColumnObject();\n      requireGridRefresh = true;\n    }\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n      var prop = properties_1[_i];\n      switch (prop) {\n        case 'allowPaging':\n          this.notify(events.uiUpdate, {\n            module: 'pager',\n            enable: this.allowPaging\n          });\n          requireRefresh = true;\n          if (this.height === '100%') {\n            this.scrollModule.refresh();\n          }\n          break;\n        case 'pageSettings':\n          if (this.pageTemplateChange) {\n            this.pageTemplateChange = false;\n            this.notify(events.inBoundModelChanged, {\n              module: 'pager',\n              properties: newProp.pageSettings\n            });\n            break;\n          }\n          if (this.pagerModule && this.pagerModule.isCancel) {\n            this.pagerModule.isCancel = false;\n            return;\n          }\n          this.notify(events.inBoundModelChanged, {\n            module: 'pager',\n            properties: newProp.pageSettings\n          });\n          if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize) && isNullOrUndefined(newProp.pageSettings.totalRecordsCount) || !isNullOrUndefined(oldProp.pageSettings) && newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage && !this.enableColumnVirtualization && !this.enableVirtualization && this.pageRequireRefresh && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize) {\n            requireRefresh = true;\n          }\n          if (!this.pageRequireRefresh) {\n            this.pageRequireRefresh = true;\n          }\n          if (this.pagerModule && this.pagerModule.isCancel) {\n            this.pagerModule.isCancel = false;\n          }\n          break;\n        case 'allowSorting':\n          this.notify(events.uiUpdate, {\n            module: 'sort',\n            enable: this.allowSorting\n          });\n          requireRefresh = true;\n          checkCursor = true;\n          break;\n        case 'allowFiltering':\n          this.updateStackedFilter();\n          this.notify(events.uiUpdate, {\n            module: 'filter',\n            enable: this.allowFiltering\n          });\n          requireRefresh = true;\n          if (this.filterSettings.type !== 'FilterBar' || this.editSettings.showAddNewRow && this.filterSettings.type === 'FilterBar') {\n            this.refreshHeader();\n          } else {\n            if (this.height === '100%') {\n              this.scrollModule.refresh();\n            }\n          }\n          break;\n        case 'height':\n        case 'width':\n          this.notify(events.uiUpdate, {\n            module: 'scroll',\n            properties: {\n              width: newProp.width,\n              height: newProp.height\n            }\n          });\n          if (this.allowPaging) {\n            this.pagerModule.refresh();\n          }\n          break;\n        case 'allowReordering':\n          this.headerModule.refreshUI();\n          checkCursor = true;\n          break;\n        case 'allowRowDragAndDrop':\n          this.notify(events.uiUpdate, {\n            module: 'rowDragAndDrop',\n            enable: this.allowRowDragAndDrop\n          });\n          this.renderModule.refresh();\n          this.headerModule.refreshUI();\n          break;\n        case 'allowSelection':\n          this.notify(events.uiUpdate, {\n            module: 'selection',\n            enable: this.allowSelection\n          });\n          this.renderModule.refresh();\n          break;\n        case 'cssClass':\n          this.setCSSClass(oldProp.cssClass);\n          break;\n        case 'enableAutoFill':\n          if (this.selectionModule) {\n            this.enableBoxSelection();\n            this.selectionModule.updateAutoFillPosition();\n          }\n          break;\n        case 'rowTemplate':\n          this.rowTemplateFn = templateCompiler(this.rowTemplate);\n          requireRefresh = true;\n          break;\n        case 'emptyRecordTemplate':\n          this.emptyRecordTemplateFn = templateCompiler(this.emptyRecordTemplate);\n          requireRefresh = true;\n          break;\n        case 'detailTemplate':\n          this.detailTemplateFn = templateCompiler(this.detailTemplate);\n          requireRefresh = true;\n          break;\n        case 'allowGrouping':\n          this.notify(events.uiUpdate, {\n            module: 'group',\n            enable: this.allowGrouping\n          });\n          this.headerModule.refreshUI();\n          requireRefresh = true;\n          checkCursor = true;\n          if (this.height === '100%') {\n            this.scrollModule.refresh();\n          }\n          break;\n        case 'enableInfiniteScrolling':\n        case 'childGrid':\n          requireRefresh = true;\n          childGridParent = this.parentDetails ? document.querySelector(\"#\" + this.parentDetails.parentID) : null;\n          parentInstance = childGridParent ? childGridParent.ej2_instances[0] : null;\n          if (this.childGrid && parentInstance && isNullOrUndefined(parentInstance.childGrid.childGrid)) {\n            var childGridObject = Object.assign({}, parentInstance.childGrid, {\n              childGrid: newProp.childGrid\n            });\n            parentInstance.setProperties({\n              childGrid: childGridObject\n            }, true);\n            while (!isNullOrUndefined(parentInstance.parentDetails)) {\n              var currentParent = document.querySelector(\"#\" + parentInstance.parentDetails.parentID);\n              var currentParentInstance = currentParent ? currentParent.ej2_instances[0] : null;\n              if (currentParentInstance) {\n                var currentChildObject = Object.assign({}, currentParentInstance.childGrid);\n                currentChildObject.childGrid = parentInstance.childGrid;\n                currentParentInstance.setProperties({\n                  childGrid: currentChildObject\n                }, true);\n              }\n              parentInstance = currentParentInstance;\n            }\n          }\n          this.headerModule.refreshUI();\n          break;\n        case 'toolbar':\n          this.notify(events.uiUpdate, {\n            module: 'toolbar'\n          });\n          if (this.height === '100%') {\n            this.scrollModule.refresh();\n          }\n          break;\n        case 'groupSettings':\n          this.notify(events.inBoundModelChanged, {\n            module: 'group',\n            properties: newProp.groupSettings,\n            oldProperties: oldProp.groupSettings\n          });\n          break;\n        case 'aggregates':\n          if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n            requireRefresh = true;\n          }\n          this.notify(events.uiUpdate, {\n            module: 'aggregate',\n            properties: newProp\n          });\n          if (this.height === '100%') {\n            this.scrollModule.refresh();\n          }\n          break;\n        case 'frozenColumns':\n        case 'frozenRows':\n        case 'enableVirtualization':\n        case 'enableColumnVirtualization':\n        case 'currencyCode':\n        case 'locale':\n          if (this.isFrozenGrid()) {\n            this.log('frozen_rows_columns');\n          }\n          freezeRefresh = true;\n          requireGridRefresh = true;\n          this.addNewRowFocus = true;\n          break;\n        case 'query':\n          if (!this.getDataModule().isQueryInvokedFromData) {\n            requireRefresh = true;\n          }\n          this.getDataModule().isQueryInvokedFromData = false;\n          break;\n        case 'autoFit':\n          if (this.autoFit) {\n            this.preventAdjustColumns();\n          } else {\n            this.restoreAdjustColumns();\n          }\n          break;\n        default:\n          this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n      }\n    }\n    if (checkCursor) {\n      this.updateDefaultCursor();\n    }\n    if (requireGridRefresh) {\n      if (freezeRefresh || this.getFrozenColumns() || this.frozenRows || this.frozenLeftColumns.length || this.frozenRightColumns.length) {\n        this.freezeRefresh();\n      } else {\n        this.refresh();\n      }\n    } else if (requireRefresh) {\n      this.notify(events.modelChanged, args);\n      requireRefresh = false;\n      this.maintainSelection(newProp.selectedRowIndex);\n    }\n  };\n  Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n    switch (prop) {\n      case 'enableRtl':\n        this.updateRTL();\n        if (this.allowPaging) {\n          this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n        }\n        if (this.height !== 'auto') {\n          this.scrollModule.removePadding(!newProp.enableRtl);\n          this.scrollModule.setPadding();\n        }\n        if (this.toolbar && this.toolbarModule) {\n          this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n        }\n        if (this.contextMenuItems && this.contextMenuModule) {\n          this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n        }\n        if (this.showColumnMenu && this.columnMenuModule && !this.enableAdaptiveUI) {\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n        }\n        if (this.filterSettings.type === 'FilterBar' && this.filterSettings.showFilterBarOperator) {\n          this.refreshHeader();\n        }\n        this.notify(events.rtlUpdated, {});\n        break;\n      case 'enableAltRow':\n        this.renderModule.refresh();\n        break;\n      case 'allowResizing':\n        if (this.resizeModule) {\n          this.resizeModule.render();\n        }\n        this.headerModule.refreshUI();\n        this.updateResizeLines();\n        break;\n      case 'rowHeight':\n        if (this.rowHeight) {\n          addClass([this.element], 'e-grid-min-height');\n        } else {\n          removeClass([this.element], 'e-grid-min-height');\n        }\n        this.renderModule.refresh();\n        this.headerModule.refreshUI();\n        break;\n      case 'gridLines':\n        this.updateGridLines();\n        break;\n      case 'showColumnMenu':\n        this.headerModule.refreshUI();\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: true\n        });\n        break;\n      case 'columnMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: this.columnMenuItems\n        });\n        break;\n      case 'contextMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'contextMenu',\n          enable: this.contextMenuItems\n        });\n        break;\n      case 'showColumnChooser':\n        if (this.toolbarModule) {\n          this.toolbarModule.refreshToolbarItems();\n        }\n        this.notify(events.uiUpdate, {\n          module: 'columnChooser',\n          enable: this.showColumnChooser\n        });\n        break;\n      case 'filterSettings':\n        this.updateStackedFilter();\n        this.notify(events.inBoundModelChanged, {\n          module: 'filter',\n          properties: newProp.filterSettings\n        });\n        break;\n      case 'searchSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'search',\n          properties: newProp.searchSettings\n        });\n        break;\n      case 'sortSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'sort'\n        });\n        break;\n      case 'selectionSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'selection',\n          properties: newProp.selectionSettings\n        });\n        break;\n      case 'editSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'edit',\n          properties: newProp.editSettings\n        });\n        break;\n      case 'allowTextWrap':\n      case 'textWrapSettings':\n        if (this.allowTextWrap) {\n          this.applyTextWrap();\n        } else {\n          this.removeTextWrap();\n        }\n        this.notify(events.freezeRender, {\n          case: 'textwrap',\n          isModeChg: prop === 'textWrapSettings'\n        });\n        this.refreshHeader();\n        if (this.height === '100%') {\n          this.scrollModule.refresh();\n        }\n        break;\n      case 'dataSource':\n        // eslint-disable-next-line no-case-declarations\n        var requestPendingState = this.getDataModule().getState();\n        if (this.allowPaging && this.pageSettings.pageSizes && !this.getDataModule().isRemote() && !(requestPendingState && requestPendingState.isPending)) {\n          if (this.pagerModule.pagerObj.isAllPage) {\n            var count = this.dataSource instanceof DataManager ? this.dataSource.dataSource.json.length : 'result' in this.dataSource ? this.dataSource.count : this.dataSource.length;\n            var isAllPage = Array.isArray(this.pageSettings.pageSizes) && this.pageSettings.pageSizes.indexOf('All') > -1 ? true : this.pageSettings.pageSizes;\n            if (!isAllPage && this.pageSettings.pageSize !== count) {\n              this.pagerModule.pagerObj.isAllPage = false;\n            } else {\n              this.setProperties({\n                pageSettings: {\n                  pageSize: count\n                }\n              }, true);\n              this.pagerModule.pagerObj.setProperties({\n                pageSize: count\n              }, true);\n            }\n          }\n        }\n        if (this.allowSelection && this.isPersistSelection && !(requestPendingState && requestPendingState.isPending)) {\n          this.clearSelection();\n        }\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.result) {\n          this.isVirtualAdaptive = false;\n        }\n        if (Object.getPrototypeOf(newProp).deepWatch) {\n          var pKeyField = this.getPrimaryKeyFieldNames()[0];\n          for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n            this.setRowData(getValue(pKeyField, this.dataSource[props[parseInt(i.toString(), 10)]]), this.dataSource[props[parseInt(i.toString(), 10)]]);\n          }\n        } else if (requestPendingState.isPending) {\n          var gResult = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n          var names = requestPendingState.group || [];\n          if (names.length && !this.groupSettings.enableLazyLoading && !(gResult.length && gResult[0].field)) {\n            for (var i = 0; i < names.length; i++) {\n              gResult = DataUtil.group(gResult, names[parseInt(i.toString(), 10)], requestPendingState.aggregates || []);\n            }\n          }\n          this.dataSource = {\n            result: gResult,\n            count: this.dataSource.count,\n            aggregates: this.dataSource.aggregates\n          };\n          this.getDataModule().setState({});\n          requestPendingState.resolver(this.dataSource);\n        } else {\n          if (!isNullOrUndefined(this.dataSource) && this.dataSource.result && this.dataSource.count && this.groupSettings.columns.length) {\n            var gResult = this.dataSource.result;\n            var names = this.groupSettings.columns;\n            if (names.length && !(gResult.length && gResult[0].field)) {\n              for (var i = 0; i < names.length; i++) {\n                gResult = DataUtil.group(gResult, names[parseInt(i.toString(), 10)]);\n              }\n            }\n            this.dataSource = {\n              result: gResult,\n              count: this.dataSource.count\n            };\n          }\n          this.getDataModule().setState({\n            isDataChanged: false\n          });\n          this.notify(events.dataSourceModified, {});\n          if (!requireGridRefresh) {\n            this.renderModule.refresh();\n            if (this.isCheckBoxSelection) {\n              this.notify(events.beforeRefreshOnDataChange, {});\n            }\n          }\n        }\n        this.scrollRefresh();\n        break;\n      case 'enableHover':\n        // eslint-disable-next-line no-case-declarations\n        var action = newProp.enableHover ? addClass : removeClass;\n        action([this.element], 'e-gridhover');\n        break;\n      case 'selectedRowIndex':\n        if (!this.isSelectedRowIndexUpdating) {\n          this.selectRow(newProp.selectedRowIndex);\n        }\n        this.isSelectedRowIndexUpdating = false;\n        break;\n      case 'resizeSettings':\n        this.widthService.setWidthToTable();\n        break;\n      case 'enableAdaptiveUI':\n        this.notify(events.setFullScreenDialog, {});\n        break;\n      case 'rowRenderingMode':\n        this.enableVerticalRendering();\n        this.notify(events.rowModeChange, {});\n        this.refresh();\n        break;\n      case 'enableStickyHeader':\n        this.scrollModule.addStickyListener(newProp.enableStickyHeader);\n        break;\n      case 'allowPdfExport':\n        if (this.toolbarModule) {\n          this.toolbarModule.refreshToolbarItems();\n        }\n        break;\n      case 'allowExcelExport':\n        if (this.toolbarModule) {\n          this.toolbarModule.refreshToolbarItems();\n        }\n        break;\n    }\n  };\n  Grid.prototype.maintainSelection = function (index) {\n    var _this_1 = this;\n    if (index !== -1) {\n      var fn_1 = function () {\n        _this_1.selectRow(index);\n        _this_1.off(events.contentReady, fn_1);\n      };\n      this.on(events.contentReady, fn_1, this);\n    }\n  };\n  /**\n   * @param {Object} prop - Defines the property\n   * @param {boolean} muteOnChange - Defines the mute on change\n   * @returns {void}\n   * @private\n   */\n  Grid.prototype.setProperties = function (prop, muteOnChange) {\n    _super.prototype.setProperties.call(this, prop, muteOnChange);\n    var filterSettings = 'filterSettings';\n    if (prop[\"\" + filterSettings] && this.filterModule && muteOnChange) {\n      this.filterModule.refreshFilter();\n    }\n  };\n  /**\n   * @hidden\n   * @returns {number} - Returns the tables count\n   */\n  Grid.prototype.getTablesCount = function () {\n    return this.tablesCount;\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.updateDefaultCursor = function () {\n    var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n    var stdHdrCell = [].slice.call(this.getHeaderContent().getElementsByClassName('e-stackedheadercell'));\n    var cols = this.getColumns();\n    for (var i = 0; i < headerCells.length; i++) {\n      var cell = headerCells[parseInt(i.toString(), 10)];\n      if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n        if (!cols[parseInt(i.toString(), 10)].allowReordering || !cols[parseInt(i.toString(), 10)].allowSorting || !cols[parseInt(i.toString(), 10)].allowGrouping) {\n          cell.classList.add('e-defaultcursor');\n        } else {\n          cell.classList.add('e-mousepointer');\n        }\n      }\n    }\n    for (var count = 0; count < stdHdrCell.length; count++) {\n      if (this.allowReordering) {\n        stdHdrCell[parseInt(count.toString(), 10)].classList.add('e-mousepointer');\n      }\n    }\n  };\n  Grid.prototype.updateColumnModel = function (columns, isRecursion) {\n    for (var i = 0, len = !isNullOrUndefined(columns) ? columns.length : 0; i < len; i++) {\n      if (columns[parseInt(i.toString(), 10)].columns) {\n        this.updateColumnModel(columns[parseInt(i.toString(), 10)].columns, true);\n      } else {\n        this.columnModel.push(columns[parseInt(i.toString(), 10)]);\n      }\n    }\n    if (isNullOrUndefined(isRecursion) || !isRecursion) {\n      this.updateLockableColumns();\n    }\n  };\n  Grid.prototype.getFrozenLeftCount = function () {\n    return this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n  };\n  Grid.prototype.isFrozenGrid = function () {\n    return this.getFrozenColumns() !== 0 || this.frozenLeftColumns.length !== 0 || this.frozenRightColumns.length !== 0 || this.fixedColumns.length !== 0;\n  };\n  Grid.prototype.getFrozenMode = function () {\n    return this.frozenName;\n  };\n  Grid.prototype.updateLockableColumns = function () {\n    var cols = this.columnModel;\n    var frozenCount = 0;\n    var movableCount = 0;\n    var frozenColumns = this.getFrozenColumns();\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[parseInt(i.toString(), 10)].lockColumn) {\n        if (i < frozenColumns) {\n          cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n          frozenCount++;\n        } else {\n          cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n          movableCount++;\n        }\n      }\n    }\n  };\n  Grid.prototype.checkLockColumns = function (cols) {\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[parseInt(i.toString(), 10)].columns) {\n        this.checkLockColumns(cols[parseInt(i.toString(), 10)].columns);\n      } else if (cols[parseInt(i.toString(), 10)].lockColumn) {\n        this.lockcolPositionCount++;\n      }\n    }\n  };\n  /**\n   * @param {string} position - specifies position\n   * @returns {number} returns the width\n   * @hidden\n   */\n  Grid.prototype.leftrightColumnWidth = function (position) {\n    var cols = position === 'left' ? this.getFrozenLeftColumns() : position === 'right' ? this.getFrozenRightColumns() : [];\n    var width = 0;\n    cols.filter(function (col) {\n      if (col.visible) {\n        width += parseInt(col.width.toString(), 10);\n      }\n    });\n    return width;\n  };\n  /**\n   * Gets the columns from the Grid.\n   *\n   * @param {boolean} isRefresh - Defines the boolean whether to refresh\n   * @returns {Column[]} - returns the column\n   */\n  Grid.prototype.getColumns = function (isRefresh) {\n    var _this_1 = this;\n    var inview = this.inViewIndexes.map(function (v) {\n      return v - _this_1.groupSettings.columns.length;\n    }).filter(function (v) {\n      return v > -1;\n    });\n    var vLen = inview.length;\n    if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n      this.columnModel = [];\n      this.updateColumnModel(this.columns);\n    }\n    var columns = vLen === 0 ? this.columnModel : this.getVisibleColumns().slice(inview[0], inview[vLen - 1] + 1);\n    var left = [];\n    var right = [];\n    var movable = [];\n    var isLeftRightFrozen = this.enableColumnVirtualization && this.isPreparedFrozenColumns && vLen === 0;\n    if (isLeftRightFrozen) {\n      this.frozenRightColumns = [];\n      this.frozenLeftColumns = [];\n    }\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n        left.push(columns[parseInt(i.toString(), 10)]);\n        if (isLeftRightFrozen) {\n          this.frozenLeftColumns.push(columns[parseInt(i.toString(), 10)]);\n        }\n      } else if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n        right.push(columns[parseInt(i.toString(), 10)]);\n        if (isLeftRightFrozen) {\n          this.frozenRightColumns.push(columns[parseInt(i.toString(), 10)]);\n        }\n      } else {\n        movable.push(columns[parseInt(i.toString(), 10)]);\n      }\n    }\n    if (this.enableColumnVirtualization && this.isFrozenGrid()) {\n      if (this.frozenLeftColumns.length) {\n        left = this.frozenLeftColumns;\n      }\n      if (this.frozenRightColumns.length) {\n        right = this.frozenRightColumns;\n      }\n    }\n    return left.concat(movable).concat(right);\n  };\n  /**\n   * @private\n   * @param {string} stackedHeader - Defines the stacked header\n   * @param {Column[]} col - Defines the column\n   * @returns {Column} Returns the Column\n   */\n  Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n    for (var i = 0; i < col.length; i++) {\n      var individualColumn = col[parseInt(i.toString(), 10)];\n      if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n        this.stackedColumn = individualColumn;\n        break;\n      } else if (individualColumn.columns) {\n        this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n      }\n    }\n    return this.stackedColumn;\n  };\n  /**\n   * @private\n   * @returns {number[]} Returns the column indexes\n   */\n  Grid.prototype.getColumnIndexesInView = function () {\n    return this.inViewIndexes;\n  };\n  /**\n   * @private\n   * @returns {Query} - returns the query\n   */\n  Grid.prototype.getQuery = function () {\n    return this.query;\n  };\n  /**\n   * @private\n   * @returns {object} - returns the locale constants\n   */\n  Grid.prototype.getLocaleConstants = function () {\n    return this.defaultLocale;\n  };\n  /**\n   * @param {number[]} indexes - specifies the indexes\n   * @returns {void}\n   * @private\n   */\n  Grid.prototype.setColumnIndexesInView = function (indexes) {\n    this.inViewIndexes = indexes;\n  };\n  /**\n   * Gets the visible columns from the Grid.\n   *\n   * @returns {Column[]} returns the column\n   */\n  Grid.prototype.getVisibleColumns = function () {\n    return this.getCurrentVisibleColumns();\n  };\n  /**\n   * Gets the header div of the Grid.\n   *\n   * @returns {Element} - Returns the element\n   */\n  Grid.prototype.getHeaderContent = function () {\n    return this.headerModule.getPanel();\n  };\n  /**\n   * Sets the header div of the Grid to replace the old header.\n   *\n   * @param  {Element} element - Specifies the Grid header.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.setGridHeaderContent = function (element) {\n    this.headerModule.setPanel(element);\n  };\n  /**\n   * Gets the content table of the Grid.\n   *\n   * @returns {Element} - Returns the element\n   */\n  Grid.prototype.getContentTable = function () {\n    return this.contentModule.getTable();\n  };\n  /**\n   * Sets the content table of the Grid to replace the old content table.\n   *\n   * @param  {Element} element - Specifies the Grid content table.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.setGridContentTable = function (element) {\n    this.contentModule.setTable(element);\n  };\n  /**\n   * Gets the content div of the Grid.\n   *\n   * @returns {Element} Returns the element\n   */\n  Grid.prototype.getContent = function () {\n    return this.contentModule.getPanel();\n  };\n  /**\n   * Sets the content div of the Grid to replace the old Grid content.\n   *\n   * @param  {Element} element - Specifies the Grid content.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.setGridContent = function (element) {\n    this.contentModule.setPanel(element);\n  };\n  /**\n   * Gets the header table element of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getHeaderTable = function () {\n    return this.headerModule.getTable();\n  };\n  /**\n   * Sets the header table of the Grid to replace the old one.\n   *\n   * @param  {Element} element - Specifies the Grid header table.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.setGridHeaderTable = function (element) {\n    this.headerModule.setTable(element);\n  };\n  /**\n   * Gets the footer div of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getFooterContent = function () {\n    this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n    return this.footerElement;\n  };\n  /**\n   * Gets the footer table element of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getFooterContentTable = function () {\n    this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n    return this.footerElement.firstChild.firstChild;\n  };\n  /**\n   * Gets the pager of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getPager = function () {\n    return this.gridPager; //get element from pager\n  };\n  /**\n   * Sets the pager of the Grid to replace the old pager.\n   *\n   * @param  {Element} element - Specifies the Grid pager.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.setGridPager = function (element) {\n    this.gridPager = element;\n  };\n  /**\n   * Gets a row by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   *\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getRowByIndex = function (index) {\n    if (this.enableVirtualization && this.groupSettings.enableLazyLoading) {\n      return this.lazyLoadRender.getRowByIndex(index);\n    } else {\n      return this.contentModule.getRowByIndex(index);\n    }\n  };\n  /**\n   * Gets a movable tables row by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   *\n   * @returns {Element} returns the element\n    */\n  Grid.prototype.getMovableRowByIndex = function (index) {\n    return this.contentModule.getRowByIndex(index);\n  };\n  /**\n   * Gets a frozen tables row by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n    */\n  Grid.prototype.getFrozenRowByIndex = function (index) {\n    return this.contentModule.getRowByIndex(index);\n  };\n  /**\n   * Gets all the data rows of the Grid.\n   *\n   * @returns {Element[]} returns the element\n   */\n  Grid.prototype.getRows = function () {\n    return this.contentModule.getRowElements();\n  };\n  /**\n   * Gets a frozen right tables row element by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n    */\n  Grid.prototype.getFrozenRightRowByIndex = function (index) {\n    return this.contentModule.getRowByIndex(index);\n  };\n  /**\n   * Get a row information based on cell\n   *\n   * @param {Element | EventTarget} target - specifies the element\n   *\n   * @returns {RowInfo} returns the row info\n   */\n  Grid.prototype.getRowInfo = function (target) {\n    var ele = target;\n    var args = {\n      target: target\n    };\n    if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse') && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand')))) {\n      var cell = closest(ele, '.' + literals.rowCell);\n      if (!cell) {\n        var row_1 = closest(ele, '.' + literals.row);\n        if (!isNullOrUndefined(row_1) && !row_1.classList.contains('e-addedrow')) {\n          var rowObj = this.getRowObjectFromUID(row_1.getAttribute('data-uid'));\n          var rowIndex = parseInt(row_1.getAttribute(literals.ariaRowIndex), 10) - 1;\n          args = {\n            row: row_1,\n            rowData: rowObj.data,\n            rowIndex: rowIndex\n          };\n        }\n        return args;\n      }\n      var cellIndex = parseInt(cell.getAttribute(literals.ariaColIndex), 10) - 1;\n      var row_2 = closest(cell, '.' + literals.row);\n      if (!isNullOrUndefined(cell) && !isNaN(cellIndex) && !isNullOrUndefined(row_2)) {\n        var rowIndex = parseInt(row_2.getAttribute(literals.ariaRowIndex), 10) - 1;\n        var rows = this.contentModule.getRows();\n        var index = cellIndex + this.getIndentCount();\n        var rowsObject = rows.filter(function (r) {\n          return r.uid === row_2.getAttribute('data-uid');\n        });\n        var rowData = {};\n        var column = void 0;\n        if (Object.keys(rowsObject).length) {\n          rowData = rowsObject[0].data;\n          column = rowsObject[0].cells[parseInt(index.toString(), 10)].column;\n        }\n        args = {\n          cell: cell,\n          cellIndex: cellIndex,\n          row: row_2,\n          rowIndex: rowIndex,\n          rowData: rowData,\n          column: column,\n          target: target\n        };\n      }\n    }\n    return args;\n  };\n  /**\n   * Gets the Grid's movable content rows from frozen grid.\n   *\n   * @returns {Element[]} returns the element\n    */\n  Grid.prototype.getMovableRows = function () {\n    return this.contentModule.getRowElements();\n  };\n  /**\n   * Gets the Grid's frozen right content rows from frozen grid.\n   *\n   * @returns {Element[]} returns the element\n    */\n  Grid.prototype.getFrozenRightRows = function () {\n    return this.contentModule.getRowElements();\n  };\n  /**\n   * Gets all the Grid's data rows.\n   *\n   * @returns {Element[]} returns the element\n   */\n  Grid.prototype.getDataRows = function () {\n    return this.getAllDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd - specifies includeAdd\n   * @returns {Element[]} returns the element\n   * @hidden\n   */\n  Grid.prototype.getAllDataRows = function (includeAdd) {\n    if (isNullOrUndefined(this.getContentTable().querySelector(literals.tbody))) {\n      return [];\n    }\n    var tbody = this.getContentTable().querySelector(literals.tbody);\n    var rows = [].slice.call(tbody.children);\n    if (this.editSettings.showAddNewRow) {\n      if (rows[0].classList.contains('e-addedrow')) {\n        rows.shift();\n      } else if (rows[rows.length - 1].classList.contains('e-addedrow')) {\n        rows.pop();\n      }\n    }\n    if (this.frozenRows) {\n      var hdrTbody = this.getHeaderTable().querySelector(literals.tbody);\n      var freezeRows = [].slice.call(hdrTbody.children);\n      rows = this.addMovableRows(freezeRows, rows);\n      if (this.editSettings.showAddNewRow && freezeRows[0].classList.contains('e-addedrow')) {\n        freezeRows.shift();\n      }\n    }\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * @param {HTMLElement[]} fRows - Defines the frozen Rows\n   * @param {HTMLElement[]} mrows - Defines the movable Rows\n   * @returns {HTMLElement[]} Returns the element\n   * @hidden\n   */\n  Grid.prototype.addMovableRows = function (fRows, mrows) {\n    for (var i = 0, len = mrows.length; i < len; i++) {\n      fRows.push(mrows[parseInt(i.toString(), 10)]);\n    }\n    return fRows;\n  };\n  Grid.prototype.generateDataRows = function (rows, includAdd) {\n    var dRows = [];\n    for (var i = 0, len = rows.length; i < len; i++) {\n      if (rows[parseInt(i.toString(), 10)].classList.contains(literals.row) && (!rows[parseInt(i.toString(), 10)].classList.contains('e-hiddenrow') || includAdd)) {\n        if (this.isCollapseStateEnabled()) {\n          dRows[parseInt(rows[parseInt(i.toString(), 10)].getAttribute('aria-rowindex'), 10) - 1] = rows[parseInt(i.toString(), 10)];\n        } else {\n          dRows.push(rows[parseInt(i.toString(), 10)]);\n        }\n      }\n    }\n    return dRows;\n  };\n  /**\n   * Gets all the Grid's movable table data rows.\n   *\n   * @returns {Element[]} Returns the element\n    */\n  Grid.prototype.getMovableDataRows = function () {\n    return this.getAllMovableDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd Defines the include add in boolean\n   * @returns {Element[]} Returns the element\n    * @hidden\n   */\n  Grid.prototype.getAllMovableDataRows = function (includeAdd) {\n    return this.getAllDataRows(includeAdd);\n  };\n  /**\n   * Gets all the Grid's frozen table data rows.\n   *\n   * @returns {Element[]} returns the element\n    */\n  Grid.prototype.getFrozenDataRows = function () {\n    return this.getAllFrozenDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd Defines the include add in boolean\n   * @returns {Element[]} Returns the element\n    * @hidden\n   */\n  Grid.prototype.getAllFrozenDataRows = function (includeAdd) {\n    return this.getAllDataRows(includeAdd);\n  };\n  /**\n   * Gets all the Grid's frozen right table data rows.\n   *\n   * @returns {Element[]} Returns the Element\n    */\n  Grid.prototype.getFrozenRightDataRows = function () {\n    return this.getAllFrozenRightDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd Defines the include add in boolean\n   * @returns {Element[]} Returns the element\n    * @hidden\n   */\n  Grid.prototype.getAllFrozenRightDataRows = function (includeAdd) {\n    return this.getAllDataRows(includeAdd);\n  };\n  /**\n   * Updates particular cell value based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   *\n   * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   * @param {string } field - Specifies the field name which you want to update.\n   * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.setCellValue = function (key, field, value) {\n    var cells = 'cells';\n    var rowData = 'data';\n    var rowIdx = 'index';\n    var rowuID = 'uid';\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    var cell = new CellRenderer(this, this.serviceLocator);\n    var fieldIdx = this.getColumnIndexByField(field);\n    var col = this.getColumnByField(field);\n    var rowObjects = this.contentModule.getRows();\n    var selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n    var tr = selectedRow ? this.element.querySelector('[data-uid=' + selectedRow[\"\" + rowuID] + ']') : null;\n    if (!isNullOrUndefined(tr)) {\n      if (typeof value === 'string') {\n        value = this.sanitize(value);\n      }\n      setValue(field, value, selectedRow[\"\" + rowData]);\n      var td = this.enableVirtualization ? tr.children[parseInt(fieldIdx.toString(), 10)] : this.getCellFromIndex(selectedRow[\"\" + rowIdx], fieldIdx);\n      if (!isNullOrUndefined(td)) {\n        var Idx = 0;\n        if (this.groupSettings.columns.length) {\n          fieldIdx = fieldIdx + this.groupSettings.columns.length;\n        }\n        if (this.childGrid || this.detailTemplate) {\n          fieldIdx++;\n        }\n        if (this.isRowDragable()) {\n          fieldIdx++;\n        }\n        var sRow = selectedRow[\"\" + cells][fieldIdx - Idx];\n        cell.refreshTD(td, sRow, selectedRow[\"\" + rowData], {\n          index: selectedRow[\"\" + rowIdx]\n        });\n        if (this.isReact) {\n          td = this.enableVirtualization ? tr.children[parseInt(fieldIdx.toString(), 10)] : this.getCellFromIndex(selectedRow[\"\" + rowIdx], fieldIdx);\n        }\n        if (this.aggregates.length > 0) {\n          this.notify(events.refreshFooterRenderer, {});\n          if (this.groupSettings.columns.length > 0) {\n            this.notify(events.groupAggregates, {});\n          }\n        }\n        /* tslint:disable:no-string-literal */\n        if (!isNullOrUndefined(selectedRow) && !isNullOrUndefined(selectedRow['changes'])) {\n          selectedRow['changes'][\"\" + field] = value;\n        }\n        /* tslint:disable:no-string-literal */\n        this.trigger(events.queryCellInfo, {\n          cell: td,\n          column: col,\n          data: selectedRow[\"\" + rowData]\n        });\n        if (this.isReact && td.getAttribute('tabindex') === '0' && td.classList.contains('e-focused')) {\n          td.focus();\n        }\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * @param {string} columnUid - Defines column uid\n   * @param {boolean} renderTemplates - Defines renderTemplates need to invoke\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.refreshReactColumnTemplateByUid = function (columnUid, renderTemplates) {\n    var _this_1 = this;\n    if (this.isReact) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.clearTemplate(['columnTemplate'], undefined, function () {\n        var isChildGrid = _this_1.childGrid && _this_1.element.querySelectorAll('.e-childgrid').length ? true : false;\n        var rows = isChildGrid ? _this_1.getContentTable().querySelectorAll('.e-row') : _this_1.getDataRows();\n        _this_1.refreshReactTemplateTD(rows, isChildGrid);\n        if (renderTemplates) {\n          _this_1.renderTemplates();\n        }\n      });\n    }\n  };\n  /**\n   * @param {Element[] | NodeListOf<Element>} rows - Defines the rows\n   * @param {boolean} isChildGrid - Defines whether it is a Hierarchy Grid.\n   * @param {boolean} isFrozen - Defines whether it is a Frozen Grid\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.refreshReactTemplateTD = function (rows, isChildGrid, isFrozen) {\n    var cells = 'cells';\n    var rowIdx = 'index';\n    var indent = this.getIndentCount();\n    var childIndent = 0;\n    var isChildRow = false;\n    for (var j = 0; j < rows.length; j++) {\n      var rowsObj = this.getRowObjectFromUID(rows[parseInt(j.toString(), 10)].getAttribute('data-uid'));\n      if (isChildGrid && !rowsObj && parentsUntil(rows[parseInt(j.toString(), 10)], 'e-childgrid')) {\n        var gridObj = parentsUntil(rows[parseInt(j.toString(), 10)], 'e-childgrid').ej2_instances[0];\n        rowsObj = gridObj.getRowObjectFromUID(rows[parseInt(j.toString(), 10)].getAttribute('data-uid'));\n        childIndent = gridObj.getIndentCount();\n        isChildRow = true;\n      }\n      if (rowsObj && rowsObj.isDataRow && !isNullOrUndefined(rowsObj.index) && !rows[parseInt(j.toString(), 10)].classList.contains('e-editedrow')) {\n        for (var i = 0; i < rowsObj[\"\" + cells].length; i++) {\n          var cell = rowsObj[\"\" + cells][parseInt(i.toString(), 10)];\n          if (cell.isTemplate) {\n            var cellRenderer = new CellRenderer(this, this.serviceLocator);\n            var td = isChildGrid ? rows[parseInt(j.toString(), 10)].children[cell.index + (isChildRow ? childIndent : indent)] : this.getCellFromIndex(j, isFrozen ? cell.index : i - indent);\n            cellRenderer.refreshTD(td, cell, rowsObj.data, {\n              index: rowsObj[\"\" + rowIdx]\n            });\n          }\n        }\n      }\n      isChildRow = false;\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.refreshGroupCaptionFooterTemplate = function () {\n    var isChildGrid = this.childGrid && this.element.querySelectorAll('.e-childgrid').length ? true : false;\n    var rows = this.getContentTable().querySelectorAll('.e-groupcaptionrow, .e-groupfooterrow');\n    for (var i = 0; i < rows.length; i++) {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      var gridObj = this;\n      var rowsObj = this.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-uid'));\n      if (isChildGrid && !rowsObj && parentsUntil(rows[parseInt(i.toString(), 10)], 'e-childgrid')) {\n        gridObj = parentsUntil(rows[parseInt(i.toString(), 10)], 'e-childgrid').ej2_instances[0];\n        rowsObj = gridObj.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-uid'));\n      }\n      if (rowsObj) {\n        var cells = rowsObj.cells.filter(function (cell) {\n          return cell.isDataCell;\n        });\n        var args = {\n          cells: cells,\n          data: rowsObj.data,\n          dataUid: rowsObj.uid\n        };\n        gridObj.notify(events.refreshAggregateCell, args);\n      }\n    }\n  };\n  /**\n   * @param {string} columnUid - Defines column uid\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.refreshReactHeaderTemplateByUid = function (columnUid) {\n    if (this.isReact) {\n      var cells = 'cells';\n      var rowsObj = this.headerModule.rows;\n      var cellIndex = this.getNormalizedColumnIndex(columnUid);\n      var _loop_1 = function (j) {\n        var cell = rowsObj[parseInt(j.toString(), 10)][\"\" + cells][parseInt(cellIndex.toString(), 10)];\n        if (cell && cell.column.uid === columnUid) {\n          var headerCellRenderer = new HeaderCellRenderer(this_1, this_1.serviceLocator);\n          var td = parentsUntil(this_1.element.querySelectorAll('[e-mappinguid=' + columnUid + ']')[0], 'e-templatecell');\n          headerCellRenderer.refresh(cell, td);\n          var cols = this_1.sortSettings.columns;\n          var columnIndex = cols.findIndex(function (col) {\n            return col.field === cell.column.field;\n          });\n          if (columnIndex !== -1) {\n            var header = this_1.getColumnHeaderByField(cell.column.field);\n            this_1.ariaService.setSort(header, cols[parseInt(columnIndex.toString(), 10)].direction.toLowerCase());\n            if (cols.length > 1) {\n              header.querySelector('.e-headercelldiv').insertBefore(this_1.createElement('span', {\n                className: 'e-sortnumber',\n                innerHTML: (columnIndex + 1).toString()\n              }), header.querySelector('.e-headertext'));\n            }\n            var filterElement = header.querySelector('.e-sortfilterdiv');\n            if (cols[parseInt(columnIndex.toString(), 10)].direction === 'Ascending') {\n              classList(filterElement, ['e-ascending', 'e-icon-ascending'], []);\n            } else {\n              classList(filterElement, ['e-descending', 'e-icon-descending'], []);\n            }\n          }\n        }\n      };\n      var this_1 = this;\n      for (var j = 0; j < rowsObj.length; j++) {\n        _loop_1(j);\n      }\n    }\n  };\n  /**\n   * Updates and refresh the particular row values based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   *\n   * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   * @param {Object} rowData - To update new data for the particular row.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.setRowData = function (key, rowData) {\n    var rowuID = 'uid';\n    var rowObjects = this.contentModule.getRows();\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n      rowObjects = rowObjects.filter(function (row) {\n        return row.isDataRow;\n      });\n    }\n    var selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n    var selectRowEle = selectedRow ? [].slice.call(this.element.querySelectorAll('[data-uid=' + selectedRow[\"\" + rowuID] + ']')) : undefined;\n    if (!isNullOrUndefined(selectedRow) && selectRowEle.length) {\n      selectedRow.changes = rowData;\n      if (this.frozenRows) {\n        var fRowTr = this.getRowsObject()[selectedRow.index];\n        this.setFrozenRowData(fRowTr, rowData);\n      } else {\n        this.setFrozenRowData(selectedRow, rowData);\n      }\n      if (this.aggregates.length > 0) {\n        this.notify(events.refreshFooterRenderer, {});\n        if (this.groupSettings.columns.length > 0) {\n          this.notify(events.groupAggregates, {});\n        }\n      }\n    } else {\n      return;\n    }\n  };\n  Grid.prototype.setFrozenRowData = function (fTr, rowData) {\n    var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n    fTr.changes = rowData;\n    refreshForeignData(fTr, this.getForeignKeyColumns(), fTr.changes);\n    rowRenderer.refresh(fTr, this.getColumns(), true);\n  };\n  /**\n   * Gets a cell by row and column index.\n   *\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   *\n   * @returns {Element} Returns the Element\n   */\n  Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n    var col = this.getColumnByIndex(columnIndex);\n    return getCellByColAndRowIndex(this, col, rowIndex, columnIndex);\n  };\n  /**\n   * Gets a movable table cell by row and column index.\n   *\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   *\n   * @returns {Element} Returns the Element\n    */\n  Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n    return this.getCellFromIndex(rowIndex, columnIndex);\n  };\n  /**\n   * Gets a frozen right table cell by row and column index.\n   *\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @returns {Element} Returns the Element\n    */\n  Grid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n    return this.getCellFromIndex(rowIndex, columnIndex);\n  };\n  /**\n   * Gets a column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   *\n   * @returns {Element} Returns the Element\n   */\n  Grid.prototype.getColumnHeaderByIndex = function (index) {\n    return this.getHeaderTable().getElementsByClassName('e-headercell')[parseInt(index.toString(), 10)];\n  };\n  /**\n   * Gets a movable column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n    */\n  Grid.prototype.getMovableColumnHeaderByIndex = function (index) {\n    return this.getColumnHeaderByIndex(index);\n  };\n  /**\n   * Gets a frozen right column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n    */\n  Grid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n    return this.getColumnHeaderByIndex(index);\n  };\n  /**\n   * Gets a frozen left column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n    */\n  Grid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n    return this.getColumnHeaderByIndex(index);\n  };\n  /**\n   * @param {string} uid - Defines the uid\n   * @returns {Row<Column>} Returns the row object\n   * @hidden\n   */\n  Grid.prototype.getRowObjectFromUID = function (uid) {\n    var rows = this.contentModule.getRows();\n    var row = this.rowObject(rows, uid);\n    if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n      row = this.rowObject(this.vRows, uid);\n      return row;\n    }\n    return row;\n  };\n  Grid.prototype.rowObject = function (rows, uid) {\n    if (rows) {\n      for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n        var row = rows_1[_i];\n        if (row.uid === uid) {\n          return row;\n        }\n      }\n    }\n    return null;\n  };\n  /**\n   * Get an array of row objects.\n   *\n   * @returns {Row<Column>[]} Returns the Row object\n   */\n  Grid.prototype.getRowsObject = function () {\n    return this.contentModule.getRows();\n  };\n  /**\n   * @hidden\n   * @returns {Row<Column>[]} Returns the Row object\n    */\n  Grid.prototype.getMovableRowsObject = function () {\n    return this.contentModule.getRows();\n  };\n  /**\n   * @hidden\n   * @returns {Row<Column>[]} Returns the Row object\n    */\n  Grid.prototype.getFrozenRightRowsObject = function () {\n    return this.contentModule.getRows();\n  };\n  /**\n   * Gets a column header by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   *\n   * @returns {Element} - Returns the element\n   */\n  Grid.prototype.getColumnHeaderByField = function (field) {\n    var column = this.getColumnByField(field);\n    return column ? this.getColumnHeaderByUid(column.uid) : undefined;\n  };\n  /**\n   * Gets a column header by UID.\n   *\n   * @param {string} uid - Specifies the column uid.\n   *\n   * @returns {Element} - Returns the element\n   */\n  Grid.prototype.getColumnHeaderByUid = function (uid) {\n    var element = this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']');\n    return element ? element.parentElement : undefined;\n  };\n  /**\n   * @hidden\n   * @param {number} index - Defines the index\n   * @returns {Column} Returns the column\n   */\n  Grid.prototype.getColumnByIndex = function (index) {\n    var column;\n    this.getColumns().some(function (col, i) {\n      column = col;\n      return i === index;\n    });\n    return column;\n  };\n  /**\n   * Gets a Column by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   *\n   * @returns {Column} Returns the column\n   */\n  Grid.prototype.getColumnByField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item) {\n      if (item.field === field) {\n        return item;\n      }\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets a column index by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   *\n   * @returns {number} Returns the index by field\n   */\n  Grid.prototype.getColumnIndexByField = function (field) {\n    var cols = this.getColumns();\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[parseInt(i.toString(), 10)].field === field) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  /**\n   * Gets a column by UID.\n   *\n   * @param  {string} uid - Specifies the column UID.\n   * @param  {boolean} isColumns - Defines the all columns.\n   *\n   * @returns {Column} Returns the column\n   */\n  Grid.prototype.getColumnByUid = function (uid, isColumns) {\n    var cols = isColumns ? this.columns : this.getColumns();\n    return iterateArrayOrObject(cols.concat(this.getStackedColumns(this.columns)), function (item) {\n      if (item.uid === uid) {\n        return item;\n      }\n      return undefined;\n    })[0];\n  };\n  /**\n   * @param {Column[]} columns - Defines the columns\n   * @param {Column[]} stackedColumn - Defines the stacked columns\n   * @returns {Column[]} Returns the columns\n   * @hidden\n   */\n  Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n    if (stackedColumn === void 0) {\n      stackedColumn = [];\n    }\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n      if (column.columns) {\n        stackedColumn.push(column);\n        this.getStackedColumns(column.columns, stackedColumn);\n      }\n    }\n    return stackedColumn;\n  };\n  /**\n   * Gets a column index by UID.\n   *\n   * @param  {string} uid - Specifies the column UID.\n   *\n   * @returns {number} Returns the column by index\n   */\n  Grid.prototype.getColumnIndexByUid = function (uid) {\n    var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n      if (item.uid === uid) {\n        return index;\n      }\n      return undefined;\n    })[0];\n    return !isNullOrUndefined(index) ? index : -1;\n  };\n  /**\n   * Gets UID by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   *\n   * @returns {string} Returns the column by field\n   */\n  Grid.prototype.getUidByColumnField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item) {\n      if (item.field === field) {\n        return item.uid;\n      }\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets column index by column uid value.\n   *\n   * @private\n   * @param  {string} uid - Specifies the column uid.\n   * @returns {number} Returns the column by field\n   */\n  Grid.prototype.getNormalizedColumnIndex = function (uid) {\n    var index = this.getColumnIndexByUid(uid);\n    return index + this.getIndentCount();\n  };\n  /**\n   * Gets indent cell count.\n   *\n   * @private\n   * @returns {number} Returns the indent count\n   */\n  Grid.prototype.getIndentCount = function () {\n    var index = 0;\n    if (this.allowGrouping) {\n      index += this.groupSettings.columns.length;\n    }\n    if (this.isDetail()) {\n      index++;\n    }\n    if (this.isRowDragable() && isNullOrUndefined(this.rowDropSettings.targetID)) {\n      index++;\n    }\n    /**\n     * TODO: index normalization based on the stacked header, grouping and detailTemplate\n     * and frozen should be handled here\n     */\n    return index;\n  };\n  /**\n   * Gets the collection of column fields.\n   *\n   * @returns {string[]} Returns the Field names\n   */\n  Grid.prototype.getColumnFieldNames = function () {\n    var columnNames = [];\n    var column;\n    for (var i = 0, len = this.getColumns().length; i < len; i++) {\n      column = this.getColumns()[parseInt(i.toString(), 10)];\n      if (column.visible) {\n        columnNames.push(column.field);\n      }\n    }\n    return columnNames;\n  };\n  /**\n   * Gets a compiled row template.\n   *\n   * @returns {Function} Returns the row TEmplate\n   * @private\n   */\n  Grid.prototype.getRowTemplate = function () {\n    return this.rowTemplateFn;\n  };\n  /**\n   * Gets a compiled empty Record template.\n   *\n   * @returns {Function} Returns the empty Record template\n   * @private\n   */\n  Grid.prototype.getEmptyRecordTemplate = function () {\n    return this.emptyRecordTemplateFn;\n  };\n  /**\n   * Gets a compiled detail row template.\n   *\n   * @private\n   * @returns {Function} Returns the Detail template\n   */\n  Grid.prototype.getDetailTemplate = function () {\n    return this.detailTemplateFn;\n  };\n  /**\n   * Gets a compiled dialog edit template.\n   *\n   * @private\n   * @returns {Function} Returns the Edit template\n   */\n  Grid.prototype.getEditTemplate = function () {\n    return this.editTemplateFn;\n  };\n  /**\n   * Gets a compiled dialog edit header template.\n   *\n   * @private\n   * @returns {Function} returns template function\n   */\n  Grid.prototype.getEditHeaderTemplate = function () {\n    return this.editHeaderTemplateFn;\n  };\n  /**\n   * Gets a compiled dialog edit footer template.\n   *\n   * @private\n   * @returns {Function} Returns the Footer template\n   */\n  Grid.prototype.getEditFooterTemplate = function () {\n    return this.editFooterTemplateFn;\n  };\n  /**\n   * Gets a compiled column chooser template.\n   *\n   * @private\n   * @returns {Function} Returns the template\n   */\n  Grid.prototype.getColumnChooserTemplate = function () {\n    return this.columnChooserTemplateFn;\n  };\n  /**\n   * Gets a compiled column chooser header template.\n   *\n   * @private\n   * @returns {Function} returns the header template\n   */\n  Grid.prototype.getColumnChooserHeaderTemplate = function () {\n    return this.columnChooserHeaderTemplateFn;\n  };\n  /**\n   * Gets a compiled column chooser footer template.\n   *\n   * @private\n   * @returns {Function} Returns the Footer template\n   */\n  Grid.prototype.getColumnChooserFooterTemplate = function () {\n    return this.columnChooserFooterTemplateFn;\n  };\n  /**\n   * Get the names of the primary key columns of the Grid.\n   *\n   * @returns {string[]} Returns the field names\n   */\n  Grid.prototype.getPrimaryKeyFieldNames = function () {\n    var keys = [];\n    for (var k = 0; k < this.columnModel.length; k++) {\n      if (this.columnModel[parseInt(k.toString(), 10)].isPrimaryKey) {\n        keys.push(this.columnModel[parseInt(k.toString(), 10)].field);\n      }\n    }\n    return keys;\n  };\n  /**\n   * Refreshes the Grid header and content.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.refresh = function () {\n    if (!this.isDestroyed) {\n      this.isManualRefresh = true;\n      this.headerModule.refreshUI();\n      this.updateStackedFilter();\n      this.renderModule.refresh();\n    }\n  };\n  /**\n   * Refreshes the Grid header.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.refreshHeader = function () {\n    this.headerModule.refreshUI();\n  };\n  /**\n   * Gets the collection of selected rows.\n   *\n   * @returns {Element[]} Returns the element\n   */\n  Grid.prototype.getSelectedRows = function () {\n    return this.selectionModule ? this.selectionModule.selectedRecords : [];\n  };\n  /**\n   * Gets the collection of selected row indexes.\n   *\n   * @returns {number[]} Returns the Selected row indexes\n   */\n  Grid.prototype.getSelectedRowIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n  };\n  /**\n   * Gets the collection of selected row and cell indexes.\n   *\n   * @returns {number[]} Returns the Selected row cell indexes\n   */\n  Grid.prototype.getSelectedRowCellIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n  };\n  /**\n   * Gets the collection of selected records.\n   *\n   * @returns {Object[]} Returns the selected records\n   * @isGenericType true\n   */\n  Grid.prototype.getSelectedRecords = function () {\n    return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n  };\n  /**\n   * Gets the collection of selected columns uid.\n   *\n   * @returns {string[]} Returns the selected column uid\n   * @isGenericType true\n   */\n  Grid.prototype.getSelectedColumnsUid = function () {\n    var _this_1 = this;\n    var uid = [];\n    if (this.selectionModule) {\n      this.selectionModule.selectedColumnsIndexes.filter(function (i) {\n        return uid.push(_this_1.getColumns()[parseInt(i.toString(), 10)].uid);\n      });\n    }\n    return uid;\n  };\n  /**\n   * Returns the data module used by the grid.\n   *\n   * Use this to access the current applied queries and data related configuration settings for the grid.\n   *\n   * @returns {Data} The data module currently used by the grid.\n   */\n  Grid.prototype.getDataModule = function () {\n    return this.renderModule.data;\n  };\n  /**\n   * Shows a column by its column name.\n   *\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} showBy - Defines the column key either as field name or header text.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.showColumns = function (keys, showBy) {\n    showBy = showBy ? showBy : 'headerText';\n    this.showHider.show(keys, showBy);\n  };\n  /**\n   * Hides a column by column name.\n   *\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} hideBy - Defines the column key either as field name or header text.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.hideColumns = function (keys, hideBy) {\n    hideBy = hideBy ? hideBy : 'headerText';\n    this.showHider.hide(keys, hideBy);\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the Frozen column\n   */\n  Grid.prototype.getFrozenColumns = function () {\n    return this.frozenColumns + this.getFrozenCount(this.columns, 0, 0);\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the Frozen Right column count\n   */\n  Grid.prototype.getFrozenRightColumnsCount = function () {\n    return this.frozenRightCount || this.rightcount;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the Frozen Left column\n   */\n  Grid.prototype.getFrozenLeftColumnsCount = function () {\n    return this.frozenLeftCount || this.leftcount;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the movable column count\n   */\n  Grid.prototype.getMovableColumnsCount = function () {\n    return this.movableCount || this.movablecount;\n  };\n  Grid.prototype.updateFrozenColumnsWidth = function () {\n    if (this.isFrozenGrid() && !this.enableColumnVirtualization) {\n      var gcol = this.getColumns();\n      var isAutoWidth = true;\n      var autoCol_1 = 0;\n      var difference_1 = 0;\n      var autoWidth_1 = 0;\n      var isFrozenAuto = gcol.some(function (data) {\n        return (data.freeze === 'Left' || data.freeze === 'Right' || data.freeze === 'Fixed' || data.isFrozen) && data.width === 'auto';\n      });\n      var _loop_2 = function (i) {\n        var col = gcol[parseInt(i.toString(), 10)];\n        if (isNullOrUndefined(col.width) && (col.freeze === 'Left' || col.freeze === 'Right' || col.freeze === 'Fixed' || col.isFrozen)) {\n          col.width = Math.max(200, col.minWidth ? parseFloat(col.minWidth.toString()) : 0);\n          if (!isNullOrUndefined(col.maxWidth) && parseFloat(col.maxWidth.toString()) < col.width) {\n            col.width = col.maxWidth;\n          }\n        }\n        if (col.width === 'auto' && isFrozenAuto) {\n          var tWidth_1 = 0;\n          if (isAutoWidth) {\n            gcol.filter(function (cols) {\n              if (cols.visible) {\n                if (cols.width === 'auto') {\n                  autoCol_1++;\n                }\n                if (cols.width !== 'auto') {\n                  var width = !isNullOrUndefined(cols.width) ? parseFloat(cols.width.toString()) : Math.max(200, cols.minWidth ? parseFloat(cols.minWidth.toString()) : 0);\n                  tWidth_1 += width;\n                }\n              }\n            });\n            var gWidth = this_2.isPercentageWidthGrid() || this_2.width === 'auto' ? this_2.element.getBoundingClientRect().width : parseFloat(this_2.width.toString());\n            difference_1 = this_2.height === 'auto' ? gWidth - tWidth_1 : gWidth - tWidth_1 - getScrollBarWidth();\n            if (difference_1 < 0) {\n              difference_1 = 0;\n            }\n            autoWidth_1 = parseFloat((difference_1 / autoCol_1).toString());\n            gcol.filter(function (col) {\n              if (col.visible) {\n                if (col.minWidth && parseFloat(col.minWidth.toString()) > autoWidth_1) {\n                  difference_1 = difference_1 - parseFloat(col.minWidth.toString());\n                  autoCol_1--;\n                }\n              }\n            });\n            isAutoWidth = false;\n          }\n          if (col.minWidth && parseFloat(col.minWidth.toString()) > autoWidth_1) {\n            col.width = parseFloat(col.minWidth.toString());\n          } else {\n            col.width = difference_1 / autoCol_1;\n          }\n        }\n      };\n      var this_2 = this;\n      for (var i = 0; i < gcol.length; i++) {\n        _loop_2(i);\n      }\n    }\n  };\n  Grid.prototype.refreshSplitFrozenColumn = function () {\n    this.splitFrozenCount(this.columns);\n    this.updateFrozenColumnsWidth();\n    this.isAutoGenerateColumns = true;\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.setFrozenCount = function () {\n    this.frozenLeftCount = this.frozenRightCount = this.movableCount = 0;\n    this.visibleFrozenLeft = this.visibleFrozenRight = this.visibleMovable = 0;\n    this.frozenLeftColumns = [];\n    this.frozenRightColumns = [];\n    this.movableColumns = [];\n    this.fixedColumns = [];\n    this.splitFrozenCount(this.columns);\n    this.leftcount = this.frozenLeftCount;\n    this.rightcount = this.frozenRightCount;\n    this.movablecount = this.movableCount;\n    // if (this.frozenColumns && (this.frozenLeftCount || this.frozenRightCount)) {\n    //     this.setProperties({ frozenColumns: 0 }, true);\n    // }\n    if (this.frozenLeftCount && !this.frozenRightCount) {\n      this.frozenName = 'Left';\n    } else if (this.frozenRightCount && !this.frozenLeftCount) {\n      this.frozenName = 'Right';\n    } else if (this.frozenLeftCount && this.frozenRightCount) {\n      this.frozenName = 'Left-Right';\n    } else if (this.frozenColumns || this.frozenRows) {\n      this.frozenName = 'Left';\n    } else {\n      this.frozenName = undefined;\n    }\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible Frozen left count\n   */\n  Grid.prototype.getVisibleFrozenLeftCount = function () {\n    return this.visibleFrozenLeft;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible Frozen Right count\n   */\n  Grid.prototype.getVisibleFrozenRightCount = function () {\n    return this.visibleFrozenRight;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible movable count\n   */\n  Grid.prototype.getVisibleMovableCount = function () {\n    return this.visibleMovable;\n  };\n  /**\n   * @hidden\n   * @returns {Column[]} Returns the column\n   */\n  Grid.prototype.getFrozenRightColumns = function () {\n    return this.frozenRightColumns;\n  };\n  /**\n   * @hidden\n   * @returns {Column[]} Returns the column\n   */\n  Grid.prototype.getFrozenLeftColumns = function () {\n    return this.frozenLeftColumns;\n  };\n  /**\n   * @hidden\n   * @returns {Column[]} Returns the column\n   */\n  Grid.prototype.getMovableColumns = function () {\n    return this.movableColumns;\n  };\n  Grid.prototype.splitStackedColumns = function (columns) {\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[parseInt(i.toString(), 10)].columns) {\n        this.splitStackedColumns(columns[parseInt(i.toString(), 10)].columns);\n      } else {\n        if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n          if (columns[parseInt(i.toString(), 10)].visible !== false) {\n            this.visibleFrozenLeft++;\n          }\n          this.leftcount++;\n        } else if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n          if (columns[parseInt(i.toString(), 10)].visible !== false) {\n            this.visibleFrozenRight++;\n          }\n          this.rightcount++;\n        } else if (columns[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n          if (columns[parseInt(i.toString(), 10)].visible !== false) {\n            this.visibleFrozenFixed++;\n          }\n          this.fixedcount++;\n        } else {\n          if (columns[parseInt(i.toString(), 10)].visible !== false) {\n            this.visibleMovable++;\n          }\n          this.movablecount++;\n        }\n      }\n    }\n  };\n  Grid.prototype.pushStackedColumns = function (columns, index, arr, col, stackedcol) {\n    arr[parseInt(index.toString(), 10)] = {\n      headerText: col.headerText\n    };\n    if (col.textAlign) {\n      arr[parseInt(index.toString(), 10)].textAlign = col.textAlign;\n    }\n    if (col.customAttributes) {\n      arr[parseInt(index.toString(), 10)].customAttributes = col.customAttributes;\n    }\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[parseInt(i.toString(), 10)].columns) {\n        index = index + 1;\n        this.pushStackedColumns(columns[parseInt(i.toString(), 10)].columns, index, arr, columns[parseInt(i.toString(), 10)], stackedcol);\n        index = index - 1;\n      } else {\n        var stockCol = [];\n        stockCol = arr.slice().slice(0, index + 1);\n        if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n          this.stackedLeft.push(stockCol);\n          this.stackedarrayLeft.push(columns[parseInt(i.toString(), 10)]);\n        } else if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n          this.stackedRight.push(stockCol);\n          this.stackedarrayRight.push(columns[parseInt(i.toString(), 10)]);\n        } else if (columns[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n          this.stackedFixed.push(stockCol);\n          this.stackedarrayFixed.push(columns[parseInt(i.toString(), 10)]);\n        } else {\n          this.stackedMovable.push(stockCol);\n          this.stackedarrayMovable.push(columns[parseInt(i.toString(), 10)]);\n        }\n      }\n    }\n  };\n  Grid.prototype.pushallcol = function (text, text1, col, columns, isTrue) {\n    if (col.headerText === text1.headerText) {\n      if (isTrue) {\n        col.columns.push(columns);\n      } else {\n        var newColumn = {\n          headerText: text.headerText,\n          columns: []\n        };\n        if (text.textAlign) {\n          newColumn.textAlign = text.textAlign;\n        }\n        if (text.customAttributes) {\n          newColumn.customAttributes = text.customAttributes;\n        }\n        col.columns.push(newColumn);\n      }\n    } else {\n      if (col.columns && col.columns.length) {\n        for (var i = 0; i < col.columns.length; i++) {\n          this.pushallcol(text, text1, col.columns[parseInt(i.toString(), 10)], columns, isTrue);\n        }\n      }\n    }\n  };\n  Grid.prototype.resetStackedColumns = function (headercol, gridcolumns, freeze) {\n    var col = {};\n    var tempHead = [];\n    for (var i = 1; i <= headercol.length; i++) {\n      var firstcol = headercol[i - 1];\n      for (var j = 0; j < firstcol.length; j++) {\n        if (!col.columns && i === 1) {\n          col = {\n            headerText: firstcol[parseInt(j.toString(), 10)].headerText,\n            textAlign: firstcol[parseInt(j.toString(), 10)].textAlign,\n            customAttributes: firstcol[parseInt(j.toString(), 10)].customAttributes,\n            columns: []\n          };\n          tempHead.push(firstcol[parseInt(j.toString(), 10)]);\n        } else {\n          if (tempHead.indexOf(firstcol[parseInt(j.toString(), 10)]) === -1) {\n            this.pushallcol(firstcol[parseInt(j.toString(), 10)], firstcol[j - 1], col);\n            tempHead.push(firstcol[parseInt(j.toString(), 10)]);\n          }\n        }\n        if (j === firstcol.length - 1) {\n          this.pushallcol(null, firstcol[parseInt(j.toString(), 10)], col, gridcolumns[i - 1], true);\n          var count = 0;\n          while (count !== headercol.length - 1 && i !== headercol.length) {\n            var firstColHeaders = firstcol.map(function (col) {\n              return col.headerText;\n            }).join(', ');\n            var headerColHeaders = headercol[parseInt(i.toString(), 10)].map(function (item) {\n              return item.headerText;\n            }).join(', ');\n            if (firstColHeaders === headerColHeaders) {\n              i++;\n              this.pushallcol(null, firstcol[parseInt(j.toString(), 10)], col, gridcolumns[i - 1], true);\n            }\n            count++;\n          }\n        }\n      }\n    }\n    if (freeze === 'Left') {\n      this.frozenLeftColumns.push(col);\n    } else if (freeze === 'Right') {\n      this.frozenRightColumns.push(col);\n    } else {\n      this.movableColumns.push(col);\n    }\n  };\n  Grid.prototype.splitFrozenCount = function (columns) {\n    if (this.frozenColumns || this.changedProperties && this.changedProperties.frozenColumns === 0) {\n      var cols = !this.enableColumnVirtualization || this.enableColumnVirtualization && this.isPreparedFrozenColumns ? this.enableColumnVirtualization && this.columnModel && this.columnModel.length ? this.columnModel : this.getColumns() : this.columns;\n      if (!this.changedProperties || this.changedProperties && !this.changedProperties.frozenColumns) {\n        for (var i = 0; i < cols.length; i++) {\n          if (this.frozenColumns > i) {\n            cols[parseInt(i.toString(), 10)].freeze = 'Left';\n          } else if (cols[parseInt(i.toString(), 10)].freeze === 'Right' || cols[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n            cols[parseInt(i.toString(), 10)].freeze = cols[parseInt(i.toString(), 10)].freeze;\n          } else {\n            cols[parseInt(i.toString(), 10)].freeze = undefined;\n          }\n        }\n      }\n    }\n    for (var i = 0; i < (!isNullOrUndefined(columns) ? columns.length : 0); i++) {\n      if (columns[parseInt(i.toString(), 10)].columns) {\n        this.leftcount = 0;\n        this.rightcount = 0;\n        this.movablecount = 0;\n        this.fixedcount = 0;\n        var arr = [];\n        this.splitStackedColumns(columns[parseInt(i.toString(), 10)].columns);\n        if (this.leftcount && !this.rightcount && !this.movablecount && !this.fixedcount) {\n          this.frozenLeftCount += this.leftcount;\n          this.frozenLeftColumns.push(columns[parseInt(i.toString(), 10)]);\n        } else if (this.rightcount && !this.leftcount && !this.movablecount && !this.fixedcount) {\n          this.frozenRightCount += this.rightcount;\n          this.frozenRightColumns.push(columns[parseInt(i.toString(), 10)]);\n        } else if (this.movablecount && !this.leftcount && !this.rightcount && !this.fixedcount) {\n          this.movableCount += this.movablecount;\n          this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n        } else if (this.fixedcount && !this.leftcount && !this.rightcount && !this.movablecount) {\n          this.fixedCount += this.fixedcount;\n          this.fixedColumns.push(columns[parseInt(i.toString(), 10)]);\n          this.movableCount += this.movablecount;\n          this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n        } else {\n          this.frozenLeftCount += this.leftcount;\n          this.frozenRightCount += this.rightcount;\n          this.movableCount += this.movablecount;\n          this.fixedCount += this.fixedcount;\n          this.leftcount = 0;\n          this.rightcount = 0;\n          this.movablecount = 0;\n          this.fixedcount = 0;\n          this.stackedLeft = [];\n          this.stackedRight = [];\n          this.stackedFixed = [];\n          this.stackedMovable = [];\n          this.stackedarrayLeft = [];\n          this.stackedarrayRight = [];\n          this.stackedarrayFixed = [];\n          this.stackedarrayMovable = [];\n          this.pushStackedColumns(columns[parseInt(i.toString(), 10)].columns, 0, arr, columns[parseInt(i.toString(), 10)], {\n            headerText: columns[parseInt(i.toString(), 10)].headerText,\n            textAlign: columns[parseInt(i.toString(), 10)].textAlign,\n            customAttributes: columns[parseInt(i.toString(), 10)].customAttributes,\n            columns: []\n          });\n          if (this.stackedarrayLeft.length) {\n            this.resetStackedColumns(this.stackedLeft, this.stackedarrayLeft, 'Left');\n          }\n          if (this.stackedarrayRight.length) {\n            this.resetStackedColumns(this.stackedRight, this.stackedarrayRight, 'Right');\n          }\n          if (this.stackedarrayFixed.length) {\n            this.resetStackedColumns(this.stackedFixed, this.stackedarrayFixed, 'Fixed');\n          }\n          if (this.stackedarrayMovable.length) {\n            this.resetStackedColumns(this.stackedMovable, this.stackedarrayMovable, 'Movable');\n          }\n          this.stackedLeft = [];\n          this.stackedRight = [];\n          this.stackedMovable = [];\n          this.stackedFixed = [];\n          this.stackedarrayLeft = [];\n          this.stackedarrayRight = [];\n          this.stackedarrayMovable = [];\n          this.stackedarrayFixed = [];\n        }\n      } else {\n        if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n          if (columns[parseInt(i.toString(), 10)].visible !== false) {\n            this.visibleFrozenRight++;\n          }\n          this.frozenRightColumns.push(columns[parseInt(i.toString(), 10)]);\n          this.frozenRightCount++;\n        } else if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n          if (columns[parseInt(i.toString(), 10)].visible !== false) {\n            this.visibleFrozenLeft++;\n          }\n          this.frozenLeftColumns.push(columns[parseInt(i.toString(), 10)]);\n          this.frozenLeftCount++;\n        } else if (columns[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n          this.fixedColumns.push(columns[parseInt(i.toString(), 10)]);\n          this.fixedCount++;\n          this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n          this.movableCount++;\n        } else {\n          if (columns[parseInt(i.toString(), 10)].visible !== false) {\n            this.visibleMovable++;\n          }\n          this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n          this.movableCount++;\n        }\n      }\n    }\n    if (this.frozenLeftColumns.length) {\n      var cols = this.frozenLeftColumns[this.frozenLeftColumns.length - 1];\n      this.removeBorder(this.frozenLeftColumns);\n      this.frozenLeftBorderColumns(cols instanceof Column ? this.lastVisibleLeftCol(this.frozenLeftColumns) : cols);\n    }\n    if (this.frozenRightColumns.length) {\n      var cols = this.frozenRightColumns[0];\n      this.removeBorder(this.frozenRightColumns);\n      this.frozenRightBorderColumns(cols instanceof Column ? this.firstVisibleRightCol(this.frozenRightColumns) : cols);\n    }\n    if ((this.frozenLeftColumns.length || this.frozenRightColumns.length) && this.freezeColumnRefresh) {\n      var cols = this.frozenLeftColumns.concat(this.movableColumns).concat(this.frozenRightColumns);\n      this.setProperties({\n        columns: cols\n      }, true);\n      this.freezeColumnRefresh = false;\n    }\n  };\n  Grid.prototype.removeBorder = function (columns) {\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[parseInt(i.toString(), 10)].columns && columns[parseInt(i.toString(), 10)].columns.length) {\n        if (columns[parseInt(i.toString(), 10)].border === 'Right' || columns[parseInt(i.toString(), 10)].border === 'Left') {\n          columns[parseInt(i.toString(), 10)].border = undefined;\n        }\n        this.removeBorder(columns[parseInt(i.toString(), 10)].columns);\n      } else {\n        if (columns[parseInt(i.toString(), 10)].border === 'Right' || columns[parseInt(i.toString(), 10)].border === 'Left') {\n          columns[parseInt(i.toString(), 10)].border = undefined;\n        }\n      }\n    }\n  };\n  Grid.prototype.isVisibleColumns = function (column, arr) {\n    if (column.columns && column.columns.length) {\n      for (var i = 0; i < column.columns.length; i++) {\n        this.isVisibleColumns(column.columns[parseInt(i.toString(), 10)], arr);\n        if (column.columns[parseInt(i.toString(), 10)].visible && isNullOrUndefined(column.columns[parseInt(i.toString(), 10)].columns) && (!isNullOrUndefined(column.columns[parseInt(i.toString(), 10)].freeze) || column.columns[parseInt(i.toString(), 10)].isFrozen)) {\n          arr.push('true');\n        }\n      }\n    } else {\n      if (column.visible && (!isNullOrUndefined(column.freeze) || column.isFrozen)) {\n        arr.push('true');\n      }\n    }\n  };\n  Grid.prototype.lastVisibleLeftCol = function (columns) {\n    var column;\n    for (var i = columns.length - 1; i >= 0; i--) {\n      var arr = [];\n      this.isVisibleColumns(columns[parseInt(i.toString(), 10)], arr);\n      if (columns[parseInt(i.toString(), 10)].visible && arr.indexOf('true') !== -1) {\n        column = columns[parseInt(i.toString(), 10)];\n        break;\n      }\n    }\n    return column;\n  };\n  Grid.prototype.firstVisibleRightCol = function (columns) {\n    var column;\n    for (var i = 0; i < columns.length; i++) {\n      var arr = [];\n      this.isVisibleColumns(columns[parseInt(i.toString(), 10)], arr);\n      if (columns[parseInt(i.toString(), 10)].visible && arr.indexOf('true') !== -1) {\n        column = columns[parseInt(i.toString(), 10)];\n        break;\n      }\n    }\n    return column;\n  };\n  Grid.prototype.frozenLeftBorderColumns = function (columns) {\n    if (isNullOrUndefined(columns)) {\n      return;\n    }\n    if (columns.columns && columns.columns.length) {\n      columns.border = 'Left';\n      var cols = columns.columns[columns.columns.length - 1];\n      this.frozenLeftBorderColumns(cols instanceof Column && cols.columns ? this.lastVisibleLeftCol(columns.columns) : cols);\n    } else {\n      columns.border = 'Left';\n    }\n  };\n  Grid.prototype.frozenRightBorderColumns = function (columns) {\n    if (isNullOrUndefined(columns)) {\n      return;\n    }\n    if (columns.columns && columns.columns.length) {\n      columns.border = 'Right';\n      var cols = columns.columns[0];\n      this.frozenRightBorderColumns(cols instanceof Column && cols.columns ? this.firstVisibleRightCol(columns.columns) : cols);\n    } else {\n      columns.border = 'Right';\n    }\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible frozen columns count\n   */\n  Grid.prototype.getVisibleFrozenColumns = function () {\n    return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n  };\n  /**\n   * Get the current Filter operator and field.\n   *\n   * @returns {FilterUI} Returns the filter UI\n   */\n  Grid.prototype.getFilterUIInfo = function () {\n    return this.filterModule ? this.filterModule.getFilterUIInfo() : {};\n  };\n  Grid.prototype.getVisibleFrozenColumnsCount = function () {\n    var visibleFrozenColumns = 0;\n    var columns = this.columnModel;\n    for (var i = 0; i < this.frozenColumns; i++) {\n      if (columns[parseInt(i.toString(), 10)].visible) {\n        visibleFrozenColumns++;\n      }\n    }\n    if (this.frozenLeftCount || this.leftcount || this.frozenRightCount || this.rightcount) {\n      for (var i = 0; i < columns.length; i++) {\n        if (columns[parseInt(i.toString(), 10)].visible && (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].freeze === 'Right')) {\n          visibleFrozenColumns++;\n        }\n      }\n    }\n    return visibleFrozenColumns;\n  };\n  Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n    if (!this.frozenLeftCount && !this.leftcount && (!this.frozenRightCount || !this.rightcount)) {\n      for (var i = 0, len = cols.length; i < len; i++) {\n        if (cols[parseInt(i.toString(), 10)].columns) {\n          cnt = this.getVisibleFrozenCount(cols[parseInt(i.toString(), 10)].columns, cnt);\n        } else {\n          if (cols[parseInt(i.toString(), 10)].isFrozen && cols[parseInt(i.toString(), 10)].visible) {\n            cnt++;\n          }\n        }\n      }\n    }\n    return cnt;\n  };\n  Grid.prototype.getFrozenCount = function (cols, cnt, index) {\n    for (var i = 0, len = !isNullOrUndefined(cols) ? cols.length : 0; i < len; i++) {\n      if (cols[parseInt(i.toString(), 10)].columns) {\n        cnt = this.getFrozenCount(cols[parseInt(i.toString(), 10)].columns, cnt, index);\n      } else {\n        if (cols[parseInt(i.toString(), 10)].isFrozen && index > this.frozenColumns - 1) {\n          cnt++;\n        }\n        index++;\n      }\n    }\n    return cnt;\n  };\n  /**\n   * Navigates to the specified target page.\n   *\n   * @param  {number} pageNo - Defines the page number to navigate.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.goToPage = function (pageNo) {\n    if (this.pagerModule) {\n      this.pagerModule.goToPage(pageNo);\n    }\n  };\n  /**\n   * Defines the text of external message.\n   *\n   * @param  {string} message - Defines the message to update.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.updateExternalMessage = function (message) {\n    if (this.pagerModule && !this.pagerTemplate) {\n      this.pagerModule.updateExternalMessage(message);\n    }\n  };\n  /**\n   * Sorts a column with the given options.\n   *\n   * @param {string} columnName - Defines the column name to be sorted.\n   * @param {SortDirection} direction - Defines the direction of sorting field.\n   * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n    if (this.sortModule) {\n      this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    }\n  };\n  /**\n   * Remove the existing columns along with the grid actions like sorting, filtering, searching, grouping, aggregate, etc., and grid will refresh with new columns based on the updated new data source.\n   * > * If no columns are specified while changing the data source, then the columns are auto generated in the Grid based on the list of columns in the updated data source.\n   *\n   * @param {Object | DataManager | DataResult} dataSource -  Assign the new datasource.\n   * @param {Column[] | string[] | ColumnModel[]} columns - Defines columns.\n   * @returns {void}\n   *\n   *\n   * ```typescript\n   * <button id=\"btn\">change dataSource </button>\n   * <div id=\"Grid\"></div>\n   * <script>\n   * let gridObj: Grid = new Grid({\n   *     dataSource: employeeData,  // you can define the datamanager here if you are binding a data through datamanager\n   *     columns: [\n   *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n   *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n   * });\n   * gridObj.appendTo('#Grid');\n   * document.getElementById('btn').addEventListener(\"click\", function(){\n   * let newColumn: [\n   *     { field: 'CustomerID', headerText: 'Customer ID', width:100 },\n   *     { field: 'FirstName', headerText: 'Name' }];\n   * gridObj.changeDataSource(customerData, newColumn);\n   * });\n   * </script>\n   * ```\n   *\n   */\n  Grid.prototype.changeDataSource = function (dataSource, columns) {\n    this.isChangeDataSourceCall = true;\n    this.setProperties({\n      sortSettings: {\n        columns: []\n      }\n    }, true);\n    this.setProperties({\n      filterSettings: {\n        columns: []\n      }\n    }, true);\n    this.setProperties({\n      searchSettings: {\n        key: ''\n      }\n    }, true);\n    if (this.allowGrouping) {\n      this.setProperties({\n        groupSettings: {\n          columns: []\n        }\n      }, true);\n    }\n    if (columns && columns.length) {\n      this.setProperties({\n        columns: columns\n      }, true);\n    }\n    if (dataSource) {\n      if (isNullOrUndefined(columns)) {\n        this.setProperties({\n          columns: []\n        }, true);\n      }\n      this.setProperties({\n        dataSource: dataSource\n      }, true);\n    }\n    this.freezeRefresh();\n    this.isChangeDataSourceCall = false;\n  };\n  /**\n   * Clears all the sorted columns of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.clearSorting = function () {\n    if (this.sortModule) {\n      this.sortModule.clearSorting();\n    }\n  };\n  /**\n   * Remove sorted column by field name.\n   *\n   * @param {string} field - Defines the column field name to remove sort.\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.removeSortColumn = function (field) {\n    if (this.sortModule) {\n      this.sortModule.removeSortColumn(field);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.clearGridActions = function () {\n    this.setProperties({\n      sortSettings: {\n        columns: []\n      }\n    }, true);\n    this.setProperties({\n      filterSettings: {\n        columns: []\n      }\n    }, true);\n    this.setProperties({\n      searchSettings: {\n        key: ''\n      }\n    }, true);\n    if (this.allowGrouping) {\n      this.setProperties({\n        groupSettings: {\n          columns: []\n        }\n      }, false);\n    } else {\n      this.freezeRefresh();\n    }\n  };\n  /**\n   * Filters grid row by column name with the given options.\n   *\n   * @param  {string} fieldName - Defines the field name of the column.\n   * @param  {string} filterOperator - Defines the operator to filter records.\n   * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n   * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n   * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n   * insensitive records (uppercase and lowercase letters treated the same).\n   * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n   * then filter ignores the diacritic characters or accents while filtering.\n   * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n   * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n    if (this.filterModule) {\n      this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    }\n  };\n  /**\n   * Clears all the filtered rows of the Grid.\n   *\n   * @param {string[]} fields - Defines the Fields\n   * @returns {void}\n   */\n  Grid.prototype.clearFiltering = function (fields) {\n    if (this.filterModule) {\n      this.filterModule.clearFiltering(fields);\n    }\n  };\n  /**\n   * Removes filtered column by field name.\n   *\n   * @param  {string} field - Defines column field name to remove filter.\n   * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n    if (this.filterModule) {\n      this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n    }\n  };\n  /**\n   * Selects a row by given index.\n   *\n   * @param  {number} index - Defines the row index.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.selectRow = function (index, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRow(index, isToggle);\n    }\n  };\n  /**\n   * Selects a collection of rows by indexes.\n   *\n   * @param  {number[]} rowIndexes - Specifies the row indexes.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.selectRows = function (rowIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRows(rowIndexes);\n    }\n  };\n  /**\n   * Deselects the current selected rows and cells.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.clearSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearSelection();\n    }\n  };\n  /**\n   * Selects a cell by the given index.\n   *\n   * @param  {IIndex} cellIndex - Defines the row and column indexes.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.selectCell = function (cellIndex, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCell(cellIndex, isToggle);\n    }\n  };\n  /**\n   * Selects a range of cells from start and end indexes.\n   *\n   * @param  {IIndex} startIndex - Specifies the row and column's start index.\n   * @param  {IIndex} endIndex - Specifies the row and column's end index.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n    this.selectionModule.selectCellsByRange(startIndex, endIndex);\n  };\n  /**\n   * Searches Grid records using the given key.\n   * You can customize the default search option by using the\n   * [`searchSettings`](./#searchsettings/).\n   *\n   * @param  {string} searchString - Defines the key.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.search = function (searchString) {\n    if (this.searchModule) {\n      this.searchModule.search(searchString);\n    }\n  };\n  /**\n   * By default, prints all the pages of the Grid and hides the pager.\n   * > You can customize print options using the\n   * [`printMode`](./#printmode).\n   *\n   * @returns {void}\n   */\n  Grid.prototype.print = function () {\n    if (this.printModule) {\n      this.printModule.print();\n    }\n  };\n  /**\n   * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n   * > `editSettings.allowDeleting` should be true.\n   *\n   * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n   * @param {Object} data - Defines the JSON data of the record to be deleted.\n   * @returns {void}\n   */\n  Grid.prototype.deleteRecord = function (fieldname, data) {\n    if (this.editModule) {\n      this.editModule.deleteRecord(fieldname, data);\n    }\n  };\n  /**\n   * Starts edit the selected row. At least one row must be selected before invoking this method.\n   * `editSettings.allowEditing` should be true.\n   * {% codeBlock src='grid/startEdit/index.md' %}{% endcodeBlock %}\n   *\n   * @returns {void}\n   */\n  Grid.prototype.startEdit = function () {\n    if (this.editModule) {\n      this.editModule.startEdit();\n    }\n  };\n  /**\n   * If Grid is in editable state, you can save a record by invoking endEdit.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.endEdit = function () {\n    if (this.editModule) {\n      this.editModule.endEdit();\n    }\n  };\n  /**\n   * Cancels edited state.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.closeEdit = function () {\n    if (this.editModule) {\n      this.editModule.closeEdit();\n    }\n  };\n  /**\n   * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n   * > `editSettings.allowEditing` should be true.\n   *\n   * @param {Object} data - Defines the new add record data.\n   * @param {number} index - Defines the row index to be added\n   * @returns {void}\n   */\n  Grid.prototype.addRecord = function (data, index) {\n    if (this.editModule) {\n      this.editModule.addRecord(data, index);\n    }\n  };\n  /**\n   * Delete any visible row by TR element.\n   *\n   * @param {HTMLTableRowElement} tr - Defines the table row element.\n   * @returns {void}\n   */\n  Grid.prototype.deleteRow = function (tr) {\n    if (this.editModule) {\n      this.editModule.deleteRow(tr);\n    }\n  };\n  /**\n   * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n   *\n   * @param {number} index - Defines row index to edit a particular cell.\n   * @param {string} field - Defines the field name of the column to perform batch edit.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.editCell = function (index, field) {\n    if (this.editModule) {\n      this.editModule.editCell(index, field);\n    }\n  };\n  /**\n   * Saves the cell that is currently edited. It does not save the value to the DataSource.\n   *\n   * @returns {void}\n   * {% codeBlock src='grid/saveCell/index.md' %}{% endcodeBlock %}\n   */\n  Grid.prototype.saveCell = function () {\n    if (this.editModule) {\n      this.editModule.saveCell();\n    }\n  };\n  /**\n   * To update the specified cell by given value without changing into edited state.\n   *\n   * @param {number} rowIndex Defines the row index.\n   * @param {string} field Defines the column field.\n   * @param {string | number | boolean | Date} value - Defines the value to be changed.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.updateCell = function (rowIndex, field, value) {\n    if (this.editModule) {\n      this.editModule.updateCell(rowIndex, field, value);\n    }\n  };\n  /**\n   * To update the specified row by given values without changing into edited state.\n   *\n   * {% codeBlock src='grid/updateRow/index.md' %}{% endcodeBlock %}\n   *\n   * @param {number} index Defines the row index.\n   * @param {Object} data Defines the data object to be updated.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.updateRow = function (index, data) {\n    if (this.editModule) {\n      this.editModule.updateRow(index, data);\n    }\n  };\n  /**\n   * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n   *\n   * @returns {Object} Returns the batch changes\n   */\n  Grid.prototype.getBatchChanges = function () {\n    if (this.editModule) {\n      return this.editModule.getBatchChanges();\n    }\n    return {};\n  };\n  /**\n   * Enables or disables ToolBar items.\n   *\n   * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n   * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.enableToolbarItems = function (items, isEnable) {\n    if (this.toolbarModule) {\n      this.toolbarModule.enableItems(items, isEnable);\n    }\n  };\n  /**\n   * Copy the selected rows or cells data into clipboard.\n   *\n   * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n   * @returns {void}\n   */\n  Grid.prototype.copy = function (withHeader) {\n    if (this.clipboardModule) {\n      this.clipboardModule.copy(withHeader);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.recalcIndentWidth = function () {\n    var _this_1 = this;\n    if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n      return;\n    }\n    if (!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable() || this.getHeaderTable().querySelector('.e-emptycell.e-indentRefreshed') || !this.getContentTable()) {\n      return;\n    }\n    var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n    var headerCol = [].slice.call(this.getHeaderTable().querySelector(literals.colGroup).childNodes);\n    var contentCol = [].slice.call(this.getContentTable().querySelector(literals.colGroup).childNodes);\n    var perPixel = indentWidth / 30;\n    var i = this.getFrozenMode() === 'Right' ? this.groupSettings.columns.length + this.getColumns().length : 0;\n    var parentOffset = this.element.offsetWidth;\n    var applyWidth = function (index, width) {\n      if (ispercentageWidth(_this_1)) {\n        var newWidth = (width / parentOffset * 100).toFixed(1) + '%';\n        headerCol[parseInt(index.toString(), 10)].style.width = newWidth;\n        contentCol[parseInt(index.toString(), 10)].style.width = newWidth;\n      } else {\n        headerCol[parseInt(index.toString(), 10)].style.width = width + 'px';\n        contentCol[parseInt(index.toString(), 10)].style.width = width + 'px';\n      }\n      _this_1.notify(events.columnWidthChanged, {\n        index: index,\n        width: width\n      });\n    };\n    if (perPixel >= 1) {\n      indentWidth = 30 / perPixel;\n    }\n    if (indentWidth < 1) {\n      indentWidth = 1;\n    }\n    if (this.enableColumnVirtualization || this.isAutoGen || this.columns.length === this.groupSettings.columns.length) {\n      indentWidth = 30;\n    }\n    while (i < this.groupSettings.columns.length) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n    if (this.isDetail()) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n    if (this.isRowDragable()) {\n      applyWidth(i, indentWidth);\n    }\n    this.isAutoGen = false;\n    this.getHeaderTable().querySelector('.e-emptycell').classList.add('e-indentRefreshed');\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.resetIndentWidth = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n    if (ispercentageWidth(this)) {\n      this.getHeaderTable().querySelector('.e-emptycell').classList.remove('e-indentRefreshed');\n      this.widthService.setWidthToColumns();\n      this.recalcIndentWidth();\n      if (this.autoFit) {\n        this.preventAdjustColumns();\n      }\n    }\n    if ((this.width === 'auto' || typeof this.width === 'string' && this.width.indexOf('%') !== -1) && this.getColumns().filter(function (col) {\n      return (!col.width || col.width === 'auto') && col.minWidth;\n    }).length > 0) {\n      var tgridWidth = this.widthService.getTableWidth(this.getColumns(), true);\n      this.widthService.setMinwidthBycalculation(tgridWidth);\n    }\n    if (this.isFrozenGrid() && this.enableColumnVirtualization && this.widthService) {\n      this.widthService.refreshFrozenScrollbar();\n    }\n    if (this.allowTextWrap && this.textWrapSettings.wrapMode !== 'Content') {\n      this.notify(events.refreshHandlers, {});\n    }\n    if (this.frozenRows && this.scrollModule) {\n      this.scrollModule.resizeFrozenRowBorder();\n    }\n    if (this.enableStickyHeader) {\n      this.scrollModule.makeStickyHeader();\n    }\n    if (this.enableAutoFill && this.selectionSettings.type === 'Multiple' && this.selectionSettings.mode === 'Cell' && this.selectionModule.selectedRowCellIndexes.length) {\n      this.selectionModule.updateAutoFillPosition();\n      this.selectionModule.drawBorders();\n    }\n  };\n  /**\n   * @hidden\n   * @returns {boolean} Returns isRowDragable\n   */\n  Grid.prototype.isRowDragable = function () {\n    return this.allowRowDragAndDrop && !this.rowDropSettings.targetID;\n  };\n  /**\n   * Changes the Grid column positions by field names.\n   *\n   * @param  {string} fromFName - Defines the origin field name.\n   * @param  {string} toFName - Defines the destination field name.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.reorderColumns = function (fromFName, toFName) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumns(fromFName, toFName);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n   * then you won't get the same results every time.\n   *\n   * @param  {number} fromIndex - Defines the origin field index.\n   * @param  {number} toIndex - Defines the destination field index.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n   * then you will get the same results every time.\n   *\n   * @param  {string} fieldName - Defines the field name.\n   * @param  {number} toIndex - Defines the destination field index.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid Row position with given indexes.\n   *\n   * @param  {number} fromIndexes - Defines the origin Indexes.\n   * @param  {number} toIndex - Defines the destination Index.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n    if (this.rowDragAndDropModule) {\n      this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n    }\n  };\n  /**\n   * @param {ReturnType} e - Defines the Return type\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.refreshDataSource = function (e) {\n    this.notify('refreshdataSource', e);\n  };\n  /**\n   * @param {boolean} enable -Defines the enable\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.disableRowDD = function (enable) {\n    var headerTable = this.getHeaderTable();\n    var contentTable = this.getContentTable();\n    var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n    var rows = this.getRows();\n    var disValue = enable ? 'none' : '';\n    setStyleAttribute(headerTable.querySelector(literals.colGroup).childNodes[0], {\n      'display': disValue\n    });\n    setStyleAttribute(contentTable.querySelector(literals.colGroup).childNodes[0], {\n      'display': disValue\n    });\n    for (var i = 0; i < this.getRows().length; i++) {\n      var ele = rows[parseInt(i.toString(), 10)].firstElementChild;\n      if (enable) {\n        addClass([ele], 'e-hide');\n      } else {\n        removeClass([ele], ['e-hide']);\n      }\n    }\n    for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n      var ele = headerRows[parseInt(j.toString(), 10)];\n      if (enable) {\n        addClass([ele], 'e-hide');\n      } else {\n        removeClass([ele], ['e-hide']);\n      }\n    }\n  };\n  /**\n   * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n   * > * This method ignores the hidden columns.\n   * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n   * > * By specifying the start row index and end row index, providing the range within which the maximum width for that column should be considered when applying `autoFitColumns`.\n   * > * The width of header rows is always calculated. If the width of a header row exceeds the specified range, its width will be allocated to the specific content rows.\n   *\n   * @param  {string |string[]} fieldNames - Defines the column names.\n   * @param  {number} startRowIndex - Specifies the start index of the content row.\n   * @param  {number} endRowIndex - Specifies the end index of content row.\n   * @returns {void}\n   *\n   *\n   * ```typescript\n   * <div id=\"Grid\"></div>\n   * <script>\n   * let gridObj: Grid = new Grid({\n   *     dataSource: employeeData,\n   *     columns: [\n   *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n   *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n   *     dataBound: () => gridObj.autoFitColumns('EmployeeID');\n   * });\n   * gridObj.appendTo('#Grid');\n   * </script>\n   * ```\n   *\n   */\n  Grid.prototype.autoFitColumns = function (fieldNames, startRowIndex, endRowIndex) {\n    var injectedModules = this.getInjectedModules();\n    var resize = injectedModules.find(function (item) {\n      if (typeof item === 'function' && !isNullOrUndefined(item.prototype)) {\n        return item.prototype.getModuleName() === 'resize';\n      } else {\n        return item.name === 'Resize';\n      }\n    });\n    if (!this.resizeModule && resize) {\n      this.autoFitColumnsResize = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.injectModules();\n    }\n    if (this.resizeModule) {\n      this.resizeModule.autoFitColumns(fieldNames, startRowIndex, endRowIndex);\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.preventAdjustColumns = function () {\n    if (this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical' || this.allowResizing && this.resizeSettings.mode === 'Auto') {\n      return;\n    }\n    var columns = this.getColumns();\n    var headerTable = this.getHeaderTable();\n    var tableWidth = 0;\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[parseInt(i.toString(), 10)].visible) {\n        if (this.groupSettings.columns.length && this.groupSettings.columns.indexOf(columns[parseInt(i.toString(), 10)].field) > -1) {\n          var headerCol = [].slice.call(headerTable.querySelector('colgroup').querySelectorAll(':not(.e-group-intent):not(.e-detail-intent):not(.e-drag-intent)'));\n          if (headerCol[parseInt(i.toString(), 10)].style.display === 'none') {\n            continue;\n          }\n        }\n        if (columns[parseInt(i.toString(), 10)].width) {\n          tableWidth += parseFloat(columns[parseInt(i.toString(), 10)].width.toString());\n        } else {\n          tableWidth = 0;\n          break;\n        }\n      }\n    }\n    if (tableWidth) {\n      var percentageWidth = this.isPercentageWidthGrid();\n      var unit = this.widthUnit(percentageWidth);\n      var contentTable = this.getContentTable();\n      if (this.groupSettings.columns.length || this.isDetail() || this.isRowDragable()) {\n        var indentWidth = this.defaultIndentWidth(percentageWidth);\n        var indentWidthUnitFormat = indentWidth.toString() + unit;\n        var headerIndentCol = [].slice.call(headerTable.querySelector('colgroup').querySelectorAll('.e-group-intent, .e-detail-intent, .e-drag-intent'));\n        var contentIndentCol = [].slice.call(contentTable.querySelector('colgroup').querySelectorAll('.e-group-intent, .e-detail-intent, .e-drag-intent'));\n        for (var i = 0; i < headerIndentCol.length; i++) {\n          headerIndentCol[parseInt(i.toString(), 10)].style.setProperty('width', indentWidthUnitFormat);\n          contentIndentCol[parseInt(i.toString(), 10)].style.setProperty('width', indentWidthUnitFormat);\n          tableWidth += indentWidth;\n        }\n      }\n      if (percentageWidth && tableWidth < 100 || !percentageWidth && tableWidth < contentTable.parentElement.clientWidth) {\n        if (!isNullOrUndefined(contentTable.querySelector('.e-emptyrow'))) {\n          addClass([headerTable], ['e-tableborder']);\n          removeClass([contentTable], ['e-tableborder']);\n        } else {\n          addClass([headerTable, contentTable], ['e-tableborder']);\n        }\n      }\n      var tableWidthUnitFormat = tableWidth.toString() + unit;\n      headerTable.style.setProperty('width', tableWidthUnitFormat);\n      contentTable.style.setProperty('width', tableWidthUnitFormat);\n    } else {\n      this.restoreAdjustColumns();\n    }\n  };\n  Grid.prototype.restoreAdjustColumns = function () {\n    if (this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical' || this.allowResizing && this.resizeSettings.mode === 'Auto') {\n      return;\n    }\n    var headerTable = this.getHeaderTable();\n    var contentTable = this.getContentTable();\n    removeClass([headerTable, contentTable], ['e-tableborder']);\n    headerTable.style.removeProperty('width');\n    contentTable.style.removeProperty('width');\n    if (this.groupSettings.columns.length || this.isDetail() || this.isRowDragable()) {\n      var percentageWidth = this.isPercentageWidthGrid();\n      var indentWidthUnitFormat_1 = this.defaultIndentWidth(percentageWidth).toString() + this.widthUnit(percentageWidth);\n      var headerIndentCol = [].slice.call(headerTable.querySelector('colgroup').querySelectorAll('.e-group-intent, .e-detail-intent, .e-drag-intent'));\n      headerIndentCol.forEach(function (element) {\n        element.style.setProperty('width', indentWidthUnitFormat_1);\n      });\n      headerTable.querySelector('.e-emptycell').classList.remove('e-indentRefreshed');\n      this.recalcIndentWidth();\n    }\n  };\n  Grid.prototype.widthUnit = function (percentageWidth) {\n    return percentageWidth ? '%' : 'px';\n  };\n  Grid.prototype.defaultIndentWidth = function (percentageWidth) {\n    return percentageWidth ? parseFloat((30 / this.element.offsetWidth * 100).toFixed(1)) : 30;\n  };\n  Grid.prototype.isPercentageWidthGrid = function () {\n    var column = this.getColumns().find(function (col) {\n      return !isNullOrUndefined(col.width);\n    });\n    return column ? column.width.toString().indexOf('%') > -1 : false;\n  };\n  /**\n   * @param {number} x - Defines the number\n   * @param {number} y - Defines the number\n   * @param {Element} target - Defines the Element\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.createColumnchooser = function (x, y, target) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.renderColumnChooser(x, y, target);\n    }\n  };\n  Grid.prototype.initializeServices = function () {\n    this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n    this.serviceLocator.register('cellRendererFactory', new CellRendererFactory());\n    this.serviceLocator.register('rendererFactory', new RendererFactory());\n    this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n    this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n    this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n    this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n  };\n  Grid.prototype.processModel = function () {\n    var gCols = this.groupSettings.columns;\n    var sCols = this.sortSettings.columns;\n    var flag;\n    var j;\n    if (this.allowGrouping) {\n      var _loop_3 = function (i, len) {\n        flag = false;\n        j = 0;\n        for (var sLen = sCols.length; j < sLen; j++) {\n          if (sCols[parseInt(j.toString(), 10)].field === gCols[parseInt(i.toString(), 10)]) {\n            flag = true;\n            break;\n          }\n        }\n        if (!flag) {\n          sCols.push({\n            field: gCols[parseInt(i.toString(), 10)],\n            direction: 'Ascending',\n            isFromGroup: true\n          });\n        } else {\n          if (this_3.allowSorting) {\n            this_3.sortedColumns.push(sCols[parseInt(j.toString(), 10)].field);\n          } else {\n            sCols[parseInt(j.toString(), 10)].direction = 'Ascending';\n          }\n        }\n        if (!this_3.groupSettings.showGroupedColumn) {\n          var column = this_3.enableColumnVirtualization ? this_3.columns.filter(function (c) {\n            return c.field === gCols[parseInt(i.toString(), 10)];\n          })[0] : this_3.getColumnByField(gCols[parseInt(i.toString(), 10)]);\n          if (column) {\n            column.visible = false;\n          } else {\n            this_3.log('initial_action', {\n              moduleName: 'group',\n              columnName: gCols[parseInt(i.toString(), 10)]\n            });\n          }\n        }\n      };\n      var this_3 = this;\n      for (var i = 0, len = gCols.length; i < len; i++) {\n        _loop_3(i, len);\n      }\n    }\n    if (!gCols.length) {\n      for (var i = 0; i < sCols.length; i++) {\n        this.sortedColumns.push(sCols[parseInt(i.toString(), 10)].field);\n      }\n    }\n    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n    this.emptyRecordTemplateFn = templateCompiler(this.emptyRecordTemplate);\n    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n    this.editTemplateFn = templateCompiler(this.editSettings.template);\n    this.editHeaderTemplateFn = templateCompiler(this.editSettings.headerTemplate);\n    this.editFooterTemplateFn = templateCompiler(this.editSettings.footerTemplate);\n    this.columnChooserTemplateFn = templateCompiler(this.columnChooserSettings.template);\n    this.columnChooserHeaderTemplateFn = templateCompiler(this.columnChooserSettings.headerTemplate);\n    this.columnChooserFooterTemplateFn = templateCompiler(this.columnChooserSettings.footerTemplate);\n    if (!isNullOrUndefined(this.parentDetails)) {\n      var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' : this.parentDetails.parentKeyFieldValue;\n      this.query.where(this.queryString, 'equal', value, true);\n    }\n    this.initForeignColumn();\n  };\n  Grid.prototype.initForeignColumn = function () {\n    if (this.isForeignKeyEnabled(this.getColumns())) {\n      this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n    }\n  };\n  Grid.prototype.enableVerticalRendering = function () {\n    if (this.rowRenderingMode === 'Vertical') {\n      this.element.classList.add('e-row-responsive');\n    } else {\n      this.element.classList.remove('e-row-responsive');\n    }\n  };\n  Grid.prototype.gridRender = function () {\n    var _a;\n    this.updateRTL();\n    if (this.rowRenderingMode === 'Vertical') {\n      this.element.classList.add('e-row-responsive');\n    }\n    if (this.enableHover) {\n      this.element.classList.add('e-gridhover');\n    }\n    if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent) || Browser.isSafari()) {\n      this.element.classList.add('e-mac-safari');\n    }\n    if (Browser.isDevice) {\n      this.element.classList.add('e-device');\n      if (this.adaptiveUIMode === 'Desktop') {\n        this.enableAdaptiveUI = false;\n      }\n    }\n    if (this.adaptiveUIMode === 'Mobile' && !(Browser.isDevice || this.rowRenderingMode === 'Vertical')) {\n      this.enableAdaptiveUI = false;\n    }\n    if (this.rowHeight) {\n      this.element.classList.add('e-grid-min-height');\n    }\n    if (this.cssClass) {\n      if (this.cssClass.indexOf(' ') !== -1) {\n        (_a = this.element.classList).add.apply(_a, this.cssClass.split(' '));\n      } else {\n        this.element.classList.add(this.cssClass);\n      }\n    }\n    // If the below if statement is removed, then drag and drop between grids will not work in firefox browser.\n    if (this.allowRowDragAndDrop && this.rowDropSettings.targetID && Browser.info.name === 'mozilla') {\n      this.element.classList.add('e-disableuserselect');\n    }\n    if (this.editSettings.showAddNewRow && (this.enableVirtualization || this.enableInfiniteScrolling)) {\n      this.editSettings.newRowPosition = 'Top';\n    }\n    classList(this.element, ['e-responsive', 'e-default'], []);\n    var rendererFactory = this.serviceLocator.getService('rendererFactory');\n    this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n    this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n    this.printModule = new Print(this, this.scrollModule);\n    this.clipboardModule = new Clipboard(this, this.serviceLocator);\n    this.renderModule.render();\n    this.eventInitializer();\n    this.createGridPopUpElement();\n    this.widthService.setWidthToColumns();\n    this.updateGridLines();\n    this.applyTextWrap();\n    this.createTooltip(); //for clip mode ellipsis\n    this.enableBoxSelection();\n  };\n  Grid.prototype.dataReady = function () {\n    this.scrollModule.setWidth();\n    this.scrollModule.setHeight();\n    if (this.height !== 'auto') {\n      this.scrollModule.setPadding();\n    }\n  };\n  Grid.prototype.updateRTL = function () {\n    if (this.enableRtl) {\n      this.element.classList.add('e-rtl');\n    } else {\n      this.element.classList.remove('e-rtl');\n    }\n  };\n  Grid.prototype.createGridPopUpElement = function () {\n    var popup = this.createElement('div', {\n      className: 'e-gridpopup'\n    });\n    popup.style.display = 'none';\n    var content = this.createElement('div', {\n      className: literals.content,\n      attrs: {\n        tabIndex: '-1'\n      }\n    });\n    append([content, this.createElement('div', {\n      className: 'e-uptail e-tail'\n    })], popup);\n    content.appendChild(this.createElement('span'));\n    append([content, this.createElement('div', {\n      className: 'e-downtail e-tail'\n    })], popup);\n    this.element.appendChild(popup);\n  };\n  Grid.prototype.updateGridLines = function () {\n    classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n    switch (this.gridLines) {\n      case 'Horizontal':\n        this.element.classList.add('e-horizontallines');\n        break;\n      case 'Vertical':\n        this.element.classList.add('e-verticallines');\n        break;\n      case 'None':\n        this.element.classList.add('e-hidelines');\n        break;\n      case 'Both':\n        this.element.classList.add('e-bothlines');\n        break;\n    }\n    this.updateResizeLines();\n  };\n  Grid.prototype.updateResizeLines = function () {\n    if (this.allowResizing && !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n      this.element.classList.add('e-resize-lines');\n    } else {\n      this.element.classList.remove('e-resize-lines');\n    }\n  };\n  /**\n   * The function is used to apply text wrap\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.applyTextWrap = function () {\n    if (this.allowTextWrap) {\n      var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n      switch (this.textWrapSettings.wrapMode) {\n        case 'Header':\n          wrap(this.element, false);\n          wrap(this.getContent(), false);\n          wrap(headerRows, true);\n          break;\n        case 'Content':\n          wrap(this.getContent(), true);\n          wrap(this.element, false);\n          wrap(headerRows, false);\n          break;\n        default:\n          wrap(this.element, true);\n          wrap(this.getContent(), false);\n          wrap(headerRows, false);\n      }\n      if (this.textWrapSettings.wrapMode !== 'Content') {\n        this.notify(events.refreshHandlers, {});\n      }\n    }\n  };\n  /**\n   * The function is used to remove text wrap\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.removeTextWrap = function () {\n    wrap(this.element, false);\n    var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n    wrap(headerRows, false);\n    wrap(this.getContent(), false);\n    if (this.textWrapSettings.wrapMode !== 'Content') {\n      this.notify(events.refreshHandlers, {});\n    }\n  };\n  /**\n   * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.createTooltip = function () {\n    this.toolTipObj = new Tooltip({\n      opensOn: 'custom',\n      content: '',\n      cssClass: this.cssClass ? this.cssClass : null\n    }, this.element);\n  };\n  /**\n   * Initiates a complete refresh of the Grid's column and layout.\n   *\n   * This method forces a full re-render of the Grid, ensuring that any dynamic\n   * changes to columns or layout are immediately reflected.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.freezeRefresh = function () {\n    if (this.enableVirtualization || this.enableInfiniteScrolling) {\n      this.pageSettings.currentPage = 1;\n    }\n    this.componentRefresh();\n  };\n  Grid.prototype.getTooltipStatus = function (element) {\n    var headerTable = this.getHeaderTable();\n    var headerDivTag = this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical' ? 'e-gridcontent' : 'e-gridheader';\n    var htable = this.createTable(headerTable, headerDivTag, 'header');\n    var ctable = this.createTable(headerTable, headerDivTag, 'content');\n    var table = element.classList.contains('e-headercell') ? htable : ctable;\n    var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n    table.querySelector(ele).className = element.className;\n    var targetElement = table.querySelector(ele);\n    targetElement.innerHTML = '';\n    Array.from(element.childNodes).forEach(function (child) {\n      targetElement.appendChild(child.cloneNode(true));\n    });\n    var width = table.querySelector(ele).getBoundingClientRect().width;\n    document.body.removeChild(htable);\n    document.body.removeChild(ctable);\n    if (width > element.getBoundingClientRect().width && !element.classList.contains('e-editedbatchcell') || this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical' && width > element.getBoundingClientRect().width * 0.55 - (this.height !== 'auto' ? 16 : 0)) {\n      // 0.55 - defines the width of adaptive content cell, 16 - defines the scrollbar width\n      return true;\n    }\n    return false;\n  };\n  Grid.prototype.mouseMoveHandler = function (e) {\n    if (this.isEllipsisTooltip()) {\n      var element = parentsUntil(e.target, 'e-ellipsistooltip');\n      if (e.type === 'mouseout' && (this.prevElement !== element || element !== parentsUntil(e.relatedTarget, 'e-ellipsistooltip'))) {\n        this.toolTipObj.close();\n        this.prevElement = null;\n      }\n      var tagName = e.target.tagName;\n      var elemNames = ['A', 'BUTTON', 'INPUT'];\n      if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n        if (this.getTooltipStatus(element)) {\n          var col = this.getColumns()[parseInt(element.getAttribute(literals.ariaColIndex), 10) - 1];\n          var domSetter = col && col.disableHtmlEncode ? 'innerText' : 'innerHTML';\n          var contentDiv = this.createElement('div');\n          if (element.getElementsByClassName('e-headertext').length) {\n            var innerElement = element.getElementsByClassName('e-headertext')[0];\n            contentDiv[\"\" + domSetter] = this.sanitize(innerElement.innerText);\n            this.toolTipObj.content = contentDiv;\n          } else {\n            contentDiv[\"\" + domSetter] = this.sanitize(element.innerText);\n            this.toolTipObj.content = contentDiv;\n          }\n          if (this.enableHtmlSanitizer) {\n            this.toolTipObj.enableHtmlSanitizer = true;\n          }\n          if (col && col.disableHtmlEncode) {\n            this.toolTipObj.enableHtmlParse = false;\n          }\n          if (element !== this.prevElement) {\n            this.toolTipObj['open'](element);\n          }\n          this.prevElement = element;\n        }\n      }\n    }\n  };\n  Grid.prototype.isEllipsisTooltip = function () {\n    var cols = this.getColumns();\n    if (this.clipMode === 'EllipsisWithTooltip') {\n      return true;\n    }\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[parseInt(i.toString(), 10)].clipMode === 'EllipsisWithTooltip') {\n        return true;\n      }\n    }\n    return false;\n  };\n  Grid.prototype.scrollHandler = function () {\n    if (this.isEllipsisTooltip()) {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * To create table for ellipsiswithtooltip\n   *\n   * @param {Element} table - Defines the table\n   * @param {string} tag - Defines the tag\n   * @param {string} type - Defines the type\n   * @returns {HTMLDivElement} Returns the HTML div ELement\n   * @hidden\n   */\n  Grid.prototype.createTable = function (table, tag, type) {\n    var myTableDiv = this.createElement('div');\n    myTableDiv.className = this.element.className;\n    myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n    var mySubDiv = this.createElement('div');\n    mySubDiv.className = tag;\n    var myTable = this.createElement('table');\n    myTable.className = table.className;\n    myTable.style.cssText = 'table-layout: auto;width: auto';\n    var ele = type === 'header' ? 'th' : 'td';\n    var myTr = this.createElement('tr', {\n      attrs: {\n        role: 'row'\n      }\n    });\n    var mytd = this.createElement(ele);\n    myTr.appendChild(mytd);\n    myTable.appendChild(myTr);\n    mySubDiv.appendChild(myTable);\n    myTableDiv.appendChild(mySubDiv);\n    document.body.appendChild(myTableDiv);\n    return myTableDiv;\n  };\n  Grid.prototype.onKeyPressed = function (e) {\n    if (e.action === 'tab' || e.action === 'shiftTab') {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * Binding events to the element while component creation.\n   *\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.wireEvents = function () {\n    EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n    EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n    EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    EventHandler.add(window, 'resize', this.resetIndentWidth, this);\n    if (this.allowKeyboard) {\n      this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n    }\n    this.keyboardModule = new KeyboardEvents(this.element, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n    EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n    EventHandler.add(this.element, 'mouseover', this.mouseMoveHandler, this);\n    EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n    EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n    EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n  };\n  /**\n   * Unbinding events from the element while component destroy.\n   *\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.unwireEvents = function () {\n    EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n    EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n    EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n    EventHandler.remove(this.element, 'mouseover', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n    EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n    EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    EventHandler.remove(window, 'resize', this.resetIndentWidth);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.addListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n    this.on(events.dataReady, this.dataReady, this);\n    this.on(events.contentReady, this.recalcIndentWidth, this);\n    this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n    this.on(events.refreshFrozenPosition, this.refreshFrozenPosition, this);\n    this.on(events.refreshSplitFrozenColumn, this.refreshSplitFrozenColumn, this);\n    this.dataBoundFunction = this.refreshMediaCol.bind(this);\n    this.addEventListener(events.dataBound, this.dataBoundFunction);\n    this.on(events.keyPressed, this.onKeyPressed, this);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.removeListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n    this.off(events.dataReady, this.dataReady);\n    this.off(events.contentReady, this.recalcIndentWidth);\n    this.off(events.headerRefreshed, this.recalcIndentWidth);\n    this.on(events.refreshFrozenPosition, this.refreshFrozenPosition, this);\n    this.on(events.refreshSplitFrozenColumn, this.refreshSplitFrozenColumn, this);\n    this.removeEventListener(events.dataBound, this.dataBoundFunction);\n    this.off(events.keyPressed, this.onKeyPressed);\n  };\n  /**\n   * Get current visible data of grid.\n   *\n   * @returns {Object[]} Returns the current view records\n   *\n   * @isGenericType true\n   */\n  Grid.prototype.getCurrentViewRecords = function () {\n    if (isGroupAdaptive(this)) {\n      return isNullOrUndefined(this.currentViewData.records) ? this.currentViewData : this.currentViewData.records;\n    }\n    if (this.groupSettings.enableLazyLoading) {\n      return this.currentViewData;\n    }\n    return this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length && this.currentViewData.records ? this.currentViewData.records : this.currentViewData;\n  };\n  Grid.prototype.mouseClickHandler = function (e) {\n    if (this.isChildGrid(e) || parentsUntil(e.target, 'e-gridpopup') && e.touches || this.element.getElementsByClassName('e-cloneproperties').length || this.checkEdit(e)) {\n      return;\n    }\n    if ((!this.allowRowDragAndDrop && (parentsUntil(e.target, literals.gridContent) || e.target.tagName === 'TD') || parentsUntil(e.target, 'e-headercell') && parentsUntil(e.target, 'e-headercell').querySelector('.e-checkselectall') || !(this.allowGrouping || this.allowReordering) && parentsUntil(e.target, 'e-gridheader')) && e.touches) {\n      return;\n    }\n    if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop && !parentsUntil(e.target, 'e-filterbarcell') && e.target && ['A', 'BUTTON', 'INPUT'].indexOf(e.target.tagName) === -1) {\n      e.preventDefault();\n    }\n    var args = this.getRowInfo(e.target);\n    var cancel = 'cancel';\n    args[\"\" + cancel] = false;\n    var isDataRow = false;\n    var tr = closest(e.target, 'tr');\n    if (tr && tr.getAttribute('data-uid')) {\n      var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      isDataRow = rowObj ? rowObj.isDataRow : false;\n    }\n    if (isDataRow) {\n      this.trigger(events.recordClick, args);\n    }\n    this.notify(events.click, e);\n  };\n  Grid.prototype.checkEdit = function (e) {\n    var tr = parentsUntil(e.target, literals.row);\n    var isEdit = this.editSettings.mode !== 'Batch' && this.isEdit && tr && (tr.classList.contains(literals.editedRow) || tr.classList.contains(literals.addedRow) && !this.editSettings.showAddNewRow);\n    return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || parentsUntil(e.target, literals.rowCell) && parentsUntil(e.target, literals.rowCell).classList.contains('e-editedbatchcell'));\n  };\n  Grid.prototype.dblClickHandler = function (e) {\n    var grid = parentsUntil(e.target, 'e-grid');\n    if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n      return;\n    }\n    var dataRow = false;\n    var tr = closest(e.target, 'tr');\n    if (tr && tr.getAttribute('data-uid')) {\n      var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      dataRow = rowObj ? rowObj.isDataRow : false;\n    }\n    var args = this.getRowInfo(e.target);\n    args.target = e.target;\n    if (dataRow) {\n      this.trigger(events.recordDoubleClick, args);\n    }\n    this.notify(events.dblclick, e);\n  };\n  Grid.prototype.focusOutHandler = function (e) {\n    if (this.isChildGrid(e)) {\n      return;\n    }\n    if (!parentsUntil(e.target, 'e-grid')) {\n      this.element.querySelector('.e-gridpopup').style.display = 'None';\n    }\n    var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n    if (filterClear && !filterClear.parentElement.classList.contains('e-tbar-btn')) {\n      filterClear.classList.add('e-hide');\n    }\n    var relatedTarget = e.relatedTarget;\n    var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n    if ((!relatedTarget || !parentsUntil(relatedTarget, 'e-grid') && (!isNullOrUndefined(ariaOwns) && ariaOwns) !== e.target.getAttribute('aria-owns')) && !this.keyPress && this.isEdit && !Browser.isDevice) {\n      if (this.editSettings.mode === 'Batch' && !((parentsUntil(relatedTarget, 'e-ddl') || parentsUntil(relatedTarget, 'e-ddt')) && (parentsUntil(relatedTarget, 'e-multi-select-list-wrapper') || parentsUntil(relatedTarget, 'e-input-filter')) && parentsUntil(relatedTarget, 'e-input-group')) && (parentsUntil(relatedTarget, 'e-uploader') || !(relatedTarget && isNullOrUndefined(parentsUntil(relatedTarget, 'e-input-group'))) && !parentsUntil(e.target, 'edit-custom-template'))) {\n        this.editModule.saveCell();\n        this.notify(events.editNextValCell, {});\n      }\n      if (this.editSettings.mode === 'Normal' && !this.isWidgetsDestroyed) {\n        this.editModule.editFormValidate();\n      }\n    }\n    if (this.editSettings.showAddNewRow) {\n      this.editModule.isShowAddedRowValidate = false;\n    }\n    this.keyPress = false;\n  };\n  Grid.prototype.isChildGrid = function (e) {\n    var gridElement = parentsUntil(e.target, 'e-grid');\n    if (gridElement && gridElement.id !== this.element.id || parentsUntil(e.target, 'e-unboundcelldiv') && isNullOrUndefined(gridElement)) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * @param {Object} persistedData - Defines the persisted data\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.mergePersistGridData = function (persistedData) {\n    var data = this.getLocalData();\n    if (!(isNullOrUndefined(data) || data === '') || !isNullOrUndefined(persistedData)) {\n      var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n      var keys = Object.keys(dataObj);\n      this.isProtectedOnChange = true;\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        if (typeof this[\"\" + key] === 'object' && !isNullOrUndefined(this[\"\" + key])) {\n          if (Array.isArray(this[\"\" + key]) && key === 'columns') {\n            this.setFrozenCount();\n            setColumnIndex(this[\"\" + key]);\n            this.mergeColumns(dataObj[\"\" + key], this[\"\" + key]);\n            this.mergedColumns = true;\n            this[\"\" + key] = dataObj[\"\" + key];\n          } else {\n            extend(this[\"\" + key], dataObj[\"\" + key]);\n          }\n        } else {\n          this[\"\" + key] = dataObj[\"\" + key];\n        }\n      }\n      this.isProtectedOnChange = false;\n    }\n  };\n  Grid.prototype.mergeColumns = function (storedColumn, columns) {\n    var storedColumns = storedColumn;\n    var isFrozenGrid = this.isFrozenGrid();\n    var _loop_4 = function (i) {\n      var localCol = columns.filter(function (tCol) {\n        return isFrozenGrid ? tCol.index === storedColumns[parseInt(i.toString(), 10)][\"\" + literals.initialFrozenColumnIndex] : tCol.index === storedColumns[parseInt(i.toString(), 10)].index;\n      })[0];\n      if (!isNullOrUndefined(localCol)) {\n        if (isFrozenGrid) {\n          localCol = extend({}, localCol, {}, true);\n          localCol.freeze = storedColumns[parseInt(i.toString(), 10)].freeze;\n        }\n        if (localCol.columns && localCol.columns.length) {\n          this_4.mergeColumns(storedColumns[parseInt(i.toString(), 10)].columns, localCol.columns);\n          storedColumns[parseInt(i.toString(), 10)] = extend(localCol, storedColumns[parseInt(i.toString(), 10)], {}, true);\n        } else {\n          storedColumns[parseInt(i.toString(), 10)] = extend(localCol, storedColumns[parseInt(i.toString(), 10)], {}, true);\n        }\n      }\n    };\n    var this_4 = this;\n    for (var i = 0; i < storedColumns.length; i++) {\n      _loop_4(i);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {boolean} Returns the isDetail\n   */\n  Grid.prototype.isDetail = function () {\n    return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n  };\n  Grid.prototype.isCommandColumn = function (columns) {\n    var _this_1 = this;\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this_1.isCommandColumn(col.columns);\n      }\n      return !!(col.commands || col.commandsTemplate);\n    });\n  };\n  Grid.prototype.isForeignKeyEnabled = function (columns) {\n    var _this_1 = this;\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this_1.isForeignKeyEnabled(col.columns);\n      }\n      return !!(col.dataSource && col.foreignKeyValue);\n    });\n  };\n  Grid.prototype.keyPressHandler = function (e) {\n    var presskey = extend(e, {\n      cancel: false\n    });\n    this.trigger('keyPressed', presskey);\n    if (presskey.cancel === true || this.isEdit && e && parentsUntil(e.target, 'e-gridform') && parentsUntil(e.target, 'e-ddl') && e.action === 'open' && e.altKey === true && e.code === 'ArrowDown') {\n      e.stopImmediatePropagation();\n    }\n  };\n  Grid.prototype.keyDownHandler = function (e) {\n    if (e.altKey) {\n      if (e.keyCode === 74) {\n        //alt j\n        if (this.keyA) {\n          //alt A J\n          this.notify(events.groupCollapse, {\n            target: e.target,\n            collapse: false\n          });\n          this.keyA = false;\n        } else {\n          if (this.focusModule && this.focusModule.currentInfo && this.focusModule.currentInfo.element) {\n            removeClass([this.focusModule.currentInfo.element, this.focusModule.currentInfo.elementToFocus], ['e-focused', 'e-focus']);\n            this.focusModule.currentInfo.element.tabIndex = -1;\n          }\n          if (!this.element.classList.contains('e-childgrid')) {\n            this.element.focus();\n          }\n        }\n      }\n      if (e.keyCode === 87) {\n        //alt w\n        var focusModule = this.focusModule;\n        if (focusModule) {\n          if (!this.currentViewData.length) {\n            return;\n          }\n          focusModule.focusContent();\n          focusModule.addOutline();\n        }\n      }\n      if (e.keyCode === 65) {\n        //alt A\n        this.keyA = true;\n      }\n      if (e.keyCode === 72 && this.keyA) {\n        //alt A H\n        this.notify(events.groupCollapse, {\n          target: e.target,\n          collapse: true\n        });\n        this.keyA = false;\n      }\n    }\n    if (e.keyCode === 13) {\n      this.notify(events.enterKeyHandler, e);\n    }\n  };\n  Grid.prototype.keyActionHandler = function (e) {\n    if (this.isChildGrid(e) || this.editModule && (this.editModule.alertDObj && this.editModule.alertDObj.visible || this.editModule.dialogObj && this.editModule.dialogObj.visible) || this.isEdit && (!this.editSettings.showAddNewRow || this.editSettings.showAddNewRow && this.element.querySelector(literals.editedRow)) && e.action !== 'escape' && e.action !== 'enter' && e.action !== 'shiftEnter' && e.action !== 'tab' && e.action !== 'shiftTab') {\n      return;\n    } else {\n      this.keyPress = true;\n    }\n    if (this.allowKeyboard) {\n      if (e.action === 'ctrlPlusP') {\n        e.preventDefault();\n        this.print();\n      }\n      this.notify(events.keyPressed, e);\n    }\n  };\n  /**\n   * @param {Function[]} modules - Defines the modules\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.setInjectedModules = function (modules) {\n    this.injectedModules = modules;\n  };\n  Grid.prototype.updateColumnObject = function () {\n    prepareColumns(this.columns, this.enableColumnVirtualization, this);\n    setColumnIndex(this.columns);\n    this.initForeignColumn();\n    this.notify(events.autoCol, {});\n  };\n  Grid.prototype.refreshFrozenPosition = function (obj) {\n    if (obj && obj.isModeChg) {\n      this.refreshColumns();\n      this.notify(events.refreshResizePosition, {});\n    } else {\n      this.refreshColumns();\n    }\n  };\n  /**\n   * Gets the foreign columns from Grid.\n   *\n   * @returns {Column[]} Returns Foreign key column\n   */\n  Grid.prototype.getForeignKeyColumns = function () {\n    var cols = this.enableColumnVirtualization ? this.columns : this.getColumns();\n    return cols.filter(function (col) {\n      return col.isForeignColumn();\n    });\n  };\n  /**\n   * @hidden\n   * @param {boolean} accurateHeight - Defines the accurate row height\n   * @returns {number} Returns row height\n   */\n  Grid.prototype.getRowHeight = function (accurateHeight) {\n    return this.rowHeight ? this.rowHeight : getRowHeight(this.element, accurateHeight);\n  };\n  /**\n   * Refreshes the Grid column changes.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.refreshColumns = function () {\n    this.freezeColumnRefresh = true;\n    this.setFrozenCount();\n    this.updateFrozenColumnsWidth();\n    if (this.isFrozenGrid()) {\n      this.isPreventScrollEvent = true;\n    }\n    this.updateColumnObject();\n    this.checkLockColumns(this.getColumns());\n    this.refresh();\n    if (this.isFrozenGrid() && this.enableColumnVirtualization) {\n      var left = this.getContent().querySelector('.e-movablescrollbar').scrollLeft;\n      this.getHeaderContent().querySelector('.' + literals.headerContent).scrollLeft = left;\n      this.getContent().querySelector('.' + literals.content).scrollLeft = left;\n    }\n  };\n  /**\n   * Export Grid data to Excel file(.xlsx).\n   *\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {Promise<any>} Returns the excelexport\n   */\n  Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  workbook, isBlob) {\n    if (this.exportGrids && this.exportGrids.length) {\n      var gridIds = this.exportGrids.slice();\n      return this.exportMultipleExcelGrids(gridIds, excelExportProperties, isMultipleExport, workbook, isBlob);\n    } else {\n      return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n    }\n  };\n  /**\n   * Export Grid data to CSV file.\n   *\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {Promise<any>} Returns csv export\n   */\n  Grid.prototype.csvExport = function (excelExportProperties,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isMultipleExport, workbook, isBlob) {\n    return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n  };\n  /**\n   * Export Grid data to PDF document.\n   *\n   * @param {pdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n   * @param {isMultipleExport} isMultipleExport - Define to enable multiple export.\n   * @param {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n   * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   *\n   * @returns {Promise<any>} Returns pdfexport\n   */\n  Grid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n    if (this.exportGrids && this.exportGrids.length) {\n      var gridIds = this.exportGrids.slice();\n      return this.exportMultiplePdfGrids(gridIds, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    } else {\n      return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n    }\n  };\n  Grid.prototype.exportMultiplePdfGrids = function (gridIds, pdfExportProperties, isMultipleExport,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  pdfDoc, isBlob) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var _this = this;\n    if (gridIds.length !== 0) {\n      var currentGridId = gridIds.shift();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var currentGridInstance = document.getElementById(currentGridId).ej2_instances[0];\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var exportPromise = currentGridInstance.pdfExportModule ? currentGridInstance.pdfExportModule.Map(currentGridInstance, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : Promise.resolve();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return exportPromise.then(function (exportedGridResults) {\n        isMultipleExport = gridIds.length === 1 ? false : true;\n        return _this.exportMultiplePdfGrids(gridIds, pdfExportProperties, isMultipleExport, exportedGridResults, isBlob);\n      });\n    }\n    return null;\n  };\n  Grid.prototype.exportMultipleExcelGrids = function (gridIds, excelExportProperties, isMultipleExport,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  workbook, isBlob) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var _this = this;\n    if (gridIds.length !== 0) {\n      var currentGridId = gridIds.shift();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var currentGridInstance = document.getElementById(currentGridId).ej2_instances[0];\n      var exportPromise = currentGridInstance.excelExportModule ? currentGridInstance.excelExportModule.Map(currentGridInstance, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return exportPromise.then(function (exportedGridResults) {\n        isMultipleExport = gridIds.length === 1 ? false : true;\n        return _this.exportMultipleExcelGrids(gridIds, excelExportProperties, isMultipleExport, exportedGridResults, isBlob);\n      });\n    }\n    return null;\n  };\n  /**\n   * Groups a column by column name.\n   *\n   * @param  {string} columnName - Defines the column name to group.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.groupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.groupColumn(columnName);\n    }\n  };\n  /**\n   * Expands all the grouped rows of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.groupExpandAll = function () {\n    if (this.groupModule) {\n      this.groupModule.expandAll();\n    }\n  };\n  /**\n   * Collapses all the grouped rows of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.groupCollapseAll = function () {\n    if (this.groupModule) {\n      this.groupModule.collapseAll();\n    }\n  };\n  /**\n   * Expands or collapses grouped rows by target element.\n   *\n   * @param  {Element} target - Defines the target element of the grouped row.\n   * @returns {void}\n   */\n  // public expandCollapseRows(target: Element): void {\n  //     if (this.groupModule) {\n  //         this.groupModule.expandCollapseRows(target);\n  //     }\n  // }\n  /**\n   * Clears all the grouped columns of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.clearGrouping = function () {\n    if (this.groupModule) {\n      this.groupModule.clearGrouping();\n    }\n  };\n  /**\n   * Ungroups a column by column name.\n   *\n   * {% codeBlock src='grid/ungroupColumn/index.md' %}{% endcodeBlock %}\n   *\n   * @param  {string} columnName - Defines the column name to ungroup.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.ungroupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.ungroupColumn(columnName);\n    }\n  };\n  /**\n   * Column chooser can be displayed on screen by given position(X and Y axis).\n   *\n   * @param {number} x - Defines the X axis.\n   * @param {number} y - Defines the Y axis.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.openColumnChooser = function (x, y) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.openColumnChooser(x, y);\n    }\n  };\n  Grid.prototype.scrollRefresh = function () {\n    var _this_1 = this;\n    var refresh = function () {\n      _this_1.scrollModule.refresh();\n      _this_1.off(events.contentReady, refresh);\n    };\n    this.on(events.contentReady, refresh, this);\n  };\n  /**\n   * Collapses a detail row with the given target.\n   *\n   * @param  {Element} target - Defines the expanded element to collapse.\n   * @returns {void}\n   */\n  // public detailCollapse(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.collapse(target);\n  //     }\n  // }\n  /**\n   * Collapses all the detail rows of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.detailCollapseAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.collapseAll();\n    }\n  };\n  /**\n   * Expands a detail row with the given target.\n   *\n   * @param  {Element} target - Defines the collapsed element to expand.\n   * @returns {void}\n   */\n  // public detailExpand(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.expand(target);\n  //     }\n  // }\n  /**\n   * Expands all the detail rows of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.detailExpandAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.expandAll();\n    }\n  };\n  /**\n   * Deselects the currently selected cells.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.clearCellSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearCellSelection();\n    }\n  };\n  /**\n   * Deselects the currently selected rows.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.clearRowSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearRowSelection();\n    }\n  };\n  /**\n   * Selects a collection of cells by row and column indexes.\n   *\n   * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.selectCells = function (rowCellIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCells(rowCellIndexes);\n    }\n  };\n  /**\n   * Selects a range of rows from start and end row indexes.\n   *\n   * @param  {number} startIndex - Specifies the start row index.\n   * @param  {number} endIndex - Specifies the end row index.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRowsByRange(startIndex, endIndex);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {boolean} Returns whether context menu is open or not\n   */\n  Grid.prototype.isContextMenuOpen = function () {\n    return this.contextMenuModule && this.contextMenuModule.isOpen;\n  };\n  /**\n   * @param {Function} module - Defines the module\n   * @returns {boolean} return the injected modules\n   * @hidden\n   */\n  Grid.prototype.ensureModuleInjected = function (module) {\n    return this.getInjectedModules().indexOf(module) >= 0;\n  };\n  /**\n   * Destroys the given template reference.\n   *\n   * @param {string[]} propertyNames - Defines the collection of template name.\n   * @param {any} index - specifies the index\n   *\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n  Grid.prototype.destroyTemplate = function (propertyNames, index) {\n    this.clearTemplate(propertyNames, index);\n  };\n  /**\n   * @param {string | string[]} type - Defines the type\n   * @param {Object} args - Defines the arguments\n   * @returns {void}\n   * @hidden\n   * @private\n   */\n  Grid.prototype.log = function (type, args) {\n    var injectedModules = this.getInjectedModules();\n    var logger = injectedModules.find(function (item) {\n      return item.name === 'Logger';\n    });\n    if (!logger) {\n      Grid_1.Inject(Logger);\n      this.enableLogger = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.injectModules();\n    }\n    // eslint-disable-next-line\n    this.loggerModule ? this.loggerModule.log(type, args) : function () {\n      return 0;\n    }();\n  };\n  /**\n   * @param {Element} element - Defines the element\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.applyBiggerTheme = function (element) {\n    if (this.element.classList.contains('e-bigger')) {\n      element.classList.add('e-bigger');\n    }\n  };\n  /**\n   * @hidden\n   * @returns {Object} Returns the previous row data\n   */\n  Grid.prototype.getPreviousRowData = function () {\n    var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n    return previousRowData;\n  };\n  /**\n   * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.hideScroll = function () {\n    var content = this.getContent().querySelector('.' + literals.content);\n    if (content.scrollHeight <= content.clientHeight) {\n      this.scrollModule.removePadding();\n      content.style.overflowY = 'auto';\n    }\n  };\n  /**\n   * Get row index by primary key or row data.\n   *\n   * @param  {string | Object} value - Defines the primary key value.\n   *\n   * @returns {number} Returns the index\n   */\n  Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    value = typeof value === 'object' ? value[\"\" + pkName] : value;\n    var rows = this.getRowsObject();\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[parseInt(i.toString(), 10)].isDetailRow || rows[parseInt(i.toString(), 10)].isCaptionRow) {\n        continue;\n      }\n      var pKvalue = rows[parseInt(i.toString(), 10)].data[\"\" + pkName];\n      if (pkName.split('.').length > 1) {\n        pKvalue = performComplexDataOperation(pkName, rows[parseInt(i.toString(), 10)].data);\n      }\n      if (pKvalue === value) {\n        return rows[parseInt(i.toString(), 10)].index;\n      }\n    }\n    return -1;\n  };\n  /**\n   * @param {string} field - Defines the field name\n   * @param {boolean} isForeignKey - Defines the foreign key\n   * @returns {Column} returns the column\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n  Grid.prototype.grabColumnByFieldFromAllCols = function (field, isForeignKey) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    var gCols = this.columnModel;\n    for (var i = 0; i < gCols.length; i++) {\n      if (!isForeignKey && field === gCols[parseInt(i.toString(), 10)].field || isForeignKey && gCols[parseInt(i.toString(), 10)].isForeignColumn() && field === gCols[parseInt(i.toString(), 10)].foreignKeyValue) {\n        column = gCols[parseInt(i.toString(), 10)];\n        break;\n      }\n    }\n    return column;\n  };\n  /**\n   * @param {string} uid - Defines the uid\n   * @returns {Column} returns the column\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n  Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    var gCols = this.columnModel;\n    for (var i = 0; i < gCols.length; i++) {\n      if (uid === gCols[parseInt(i.toString(), 10)].uid) {\n        column = gCols[parseInt(i.toString(), 10)];\n      }\n    }\n    return column;\n  };\n  /**\n   * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n   *\n   * @returns {Object[] | Promise<Object>} Returns the filtered records\n   */\n  Grid.prototype.getFilteredRecords = function () {\n    if (this.allowFiltering && this.filterSettings.columns.length || this.searchSettings.key.length) {\n      var query = this.renderModule.data.generateQuery(true);\n      if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n        return this.renderModule.data.getData(this.dataSource, query);\n      } else {\n        if (this.dataSource instanceof DataManager) {\n          return this.dataSource.executeLocal(query);\n        } else {\n          return new DataManager(this.dataSource, query).executeLocal(query);\n        }\n      }\n    }\n    return [];\n  };\n  Grid.prototype.getUserAgent = function () {\n    var userAgent = Browser.userAgent.toLowerCase();\n    return /iphone|ipod|ipad|macintosh/.test(userAgent);\n  };\n  /**\n   * @param {TouchEventArgs} e - Defines the TouchEventArgs\n   * @returns {void}\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n  // eslint-disable-next-line\n  Grid.prototype.tapEvent = function (e) {\n    if (this.getUserAgent()) {\n      if (!Global.timer) {\n        Global.timer = setTimeout(function () {\n          Global.timer = null;\n        }, 300);\n      } else {\n        clearTimeout(Global.timer);\n        Global.timer = null;\n        this.dblClickHandler(e);\n        this.notify(events.doubleTap, e);\n      }\n    }\n  };\n  /**\n   * @param {string} prefix - specifies the prefix\n   * @returns {string} returns the row uid\n   * @hidden\n   */\n  Grid.prototype.getRowUid = function (prefix) {\n    return \"\" + prefix + this.rowUid++;\n  };\n  /**\n   * @param {string} uid - specifies the uid\n   * @returns {Element} returns the element\n   * @hidden\n   */\n  Grid.prototype.getRowElementByUID = function (uid) {\n    var rowEle;\n    var rows = [];\n    var cntRows = [].slice.call(this.getContent().querySelector(literals.tbody).children);\n    if (this.frozenRows) {\n      rows = [].slice.call(this.getHeaderContent().querySelector(literals.tbody).children);\n      rows = rows.concat(cntRows);\n    } else {\n      rows = cntRows;\n    }\n    for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n      var row = rows_2[_i];\n      if (row.getAttribute('data-uid') === uid) {\n        rowEle = row;\n        break;\n      }\n    }\n    return rowEle;\n  };\n  /**\n   * Gets the hidden columns from the Grid.\n   *\n   * @returns {Column[]} Returns the Column\n   */\n  Grid.prototype.getHiddenColumns = function () {\n    var cols = [];\n    for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n      var col = _a[_i];\n      if (col.visible === false) {\n        cols.push(col);\n      }\n    }\n    return cols;\n  };\n  /**\n   * Calculates the page size by parent element height\n   *\n   * @param {number | string } containerHeight - specifies the container height\n   * @returns {number} returns the page size\n   */\n  Grid.prototype.calculatePageSizeByParentHeight = function (containerHeight) {\n    if (this.allowPaging) {\n      if (this.allowTextWrap && this.textWrapSettings.wrapMode === 'Header' || !this.allowTextWrap) {\n        var pagesize = 0;\n        if (containerHeight.indexOf('%') !== -1) {\n          containerHeight = parseInt(containerHeight, 10) / 100 * this.element.clientHeight;\n        }\n        var nonContentHeight = this.getNoncontentHeight() + this.getRowHeight();\n        if (containerHeight > nonContentHeight) {\n          var contentHeight = 0;\n          contentHeight = containerHeight - this.getNoncontentHeight();\n          pagesize = contentHeight / this.getRowHeight();\n        }\n        if (pagesize > 0) {\n          return Math.floor(pagesize);\n        }\n      }\n    }\n    return 0;\n  };\n  Grid.prototype.getNoncontentHeight = function () {\n    var height = 0;\n    if (this.getHeaderContent() && !isNullOrUndefined(this.getHeaderContent().clientHeight)) {\n      height += this.getHeaderContent().clientHeight;\n    }\n    if (this.toolbar && !isNullOrUndefined(this.element.querySelector('.e-toolbar').clientHeight)) {\n      height += this.element.querySelector('.e-toolbar').clientHeight;\n    }\n    if (this.allowPaging && !isNullOrUndefined(this.element.querySelector('.e-gridpager').clientHeight)) {\n      height += this.element.querySelector('.e-gridpager').clientHeight;\n    }\n    if (this.showColumnChooser && !isNullOrUndefined(this.element.querySelector('.e-columnheader').clientHeight)) {\n      height += this.element.querySelector('.e-columnheader').clientHeight;\n    }\n    if (this.allowGrouping && this.groupSettings.showDropArea && !isNullOrUndefined(this.element.querySelector('.e-groupdroparea').clientHeight)) {\n      height += this.element.querySelector('.e-groupdroparea').clientHeight;\n    }\n    if (this.aggregates.length > 0 && !isNullOrUndefined(this.element.querySelector('.e-summaryrow').clientHeight)) {\n      for (var i = 0; i < this.element.getElementsByClassName('e-summaryrow').length; i++) {\n        height += this.element.getElementsByClassName('e-summaryrow')[parseInt(i.toString(), 10)].clientHeight;\n      }\n    }\n    return height;\n  };\n  /**\n   *To perform aggregate operation on a column.\n   *\n   * @param  {AggregateColumnModel} summaryCol - Pass Aggregate Column details.\n   * @param  {Object} summaryData - Pass JSON Array for which its field values to be calculated.\n   *\n   * @returns {number} returns the summary values\n   */\n  Grid.prototype.getSummaryValues = function (summaryCol, summaryData) {\n    return DataUtil.aggregates[summaryCol.type.toLowerCase()](summaryData, summaryCol.field);\n  };\n  /**\n   * Sends a Post request to export Grid to Excel file in server side.\n   *\n   * @param  {string} url - Pass Url for server side excel export action.\n   *\n   * @param  {ExportHeaders} headers - The headers to include in the export request.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.serverExcelExport = function (url, headers) {\n    this.isExcel = true;\n    this.exportGrid(url, headers);\n  };\n  /**\n   * Sends a Post request to export Grid to Pdf file in server side.\n   *\n   * @param  {string} url - Pass Url for server side pdf export action.\n   *\n   * @param  {ExportHeaders} headers - The headers to include in the export request.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.serverPdfExport = function (url, headers) {\n    this.isExcel = false;\n    this.exportGrid(url, headers);\n  };\n  /**\n   * Sends a Post request to export Grid to CSV file in server side.\n   *\n   * @param  {string} url - Pass Url for server side csv export action.\n   *\n   * @param  {ExportHeaders} headers - The headers to include in the export request.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.serverCsvExport = function (url, headers) {\n    this.isExcel = true;\n    this.exportGrid(url, headers);\n  };\n  /**\n   * @param {string} url - Defines exporting url\n   * @param {ExportHeaders} headers - The optional headers for the export request.\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.exportGrid = function (url, headers) {\n    var _this_1 = this;\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var grid = this;\n    var query = grid.getDataModule().generateQuery(true);\n    var state = new UrlAdaptor().processQuery(new DataManager({\n      url: ''\n    }), query);\n    var queries = JSON.parse(state.data);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var gridModel = JSON.parse(this.addOnPersist(['allowGrouping', 'allowPaging', 'pageSettings', 'sortSettings', 'allowPdfExport', 'allowExcelExport', 'aggregates', 'filterSettings', 'groupSettings', 'columns', 'locale', 'searchSettings']));\n    var include = ['field', 'headerText', 'type', 'format', 'visible', 'foreignKeyValue', 'foreignKeyField', 'template', 'index', 'width', 'textAlign', 'headerTextAlign', 'columns'];\n    gridModel.filterSettings.columns = queries.where;\n    gridModel.searchSettings.fields = queries.search && queries.search[0]['fields'] || [];\n    gridModel.sortSettings.columns = queries.sorted;\n    gridModel.columns = this.setHeaderText(gridModel.columns, include);\n    var form = this.createElement('form', {\n      id: 'ExportForm'\n    });\n    form.style.display = 'none';\n    var gridInput = this.createElement('input', {\n      id: 'gridInput',\n      attrs: {\n        name: 'gridModel'\n      }\n    });\n    gridInput.value = JSON.stringify(gridModel);\n    form.method = 'POST';\n    form.action = url;\n    form.appendChild(gridInput);\n    if (headers && headers.headers && Array.isArray(headers.headers)) {\n      headers.headers.forEach(function (header) {\n        Object.keys(header).forEach(function (key) {\n          var value = typeof header[\"\" + key] === 'string' ? header[\"\" + key] : JSON.stringify(header[\"\" + key]);\n          var headerInput = _this_1.createElement('input', {\n            attrs: {\n              name: key,\n              value: value,\n              type: 'hidden'\n            }\n          });\n          form.appendChild(headerInput);\n        });\n      });\n    }\n    document.body.appendChild(form);\n    form.submit();\n    form.remove();\n  };\n  /**\n   * @param {Column[]} columns - Defines array of columns\n   * @param {string[]} include - Defines array of sting\n   * @returns {Column[]} returns array of columns\n   * @hidden\n   */\n  Grid.prototype.setHeaderText = function (columns, include) {\n    for (var i = 0; i < columns.length; i++) {\n      var column = this.getColumnByUid(columns[parseInt(i.toString(), 10)].uid);\n      columns[parseInt(i.toString(), 10)].headerText = column.headerText;\n      if (!isNullOrUndefined(column.template)) {\n        columns[parseInt(i.toString(), 10)].template = 'true';\n      }\n      if (columns[parseInt(i.toString(), 10)].format) {\n        columns[parseInt(i.toString(), 10)].format = getNumberFormat(this.getFormat(columns[parseInt(i.toString(), 10)].format), columns[parseInt(i.toString(), 10)].type, false, defaultCurrencyCode);\n        if (column.type === 'datetime' || column.type === 'date' || column.type === 'time') {\n          columns[parseInt(i.toString(), 10)].format = columns[parseInt(i.toString(), 10)].format.toString().replace('AM/PM', 'tt');\n        }\n      }\n      if (columns[parseInt(i.toString(), 10)].columns) {\n        this.setHeaderText(columns[parseInt(i.toString(), 10)].columns, include);\n      }\n      var keys = Object.keys(columns[parseInt(i.toString(), 10)]);\n      for (var j = 0; j < keys.length; j++) {\n        if (include.indexOf(keys[parseInt(j.toString(), 10)]) < 0) {\n          delete columns[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n        }\n      }\n    }\n    return columns;\n  };\n  Grid.prototype.getFormat = function (format) {\n    return typeof format === 'object' ? !isNullOrUndefined(format.format) ? format.format : format.skeleton : format;\n  };\n  /**\n   * @hidden\n   * @returns {boolean} returns the isCollapseStateEnabled\n   */\n  Grid.prototype.isCollapseStateEnabled = function () {\n    var isExpanded = 'isExpanded';\n    return this[\"\" + isExpanded] === false;\n  };\n  /**\n   * @param {number} key - Defines the primary key value.\n   * @param {Object} rowData - Defines the rowData\n   * @returns {void}\n   */\n  Grid.prototype.updateRowValue = function (key, rowData) {\n    var args = {\n      requestType: 'save',\n      data: rowData\n    };\n    this.showSpinner();\n    this.notify(events.updateData, args);\n    this.refresh();\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.setForeignKeyData = function () {\n    this.dataBind();\n    var colpending = this.getDataModule().getForeignKeyDataState();\n    if (colpending.isPending) {\n      this.getDataModule().setForeignKeyDataState({});\n      colpending.resolver();\n    } else {\n      this.getDataModule().setForeignKeyDataState({\n        isDataChanged: false\n      });\n      if (this.contentModule || this.headerModule) {\n        this.renderModule.render();\n      }\n    }\n  };\n  /**\n   * @param {string} field - specifies the field\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.resetFilterDlgPosition = function (field) {\n    var header = this.getColumnHeaderByField(field);\n    if (header) {\n      var target = header.querySelector('.e-filtermenudiv');\n      var filterDlg = this.element.querySelector('.e-filter-popup');\n      if (target) {\n        var gClient = this.element.getBoundingClientRect();\n        var fClient = target.getBoundingClientRect();\n        if (filterDlg) {\n          if (filterDlg.offsetWidth + fClient.right > gClient.right) {\n            filterDlg.style.left = (fClient.right - filterDlg.offsetWidth - gClient.left).toString() + 'px';\n          } else {\n            filterDlg.style.left = (fClient.right - gClient.left).toString() + 'px';\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @param {any} callBack - specifies the callBack method\n   * @returns {void}\n   * @hidden\n   */\n  // eslint-disable-next-line\n  Grid.prototype.renderTemplates = function (callBack) {\n    var isReactChild = this.parentDetails && this.parentDetails.parentInstObj && this.parentDetails.parentInstObj.isReact;\n    var isReactPrintGrid = this.printGridParent && this.printGridParent.isReact;\n    if ((isReactChild || isReactPrintGrid) && this['portals']) {\n      var parentInstObj = isReactPrintGrid ? this.printGridParent : this.parentDetails.parentInstObj;\n      parentInstObj['portals'] = parentInstObj['portals'].concat(this['portals']);\n      parentInstObj.renderTemplates(callBack);\n      this['portals'] = undefined;\n    } else {\n      var portals = 'portals';\n      this.notify('reactTemplateRender', this[\"\" + portals]);\n      this.renderReactTemplates(callBack);\n    }\n  };\n  /**\n   * Apply the changes to the Grid without refreshing the rows.\n   *\n   * @param  {BatchChanges} changes - Defines changes to be updated.\n   * @returns {void}\n   */\n  Grid.prototype.batchUpdate = function (changes) {\n    this.processRowChanges(changes);\n  };\n  /**\n   * Apply the changes to the Grid in one batch after 50ms without refreshing the rows.\n   *\n   * @param  {BatchChanges} changes - Defines changes to be updated.\n   * @returns {void}\n   */\n  Grid.prototype.batchAsyncUpdate = function (changes) {\n    this.processBulkRowChanges(changes);\n  };\n  Grid.prototype.processBulkRowChanges = function (changes) {\n    var _this_1 = this;\n    if (!this.dataToBeUpdated) {\n      this.dataToBeUpdated = Object.assign({\n        addedRecords: [],\n        changedRecords: [],\n        deletedRecords: []\n      }, changes);\n      setTimeout(function () {\n        _this_1.processRowChanges(_this_1.dataToBeUpdated);\n        _this_1.dataToBeUpdated = null;\n      }, this.asyncTimeOut);\n    } else {\n      var loopstring = [literals.addedRecords, literals.changedRecords, literals.deletedRecords];\n      var keyField = this.getPrimaryKeyFieldNames()[0];\n      for (var i = 0; i < loopstring.length; i++) {\n        if (changes[loopstring[parseInt(i.toString(), 10)]]) {\n          compareChanges(this, changes, loopstring[parseInt(i.toString(), 10)], keyField);\n        }\n      }\n    }\n  };\n  Grid.prototype.processRowChanges = function (changes) {\n    var _this_1 = this;\n    var keyField = this.getPrimaryKeyFieldNames()[0];\n    changes = Object.assign({\n      addedRecords: [],\n      changedRecords: [],\n      deletedRecords: []\n    }, changes);\n    var promise = this.getDataModule().saveChanges(changes, keyField, {}, this.getDataModule().generateQuery().requiresCount());\n    if (this.getDataModule().isRemote()) {\n      promise.then(function () {\n        _this_1.setNewData();\n      });\n    } else {\n      this.setNewData();\n    }\n  };\n  Grid.prototype.setNewData = function () {\n    var _this_1 = this;\n    var oldValues = JSON.parse(JSON.stringify(this.getCurrentViewRecords()));\n    var getData = this.getDataModule().getData({}, this.getDataModule().generateQuery().requiresCount());\n    getData.then(function (e) {\n      _this_1.bulkRefresh(e.result, oldValues, e.count);\n    });\n  };\n  Grid.prototype.deleteRowElement = function (row) {\n    var tr = this.getRowElementByUID(row.uid);\n    remove(tr);\n  };\n  Grid.prototype.bulkRefresh = function (result, oldValues, count) {\n    var _this_1 = this;\n    var rowObj = this.getRowsObject();\n    var keyField = this.getPrimaryKeyFieldNames()[0];\n    var _loop_5 = function (i) {\n      if (!result.filter(function (e) {\n        return e[\"\" + keyField] === rowObj[parseInt(i.toString(), 10)].data[\"\" + keyField];\n      }).length) {\n        this_5.deleteRowElement(rowObj[parseInt(i.toString(), 10)]);\n        rowObj.splice(i, 1);\n        i--;\n      }\n      out_i_1 = i;\n    };\n    var this_5 = this,\n      out_i_1;\n    for (var i = 0; i < rowObj.length; i++) {\n      _loop_5(i);\n      i = out_i_1;\n    }\n    var _loop_6 = function (i) {\n      var isRowExist;\n      oldValues.filter(function (e) {\n        if (e[\"\" + keyField] === result[parseInt(i.toString(), 10)][\"\" + keyField]) {\n          if (e !== result[parseInt(i.toString(), 10)]) {\n            _this_1.setRowData(result[parseInt(i.toString(), 10)][\"\" + keyField], result[parseInt(i.toString(), 10)]);\n          }\n          isRowExist = true;\n        }\n      });\n      if (!isRowExist) {\n        this_6.renderRowElement(result[parseInt(i.toString(), 10)], i);\n      }\n    };\n    var this_6 = this;\n    for (var i = 0; i < result.length; i++) {\n      _loop_6(i);\n    }\n    this.currentViewData = result;\n    var rows = [].slice.call(this.getContentTable().getElementsByClassName(literals.row));\n    resetRowIndex(this, this.getRowsObject(), rows);\n    setRowElements(this);\n    if (this.allowPaging) {\n      this.notify(events.inBoundModelChanged, {\n        module: 'pager',\n        properties: {\n          totalRecordsCount: count\n        }\n      });\n    }\n  };\n  Grid.prototype.renderRowElement = function (data, index) {\n    var row = new RowRenderer(this.serviceLocator, null, this);\n    var model = new RowModelGenerator(this);\n    var modelData = model.generateRows([data]);\n    var tr = row.render(modelData[0], this.getColumns());\n    this.addRowObject(modelData[0], index);\n    var tbody = this.getContentTable().querySelector(literals.tbody);\n    if (tbody.querySelector('.e-emptyrow')) {\n      var emptyRow = tbody.querySelector('.e-emptyrow');\n      emptyRow.parentNode.removeChild(emptyRow);\n      if (this.frozenRows && this.element.querySelector('.e-frozenrow-empty')) {\n        this.element.querySelector('.e-frozenrow-empty').classList.remove('e-frozenrow-empty');\n      }\n    }\n    if (this.frozenRows && index < this.frozenRows) {\n      tbody = this.getHeaderContent().querySelector(literals.tbody);\n    } else {\n      tbody = this.getContent().querySelector(literals.tbody);\n    }\n    tbody = this.getContent().querySelector(literals.tbody);\n    tbody.appendChild(tr);\n  };\n  Grid.prototype.addRowObject = function (row, index) {\n    this.getRowsObject().splice(index, 1, row);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.updateVisibleExpandCollapseRows = function () {\n    var rows = this.getRowsObject();\n    for (var i = 0, len = rows.length; i < len; i++) {\n      if ((rows[parseInt(i.toString(), 10)].isDataRow || rows[parseInt(i.toString(), 10)].isAggregateRow) && this.getRowElementByUID(rows[parseInt(i.toString(), 10)].uid) && this.getRowElementByUID(rows[parseInt(i.toString(), 10)].uid).style.display === 'none') {\n        rows[parseInt(i.toString(), 10)].visible = false;\n      } else {\n        rows[parseInt(i.toString(), 10)].visible = true;\n      }\n    }\n  };\n  /**\n   * Method to sanitize any suspected untrusted strings and scripts before rendering them.\n   *\n   * @param {string} value - Specifies the html value to sanitize\n   * @returns {string} Returns the sanitized html string\n   * @hidden\n   */\n  Grid.prototype.sanitize = function (value) {\n    if (this.enableHtmlSanitizer) {\n      return SanitizeHtmlHelper.sanitize(value);\n    }\n    return value;\n  };\n  /**\n   * @param {string | number} height - specifies the height\n   * @returns {number | string} - specifies the height number\n   * @hidden\n   */\n  Grid.prototype.getHeight = function (height) {\n    if (!Number.isInteger(height) && height.indexOf('%') !== -1) {\n      height = parseInt(height, 10) / 100 * this.element.clientHeight;\n    } else if (!Number.isInteger(height) && this.height !== 'auto') {\n      height = parseInt(height, 10);\n    } else {\n      height = this.height;\n    }\n    return height;\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen right content\n    */\n  Grid.prototype.getFrozenRightContent = function () {\n    return this.contentModule.getPanel();\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen right header\n    */\n  Grid.prototype.getFrozenRightHeader = function () {\n    return this.headerModule.getPanel();\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns movable header tbody\n    */\n  Grid.prototype.getMovableHeaderTbody = function () {\n    return this.getHeaderContent().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns movable content tbody\n    */\n  Grid.prototype.getMovableContentTbody = function () {\n    return this.getContent().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen header tbody\n    */\n  Grid.prototype.getFrozenHeaderTbody = function () {\n    return this.getHeaderContent().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen left content tbody\n    */\n  Grid.prototype.getFrozenLeftContentTbody = function () {\n    return this.getContent().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen right header tbody\n    */\n  Grid.prototype.getFrozenRightHeaderTbody = function () {\n    return this.getHeaderContent().querySelector(literals.tbody);\n  };\n  /**\n   * @returns {Element} returns frozen right content tbody\n    * @hidden\n   */\n  Grid.prototype.getFrozenRightContentTbody = function () {\n    return this.getContent().querySelector(literals.tbody);\n  };\n  /**\n   * @param {boolean} isCustom - Defines custom filter dialog open\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.showResponsiveCustomFilter = function (isCustom) {\n    if (this.filterModule) {\n      this.filterModule.showCustomFilter(isCustom || this.rowRenderingMode === 'Vertical');\n    }\n  };\n  /**\n   * @param {boolean} isCustom - Defines custom sort dialog open\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.showResponsiveCustomSort = function (isCustom) {\n    if (this.sortModule) {\n      this.sortModule.showCustomSort(isCustom || this.rowRenderingMode === 'Vertical');\n    }\n  };\n  /**\n   * @param {boolean} isCustom - Defines custom column chooser dialog open\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.showResponsiveCustomColumnChooser = function (isCustom) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.showCustomColumnChooser(isCustom || this.rowRenderingMode === 'Vertical');\n    }\n  };\n  /**\n   * To manually show the vertical row mode filter dialog\n   *\n   * @returns {void}\n   */\n  Grid.prototype.showAdaptiveFilterDialog = function () {\n    if (this.enableAdaptiveUI) {\n      this.showResponsiveCustomFilter(true);\n    }\n  };\n  /**\n   * To manually show the vertical row sort filter dialog\n   *\n   * @returns {void}\n   */\n  Grid.prototype.showAdaptiveSortDialog = function () {\n    if (this.enableAdaptiveUI) {\n      this.showResponsiveCustomSort(true);\n    }\n  };\n  /**\n   * @param {boolean} isColVirtualization - Defines column virtualization\n   * @returns {Column[]} returns array of column models\n   * @hidden\n   */\n  Grid.prototype.getCurrentVisibleColumns = function (isColVirtualization) {\n    var cols = [];\n    var gridCols = isColVirtualization ? this.getColumns() : this.columnModel;\n    for (var _i = 0, gridCols_1 = gridCols; _i < gridCols_1.length; _i++) {\n      var col = gridCols_1[_i];\n      if (col.visible) {\n        cols.push(col);\n      }\n    }\n    return cols;\n  };\n  Grid.prototype.enableInfiniteAggrgate = function () {\n    if (this.enableInfiniteScrolling && this.groupSettings.columns.length && !this.groupSettings.disablePageWiseAggregates && !this.groupSettings.enableLazyLoading) {\n      this.setProperties({\n        groupSettings: {\n          disablePageWiseAggregates: true\n        }\n      }, true);\n    }\n  };\n  var Grid_1;\n  __decorate([Property([])], Grid.prototype, \"currentViewData\", void 0);\n  __decorate([Property()], Grid.prototype, \"parentDetails\", void 0);\n  __decorate([Property()], Grid.prototype, \"showHider\", void 0);\n  __decorate([Property([])], Grid.prototype, \"columns\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"enableAltRow\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"enableHover\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableAutoFill\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"allowKeyboard\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableStickyHeader\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableHtmlSanitizer\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowTextWrap\", void 0);\n  __decorate([Complex({}, TextWrapSettings)], Grid.prototype, \"textWrapSettings\", void 0);\n  __decorate([Complex({}, ResizeSettings)], Grid.prototype, \"resizeSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowPaging\", void 0);\n  __decorate([Complex({}, PageSettings)], Grid.prototype, \"pageSettings\", void 0);\n  __decorate([Complex({}, LoadingIndicator)], Grid.prototype, \"loadingIndicator\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"enableVirtualMaskRow\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableVirtualization\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableColumnVirtualization\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableInfiniteScrolling\", void 0);\n  __decorate([Complex({}, SearchSettings)], Grid.prototype, \"searchSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowSorting\", void 0);\n  __decorate([Property('Ellipsis')], Grid.prototype, \"clipMode\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"allowMultiSorting\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowExcelExport\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowPdfExport\", void 0);\n  __decorate([Complex({}, SortSettings)], Grid.prototype, \"sortSettings\", void 0);\n  __decorate([Complex({}, InfiniteScrollSettings)], Grid.prototype, \"infiniteScrollSettings\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"allowSelection\", void 0);\n  __decorate([Property(-1)], Grid.prototype, \"selectedRowIndex\", void 0);\n  __decorate([Complex({}, SelectionSettings)], Grid.prototype, \"selectionSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowFiltering\", void 0);\n  __decorate([Property('Horizontal')], Grid.prototype, \"rowRenderingMode\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableAdaptiveUI\", void 0);\n  __decorate([Property('Both')], Grid.prototype, \"adaptiveUIMode\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowReordering\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowResizing\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n  __decorate([Complex({}, RowDropSettings)], Grid.prototype, \"rowDropSettings\", void 0);\n  __decorate([Complex({}, FilterSettings)], Grid.prototype, \"filterSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowGrouping\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableImmutableMode\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"showColumnMenu\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"autoFit\", void 0);\n  __decorate([Complex({}, GroupSettings)], Grid.prototype, \"groupSettings\", void 0);\n  __decorate([Complex({}, EditSettings)], Grid.prototype, \"editSettings\", void 0);\n  __decorate([Collection([], AggregateRow)], Grid.prototype, \"aggregates\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"showColumnChooser\", void 0);\n  __decorate([Complex({}, ColumnChooserSettings)], Grid.prototype, \"columnChooserSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableHeaderFocus\", void 0);\n  __decorate([Property('auto')], Grid.prototype, \"height\", void 0);\n  __decorate([Property('auto')], Grid.prototype, \"width\", void 0);\n  __decorate([Property('Default')], Grid.prototype, \"gridLines\", void 0);\n  __decorate([Property()], Grid.prototype, \"rowTemplate\", void 0);\n  __decorate([Property()], Grid.prototype, \"emptyRecordTemplate\", void 0);\n  __decorate([Property()], Grid.prototype, \"detailTemplate\", void 0);\n  __decorate([Property()], Grid.prototype, \"childGrid\", void 0);\n  __decorate([Property()], Grid.prototype, \"queryString\", void 0);\n  __decorate([Property('AllPages')], Grid.prototype, \"printMode\", void 0);\n  __decorate([Property('Expanded')], Grid.prototype, \"hierarchyPrintMode\", void 0);\n  __decorate([Property([])], Grid.prototype, \"dataSource\", void 0);\n  __decorate([Property(null)], Grid.prototype, \"rowHeight\", void 0);\n  __decorate([Property()], Grid.prototype, \"query\", void 0);\n  __decorate([Property('USD')], Grid.prototype, \"currencyCode\", void 0);\n  __decorate([Property()], Grid.prototype, \"exportGrids\", void 0);\n  __decorate([Property()], Grid.prototype, \"toolbar\", void 0);\n  __decorate([Property()], Grid.prototype, \"contextMenuItems\", void 0);\n  __decorate([Property()], Grid.prototype, \"columnMenuItems\", void 0);\n  __decorate([Property()], Grid.prototype, \"toolbarTemplate\", void 0);\n  __decorate([Property()], Grid.prototype, \"pagerTemplate\", void 0);\n  __decorate([Property(0)], Grid.prototype, \"frozenRows\", void 0);\n  __decorate([Property(0)], Grid.prototype, \"frozenColumns\", void 0);\n  __decorate([Property('')], Grid.prototype, \"cssClass\", void 0);\n  __decorate([Property('All')], Grid.prototype, \"columnQueryMode\", void 0);\n  __decorate([Property({})], Grid.prototype, \"currentAction\", void 0);\n  __decorate([Property('')], Grid.prototype, \"ej2StatePersistenceVersion\", void 0);\n  __decorate([Event()], Grid.prototype, \"created\", void 0);\n  __decorate([Event()], Grid.prototype, \"destroyed\", void 0);\n  __decorate([Event()], Grid.prototype, \"load\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDataBound\", void 0);\n  __decorate([Event()], Grid.prototype, \"queryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"headerCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"actionBegin\", void 0);\n  __decorate([Event()], Grid.prototype, \"actionComplete\", void 0);\n  __decorate([Event()], Grid.prototype, \"actionFailure\", void 0);\n  __decorate([Event()], Grid.prototype, \"dataBound\", void 0);\n  __decorate([Event()], Grid.prototype, \"recordDoubleClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"recordClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowSelecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowSelected\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDeselecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDeselected\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellSelecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellSelected\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellDeselecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellDeselected\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnSelecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnSelected\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDeselecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDeselected\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDragStart\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDrag\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDrop\", void 0);\n  __decorate([Event()], Grid.prototype, \"printComplete\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforePrint\", void 0);\n  __decorate([Event()], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"pdfAggregateQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"excelAggregateQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"exportDetailDataBound\", void 0);\n  __decorate([Event()], Grid.prototype, \"exportDetailTemplate\", void 0);\n  __decorate([Event()], Grid.prototype, \"excelQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeExcelExport\", void 0);\n  __decorate([Event()], Grid.prototype, \"excelExportComplete\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforePdfExport\", void 0);\n  __decorate([Event()], Grid.prototype, \"pdfExportComplete\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDragStartHelper\", void 0);\n  __decorate([Event()], Grid.prototype, \"detailDataBound\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDragStart\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDrag\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDrop\", void 0);\n  __decorate([Event()], Grid.prototype, \"toolbarClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeOpenAdaptiveDialog\", void 0);\n  __decorate([Event()], Grid.prototype, \"batchAdd\", void 0);\n  __decorate([Event()], Grid.prototype, \"batchDelete\", void 0);\n  __decorate([Event()], Grid.prototype, \"batchCancel\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeBatchAdd\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeBatchDelete\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeBatchSave\", void 0);\n  __decorate([Event()], Grid.prototype, \"beginEdit\", void 0);\n  __decorate([Event()], Grid.prototype, \"commandClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellEdit\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellSave\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellSaved\", void 0);\n  __decorate([Event()], Grid.prototype, \"resizeStart\", void 0);\n  __decorate([Event()], Grid.prototype, \"resizing\", void 0);\n  __decorate([Event()], Grid.prototype, \"resizeStop\", void 0);\n  __decorate([Event()], Grid.prototype, \"keyPressed\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeDataBound\", void 0);\n  __decorate([Event()], Grid.prototype, \"contextMenuOpen\", void 0);\n  __decorate([Event()], Grid.prototype, \"contextMenuClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnMenuOpen\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnMenuClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"checkBoxChange\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeCopy\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforePaste\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeAutoFill\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDataStateChange\", void 0);\n  __decorate([Event()], Grid.prototype, \"dataStateChange\", void 0);\n  __decorate([Event()], Grid.prototype, \"dataSourceChanged\", void 0);\n  __decorate([Event()], Grid.prototype, \"exportGroupCaption\", void 0);\n  __decorate([Event()], Grid.prototype, \"lazyLoadGroupExpand\", void 0);\n  __decorate([Event()], Grid.prototype, \"lazyLoadGroupCollapse\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeDetailTemplateDetach\", void 0);\n  Grid = Grid_1 = __decorate([NotifyPropertyChanges], Grid);\n  return Grid;\n}(Component);\nexport { Grid };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","isNullOrUndefined","setValue","getValue","defaultCurrencyCode","updateCSSText","Component","ChildProperty","Browser","closest","extend","addClass","removeClass","append","remove","classList","setStyleAttribute","Property","Collection","Complex","Event","NotifyPropertyChanges","L10n","EventHandler","KeyboardEvents","DataManager","DataUtil","UrlAdaptor","createSpinner","hideSpinner","showSpinner","Tooltip","iterateArrayOrObject","prepareColumns","parentsUntil","wrap","templateCompiler","isGroupAdaptive","refreshForeignData","getScrollBarWidth","getRowHeight","setColumnIndex","Global","ispercentageWidth","getNumberFormat","getTransformValues","setRowElements","resetRowIndex","compareChanges","getCellByColAndRowIndex","performComplexDataOperation","events","Render","Column","RenderType","RowRenderer","CellRenderer","CellRendererFactory","ServiceLocator","ValueFormatter","RendererFactory","ColumnWidthService","AriaService","FocusStrategy","PageSettings","ColumnChooserSettings","Selection","Search","ShowHide","Scroll","Print","AggregateRow","Clipboard","Logger","RowModelGenerator","SanitizeHtmlHelper","literals","HeaderCellRenderer","SortDescriptor","_super","apply","SortSettings","Predicate","InfiniteScrollSettings","FilterSettings","SelectionSettings","SearchSettings","RowDropSettings","TextWrapSettings","ResizeSettings","GroupSettings","EditSettings","LoadingIndicator","Grid","options","element","_this_1","call","isPreventScrollEvent","inViewIndexes","keyA","frozenRightCount","freezeColumnRefresh","rightcount","frozenLeftCount","leftcount","tablesCount","movableCount","movablecount","fixedcount","fixedCount","visibleFrozenLeft","visibleFrozenFixed","isPreparedFrozenColumns","visibleFrozenRight","visibleMovable","frozenLeftColumns","frozenRightColumns","movableColumns","fixedColumns","stackedLeft","stackedRight","stackedFixed","stackedMovable","stackedarrayLeft","stackedarrayRight","stackedarrayFixed","stackedarrayMovable","media","autoFitColumnsResize","tableIndex","componentRefresh","refresh","isChangeDataSourceCall","mergedColumns","isVirtualAdaptive","requireTemplateRef","vRows","vcRows","vGroupOffsets","rowUid","translateX","isManualRefresh","isAutoFitColumns","enableDeepCompare","totalDataRecordsCount","disableSelectedRecords","partialSelectedRecords","isSpan","islazyloadRequest","isAddNewRow","addNewRowFocus","selectVirtualRowOnAdd","lockcolPositionCount","prevPageMoving","pageTemplateChange","isAutoGen","isAutoGenerateColumns","pageRequireRefresh","mediaBindInstance","commandDelIndex","undefined","preventAutoFit","asyncTimeOut","isExportGrid","isWidgetsDestroyed","enableLogger","needsID","Grid_1","Inject","mergePersistGridData","getPersistData","keyEntity","ignoreOnPersist","pageSettings","filterSettings","groupSettings","searchSettings","sortSettings","columns","selectedRowIndex","scrollPosition","currentObject","parseInt","toString","_i","_a","val","temp","template","settings","assign","enableVirtualization","enablePersistence","contentModule","getPageFromTop","top","block","setProperties","captionTemplateRef","captionTemplate","isAngularCaptionTemplate","isAngular","pagerTemplate","persistData","addOnPersist","requiredModules","setFrozenCount","enableInfiniteAggrgate","modules","isDestroyed","allowFiltering","push","member","args","serviceLocator","name","allowExcelExport","allowPdfExport","allowSorting","sortedColumns","allowPaging","allowSelection","selectionSettings","resizeCheck","allowReordering","allowRowDragAndDrop","allowGrouping","aggregates","isDetail","toolbar","toolbarTemplate","enableColumnVirtualization","getFrozenColumns","frozenRows","isCommandColumn","editSettings","allowAdding","allowDeleting","allowEditing","extendRequiredModules","enableInfiniteScrolling","enableLazyLoading","contextMenuItems","showColumnMenu","showColumnChooser","isForeignKeyEnabled","autoFitColumns","getColumns","filter","autoFit","columnModel","columnMenu","columnMenuItems","contextMenu","allowResizing","preRender","initProperties","initializeServices","isInitial","mediaCol","isInitialLoad","allowServerDataBinding","ignoreCollectionWatch","mergeCells","isEdit","checkAllRows","isCheckBoxSelection","isPersistSelection","filterOperators","contains","endsWith","equal","greaterThan","greaterThanOrEqual","lessThan","lessThanOrEqual","notEqual","startsWith","wildCard","isNull","notNull","like","defaultLocale","EmptyRecord","True","False","InvalidFilterMessage","GroupDropArea","UnGroup","UnGroupButton","GroupDisable","FilterbarTitle","EmptyDataSourceError","Add","Edit","Cancel","Update","Delete","Pdfexport","Excelexport","Wordexport","Csvexport","Columnchooser","Save","Item","Items","EditOperationAlert","DeleteOperationAlert","SaveButton","OKButton","CancelButton","EditFormTitle","AddFormTitle","BatchSaveConfirm","BatchSaveLostChanges","ConfirmDelete","CancelEdit","ChooseColumns","ColumnMenu","SearchColumns","Matchs","FilterButton","FilterTitle","FilterIcon","ClearButton","StartsWith","NotStartsWith","Like","EndsWith","NotEndsWith","Contains","NotContains","IsNull","NotNull","IsEmpty","IsNotEmpty","Equal","NotEqual","LessThan","LessThanOrEqual","GreaterThan","GreaterThanOrEqual","In","NotIn","ChooseDate","EnterValue","Copy","Group","Ungroup","GroupButton","UnGroupAria","GroupSeperator","UnGroupIcon","GroupedSortIcon","GroupedDrag","GroupCaption","CheckBoxLabel","SelectAllCheckbox","SelectRow","autoFitAll","AutoFitAll","AutoFit","Export","FirstPage","LastPage","PreviousPage","NextPage","SortAscending","SortDescending","EditRecord","DeleteRecord","FilterMenu","SelectAll","AddCurrentSelection","Blanks","FilterTrue","FilterFalse","NoResult","ClearFilter","Clear","NumberFilter","TextFilter","DateFilter","DateTimeFilter","MatchCase","Between","CustomFilter","CustomFilterPlaceHolder","CustomFilterDatePlaceHolder","AND","OR","ShowRowsWhere","ToolbarMenuDialogARIA","FilterMenuDialogARIA","ExcelFilterDialogARIA","CheckBoxFilterDialogARIA","DialogEditARIA","ColumnMenuDialogARIA","CustomFilterDialogARIA","SortAtoZ","SortZtoA","SortByOldest","SortByNewest","SortSmallestToLargest","SortLargestToSmallest","Sort","SortIcon","FilterDescription","SortDescription","ColumnMenuDescription","GroupDescription","ColumnHeader","TemplateCell","CommandColumnAria","DialogEdit","ClipBoard","AscendingText","DescendingText","NoneText","Expanded","Collapsed","keyConfigs","downArrow","upArrow","rightArrow","leftArrow","shiftDown","shiftUp","shiftRight","shiftLeft","home","end","escape","ctrlHome","ctrlEnd","pageUp","pageDown","ctrlAltPageUp","ctrlAltPageDown","altPageUp","altPageDown","altDownArrow","altUpArrow","ctrlDownArrow","ctrlUpArrow","ctrlPlusA","ctrlPlusP","insert","delete","f2","enter","ctrlEnter","shiftEnter","tab","shiftTab","space","ctrlPlusC","ctrlShiftPlusH","ctrlSpace","ctrlLeftArrow","ctrlRightArrow","render","log","ariaService","setOptions","role","cssClass","createElement","renderModule","searchModule","scrollModule","notify","initialLoad","enableQueryString","pageValue","URL","window","location","href","searchParams","get","indexOf","currentPageValue","currentPage","getDataModule","dataManager","dataSource","offline","url","result","aggregateModule","j","column","type","isReact","trigger","load","updateColumnModel","columnsPrepared","getMediaColumns","isFrozenGrid","setInitialFrozenColumnIndex","checkLockColumns","processModel","gridRender","wireEvents","addListener","updateDefaultCursor","updateStackedFilter","loadingIndicator","indicatorType","initialEnd","refreshMaskRow","refreshing","initialFrozenColumnIndex","index","showMaskRow","axisDirection","dialogElement","headerModule","gridHeader","getHeaderContent","firstChild","gridContent","getContent","gridFooter","getFooterContent","dialogHolder","querySelector","maskRowCount","Math","floor","getBoundingClientRect","height","maskTemplate","getShimmerTemplate","innerHTML","style","width","maskSpan","slice","querySelectorAll","add","enableRtl","paddingRight","paddingLeft","overflowY","contentHeight","maskTableHeight","pageSize","innerHeight","contentRowCount","ceil","rowRenderingMode","headerMaskTable","createEmptyMaskTable","contentMaskTable","maskRowContentScroll","content","createMaskTable","getContentMaskColumns","gridFooterContent","footerContentMaskTable","footerContent","translateMaskRow","maskElement","rowCount","table","className","tbody","row","cell","appendChild","cloneNode","parentElement","header","footer","gridContentScrollHeight","scrollHeight","maskTable","removeAttribute","transform","setAttribute","maskColgroup","createMaskRow","frzTd","left","valueX","right","thead","rows","maskTHead","childNodes","maskTBody","rowCountElement","currentViewData","pagerModule","pagerObj","totalPages","altRow","childGrid","altNumber","rowsQuery","addEditRow","addEditRowIndex","splice","applyMaskRow","addEditMaskRow","tfoot","maskTFoot","headerContent","position","insertBefore","minScrollTop","scrollTop","rowHeight","maskRow","maskCells","maskCell","displayAsCheckBoxCell","refColgroup","refColumns","colgroup","td","colIndex","col","localTD","headerText","field","display","textAlign","toLowerCase","displayAsCheckBox","addShimmerEffect","e","maskTables","removeMaskRow","refreshMaskRowColgroupWidth","colGroup","getElementsByClassName","gcol","getShowHideService","getService","hideAtMedia","visible","pushMediaColumn","updateFrozenColumnsWidth","uid","matchMedia","mediaQueryUpdate","bind","updateMediaColumns","getColumnIndexByUid","columnIndex","some","mediaColumn","matches","invokedFromMedia","showHider","show","hide","refreshMediaCol","checkboxColumn","checkboxMode","enableHover","enableAdaptiveUI","widthService","setWidthToColumns","removeMediaListener","removeListener","eventInitializer","destroy","gridElement","hasGridChild","unwireEvents","destroyDependentModules","destroyTemplate","isVue","toolTipObj","isIE","keyboardModule","focusModule","clipboardModule","printModule","getModuleName","enableBoxSelection","enableAutoFill","cellSelectionMode","destroyAutoFillElements","setCSSClass","oldCSSClass","split","onPropertyChanged","newProp","oldProp","requireRefresh","requireGridRefresh","freezeRefresh","checkCursor","requestType","childGridParent","parentInstance","isEllipsisTooltip","close","properties","keys","updateColumnObject","properties_1","prop","uiUpdate","module","enable","inBoundModelChanged","isCancel","totalRecordsCount","showAddNewRow","refreshHeader","refreshUI","selectionModule","updateAutoFillPosition","rowTemplateFn","rowTemplate","emptyRecordTemplateFn","emptyRecordTemplate","detailTemplateFn","detailTemplate","parentDetails","document","parentID","ej2_instances","childGridObject","currentParent","currentParentInstance","currentChildObject","oldProperties","isQueryInvokedFromData","preventAdjustColumns","restoreAdjustColumns","extendedPropertyChange","modelChanged","maintainSelection","updateRTL","dataBind","removePadding","setPadding","toolbarModule","getToolbar","contextMenuModule","getContextMenu","columnMenuModule","getColumnMenu","showFilterBarOperator","rtlUpdated","resizeModule","updateResizeLines","updateGridLines","refreshToolbarItems","allowTextWrap","applyTextWrap","removeTextWrap","freezeRender","case","isModeChg","requestPendingState","getState","pageSizes","isRemote","isPending","isAllPage","count","json","isArray","clearSelection","getPrototypeOf","deepWatch","pKeyField","getPrimaryKeyFieldNames","props","setRowData","gResult","names","group","setState","resolver","isDataChanged","dataSourceModified","beforeRefreshOnDataChange","scrollRefresh","action","isSelectedRowIndexUpdating","selectRow","setWidthToTable","setFullScreenDialog","enableVerticalRendering","rowModeChange","addStickyListener","enableStickyHeader","fn_1","off","contentReady","on","muteOnChange","filterModule","refreshFilter","getTablesCount","headerCells","stdHdrCell","cols","isRecursion","len","updateLockableColumns","getFrozenLeftCount","getFrozenLeftColumnsCount","getFrozenMode","frozenName","frozenCount","frozenColumns","lockColumn","leftrightColumnWidth","getFrozenLeftColumns","getFrozenRightColumns","isRefresh","inview","map","v","vLen","getVisibleColumns","movable","isLeftRightFrozen","freeze","isFrozen","concat","getStackedHeaderColumnByHeaderText","stackedHeader","individualColumn","stackedColumn","getColumnIndexesInView","getQuery","query","getLocaleConstants","setColumnIndexesInView","indexes","getCurrentVisibleColumns","getPanel","setGridHeaderContent","setPanel","getContentTable","getTable","setGridContentTable","setTable","setGridContent","getHeaderTable","setGridHeaderTable","footerElement","getFooterContentTable","getPager","gridPager","setGridPager","getRowByIndex","lazyLoadRender","getMovableRowByIndex","getFrozenRowByIndex","getRows","getRowElements","getFrozenRightRowByIndex","getRowInfo","ele","rowCell","row_1","rowObj","getRowObjectFromUID","getAttribute","rowIndex","ariaRowIndex","rowData","data","cellIndex","ariaColIndex","row_2","isNaN","getIndentCount","rowsObject","cells","getMovableRows","getFrozenRightRows","getDataRows","getAllDataRows","includeAdd","children","shift","pop","hdrTbody","freezeRows","addMovableRows","dataRows","generateDataRows","fRows","mrows","includAdd","dRows","isCollapseStateEnabled","getMovableDataRows","getAllMovableDataRows","getFrozenDataRows","getAllFrozenDataRows","getFrozenRightDataRows","getAllFrozenRightDataRows","setCellValue","value","rowIdx","rowuID","pkName","fieldIdx","getColumnIndexByField","getColumnByField","rowObjects","selectedRow","tr","sanitize","getCellFromIndex","Idx","isRowDragable","sRow","refreshTD","refreshFooterRenderer","groupAggregates","queryCellInfo","focus","refreshReactColumnTemplateByUid","columnUid","renderTemplates","clearTemplate","isChildGrid","refreshReactTemplateTD","indent","childIndent","isChildRow","rowsObj","gridObj","isDataRow","isTemplate","cellRenderer","refreshGroupCaptionFooterTemplate","isDataCell","dataUid","refreshAggregateCell","refreshReactHeaderTemplateByUid","getNormalizedColumnIndex","_loop_1","headerCellRenderer","this_1","findIndex","getColumnHeaderByField","setSort","direction","filterElement","selectRowEle","changes","fRowTr","getRowsObject","setFrozenRowData","fTr","rowRenderer","getForeignKeyColumns","getColumnByIndex","getMovableCellFromIndex","getFrozenRightCellFromIndex","getColumnHeaderByIndex","getMovableColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getFrozenLeftColumnHeaderByIndex","rowObject","rows_1","getMovableRowsObject","getFrozenRightRowsObject","getColumnHeaderByUid","item","getColumnByUid","isColumns","getStackedColumns","columns_1","getUidByColumnField","rowDropSettings","targetID","getColumnFieldNames","columnNames","getRowTemplate","getEmptyRecordTemplate","getDetailTemplate","getEditTemplate","editTemplateFn","getEditHeaderTemplate","editHeaderTemplateFn","getEditFooterTemplate","editFooterTemplateFn","getColumnChooserTemplate","columnChooserTemplateFn","getColumnChooserHeaderTemplate","columnChooserHeaderTemplateFn","getColumnChooserFooterTemplate","columnChooserFooterTemplateFn","k","isPrimaryKey","getSelectedRows","selectedRecords","getSelectedRowIndexes","selectedRowIndexes","getSelectedRowCellIndexes","selectedRowCellIndexes","getSelectedRecords","getSelectedColumnsUid","selectedColumnsIndexes","showColumns","showBy","hideColumns","hideBy","getFrozenCount","getFrozenRightColumnsCount","getMovableColumnsCount","isAutoWidth","autoCol_1","difference_1","autoWidth_1","isFrozenAuto","_loop_2","max","minWidth","parseFloat","maxWidth","tWidth_1","gWidth","this_2","isPercentageWidthGrid","refreshSplitFrozenColumn","splitFrozenCount","getVisibleFrozenLeftCount","getVisibleFrozenRightCount","getVisibleMovableCount","getMovableColumns","splitStackedColumns","pushStackedColumns","arr","stackedcol","customAttributes","stockCol","pushallcol","text","text1","isTrue","newColumn","resetStackedColumns","headercol","gridcolumns","tempHead","firstcol","firstColHeaders","join","headerColHeaders","changedProperties","removeBorder","frozenLeftBorderColumns","lastVisibleLeftCol","frozenRightBorderColumns","firstVisibleRightCol","border","isVisibleColumns","getVisibleFrozenColumns","getVisibleFrozenColumnsCount","getVisibleFrozenCount","getFilterUIInfo","visibleFrozenColumns","cnt","goToPage","pageNo","updateExternalMessage","message","sortColumn","columnName","isMultiSort","sortModule","changeDataSource","clearSorting","removeSortColumn","clearGridActions","filterByColumn","fieldName","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","fields","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","rowIndexes","selectCell","selectCellsByRange","startIndex","endIndex","search","searchString","print","deleteRecord","fieldname","editModule","startEdit","endEdit","closeEdit","addRecord","deleteRow","editCell","saveCell","updateCell","updateRow","getBatchChanges","enableToolbarItems","items","isEnable","enableItems","copy","withHeader","recalcIndentWidth","indentWidth","offsetWidth","headerCol","contentCol","perPixel","parentOffset","applyWidth","newWidth","toFixed","columnWidthChanged","resetIndentWidth","tgridWidth","getTableWidth","setMinwidthBycalculation","refreshFrozenScrollbar","textWrapSettings","wrapMode","refreshHandlers","resizeFrozenRowBorder","makeStickyHeader","mode","drawBorders","reorderColumns","fromFName","toFName","reorderModule","reorderColumnByIndex","fromIndex","toIndex","reorderColumnByTargetIndex","reorderRows","fromIndexes","rowDragAndDropModule","refreshDataSource","disableRowDD","headerTable","contentTable","headerRows","disValue","firstElementChild","fieldNames","startRowIndex","endRowIndex","injectedModules","getInjectedModules","resize","find","injectModules","resizeSettings","tableWidth","percentageWidth","unit","widthUnit","defaultIndentWidth","indentWidthUnitFormat","headerIndentCol","contentIndentCol","setProperty","clientWidth","tableWidthUnitFormat","removeProperty","indentWidthUnitFormat_1","forEach","createColumnchooser","x","y","columnChooserModule","renderColumnChooser","register","localeObj","locale","valueFormatterService","gCols","sCols","flag","_loop_3","sLen","isFromGroup","this_3","showGroupedColumn","moduleName","headerTemplate","footerTemplate","columnChooserSettings","parentKeyFieldValue","where","queryString","initForeignColumn","initForeignKeyColumn","test","navigator","userAgent","isSafari","isDevice","adaptiveUIMode","info","newRowPosition","rendererFactory","getRenderer","Header","Content","createGridPopUpElement","createTooltip","dataReady","setWidth","setHeight","popup","attrs","tabIndex","gridLines","opensOn","getTooltipStatus","headerDivTag","htable","createTable","ctable","targetElement","from","child","body","removeChild","mouseMoveHandler","prevElement","relatedTarget","tagName","elemNames","domSetter","disableHtmlEncode","contentDiv","innerElement","innerText","enableHtmlSanitizer","enableHtmlParse","clipMode","scrollHandler","tag","myTableDiv","cssText","mySubDiv","myTable","myTr","mytd","onKeyPressed","mouseClickHandler","focusOutHandler","dblClickHandler","keyPressHandler","allowKeyboard","keyAction","keyActionHandler","eventName","tapEvent","keyDownHandler","headerRefreshed","refreshFrozenPosition","dataBoundFunction","addEventListener","dataBound","keyPressed","removeEventListener","getCurrentViewRecords","records","touches","checkEdit","preventDefault","cancel","recordClick","click","editedRow","addedRow","grid","id","dataRow","recordDoubleClick","dblclick","filterClear","ariaOwns","keyPress","editNextValCell","editFormValidate","isShowAddedRowValidate","persistedData","getLocalData","dataObj","JSON","parse","isProtectedOnChange","keys_1","mergeColumns","storedColumn","storedColumns","_loop_4","localCol","tCol","this_4","commands","commandsTemplate","foreignKeyValue","presskey","altKey","code","stopImmediatePropagation","keyCode","groupCollapse","collapse","currentInfo","elementToFocus","focusContent","addOutline","enterKeyHandler","alertDObj","dialogObj","setInjectedModules","autoCol","obj","refreshColumns","refreshResizePosition","isForeignColumn","accurateHeight","scrollLeft","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","exportGrids","gridIds","exportMultipleExcelGrids","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","exportMultiplePdfGrids","pdfExportModule","_this","currentGridId","currentGridInstance","getElementById","exportPromise","Promise","resolve","then","exportedGridResults","groupColumn","groupModule","groupExpandAll","expandAll","groupCollapseAll","collapseAll","clearGrouping","ungroupColumn","openColumnChooser","detailCollapseAll","detailRowModule","detailExpandAll","clearCellSelection","clearRowSelection","selectCells","rowCellIndexes","selectRowsByRange","isContextMenuOpen","isOpen","ensureModuleInjected","propertyNames","logger","loggerModule","applyBiggerTheme","getPreviousRowData","previousRowData","hideScroll","clientHeight","getRowIndexByPrimaryKey","isDetailRow","isCaptionRow","pKvalue","grabColumnByFieldFromAllCols","isForeignKey","grabColumnByUidFromAllCols","getFilteredRecords","generateQuery","getData","executeLocal","getUserAgent","timer","setTimeout","clearTimeout","doubleTap","getRowUid","prefix","getRowElementByUID","rowEle","cntRows","rows_2","getHiddenColumns","calculatePageSizeByParentHeight","containerHeight","pagesize","nonContentHeight","getNoncontentHeight","showDropArea","getSummaryValues","summaryCol","summaryData","serverExcelExport","headers","isExcel","exportGrid","serverPdfExport","serverCsvExport","state","processQuery","queries","gridModel","include","sorted","setHeaderText","form","gridInput","stringify","method","headerInput","submit","format","getFormat","replace","skeleton","isExpanded","updateRowValue","updateData","setForeignKeyData","colpending","getForeignKeyDataState","setForeignKeyDataState","resetFilterDlgPosition","filterDlg","gClient","fClient","callBack","isReactChild","parentInstObj","isReactPrintGrid","printGridParent","portals","renderReactTemplates","batchUpdate","processRowChanges","batchAsyncUpdate","processBulkRowChanges","dataToBeUpdated","addedRecords","changedRecords","deletedRecords","loopstring","keyField","promise","saveChanges","requiresCount","setNewData","oldValues","bulkRefresh","deleteRowElement","_loop_5","this_5","out_i_1","_loop_6","isRowExist","this_6","renderRowElement","model","modelData","generateRows","addRowObject","emptyRow","parentNode","updateVisibleExpandCollapseRows","isAggregateRow","getHeight","Number","isInteger","getFrozenRightContent","getFrozenRightHeader","getMovableHeaderTbody","getMovableContentTbody","getFrozenHeaderTbody","getFrozenLeftContentTbody","getFrozenRightHeaderTbody","getFrozenRightContentTbody","showResponsiveCustomFilter","isCustom","showCustomFilter","showResponsiveCustomSort","showCustomSort","showResponsiveCustomColumnChooser","showCustomColumnChooser","showAdaptiveFilterDialog","showAdaptiveSortDialog","isColVirtualization","gridCols","gridCols_1","disablePageWiseAggregates"],"sources":["D:/weektable/frontend/node_modules/@syncfusion/ej2-grids/src/grid/base/grid.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isNullOrUndefined, setValue, getValue, defaultCurrencyCode, updateCSSText } from '@syncfusion/ej2-base';\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData, getScrollBarWidth } from './util';\nimport { getRowHeight, setColumnIndex, Global, ispercentageWidth, getNumberFormat, getTransformValues } from './util';\nimport { setRowElements, resetRowIndex, compareChanges, getCellByColAndRowIndex, performComplexDataOperation } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { Column } from '../models/column';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { ColumnChooserSettings } from '../models/column-chooser-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { Logger } from '../actions/logger';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport * as literals from '../base/string-literals';\nimport { HeaderCellRenderer } from '../renderer/header-cell-renderer';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    __decorate([\n        Property(false)\n    ], SortDescriptor.prototype, \"isFromGroup\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property(false)\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"condition\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the infinite scroll behavior of Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n/**\n * Configures the filtering behavior of the Grid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('OnEnter')\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Property(50)\n    ], FilterSettings.prototype, \"itemsCount\", void 0);\n    __decorate([\n        Property('Shimmer')\n    ], FilterSettings.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"showFilterBarOperator\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"allowColumnSelection\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property([])\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property('')\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property(true)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreAccent\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n/**\n * Configures the resize behavior of the Grid.\n */\nvar ResizeSettings = /** @class */ (function (_super) {\n    __extends(ResizeSettings, _super);\n    function ResizeSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], ResizeSettings.prototype, \"mode\", void 0);\n    return ResizeSettings;\n}(ChildProperty));\nexport { ResizeSettings };\n/**\n * Configures the group behavior of the Grid.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showDropArea\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showToggleButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showUngroupButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n    __decorate([\n        Property([])\n    ], GroupSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"captionTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"enableLazyLoading\", void 0);\n    return GroupSettings;\n}(ChildProperty));\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Normal')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property()\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property()\n    ], EditSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], EditSettings.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showAddNewRow\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n/**\n * Configures the Loading Indicator of the Grid.\n */\nvar LoadingIndicator = /** @class */ (function (_super) {\n    __extends(LoadingIndicator, _super);\n    function LoadingIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Spinner')\n    ], LoadingIndicator.prototype, \"indicatorType\", void 0);\n    return LoadingIndicator;\n}(ChildProperty));\nexport { LoadingIndicator };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\nvar Grid = /** @class */ (function (_super) {\n    __extends(Grid, _super);\n    /**\n     * Constructor for creating the component\n     *\n     * @param {GridModel} options - specifies the options\n     * @param {string | HTMLElement} element - specifies the element\n     * @hidden\n     */\n    function Grid(options, element) {\n        var _this_1 = _super.call(this, options, element) || this;\n        _this_1.isPreventScrollEvent = false;\n        _this_1.inViewIndexes = [];\n        _this_1.keyA = false;\n        _this_1.frozenRightCount = 0;\n        _this_1.freezeColumnRefresh = true;\n        _this_1.rightcount = 0;\n        _this_1.frozenLeftCount = 0;\n        _this_1.leftcount = 0;\n        _this_1.tablesCount = 1;\n        _this_1.movableCount = 0;\n        _this_1.movablecount = 0;\n        _this_1.fixedcount = 0;\n        _this_1.fixedCount = 0;\n        _this_1.visibleFrozenLeft = 0;\n        _this_1.visibleFrozenFixed = 0;\n        _this_1.isPreparedFrozenColumns = false;\n        _this_1.visibleFrozenRight = 0;\n        _this_1.visibleMovable = 0;\n        _this_1.frozenLeftColumns = [];\n        _this_1.frozenRightColumns = [];\n        _this_1.movableColumns = [];\n        _this_1.fixedColumns = [];\n        _this_1.stackedLeft = [];\n        _this_1.stackedRight = [];\n        _this_1.stackedFixed = [];\n        _this_1.stackedMovable = [];\n        _this_1.stackedarrayLeft = [];\n        _this_1.stackedarrayRight = [];\n        _this_1.stackedarrayFixed = [];\n        _this_1.stackedarrayMovable = [];\n        _this_1.media = {};\n        _this_1.autoFitColumnsResize = false;\n        /** @hidden */\n        _this_1.tableIndex = 0;\n        _this_1.componentRefresh = Component.prototype.refresh;\n        _this_1.isChangeDataSourceCall = false;\n        _this_1.mergedColumns = false;\n        /** @hidden */\n        _this_1.isVirtualAdaptive = false;\n        /** @hidden */\n        /**\n         * * If `requireTemplateRef` is set to false in the load event, then the template element can't be accessed in grid queryCellInfo, and rowDataBound events.\n         * * By default, React's grid queryCellInfo and rowDataBound events allow access to the template element.\n         * * Avoid accessing the template elements in the grid queryCellInfo and rowDataBound events to improve rendering performance by setting this value as false.\n         *\n         * @default true\n         */\n        _this_1.requireTemplateRef = true;\n        /** @hidden */\n        _this_1.vRows = [];\n        /** @hidden */\n        _this_1.vcRows = [];\n        /** @hidden */\n        _this_1.vGroupOffsets = {};\n        /** @hidden */\n        _this_1.rowUid = 0;\n        /** @hidden */\n        _this_1.translateX = 0;\n        /** @hidden */\n        _this_1.isManualRefresh = false;\n        /** @hidden */\n        _this_1.isAutoFitColumns = false;\n        /** @hidden */\n        _this_1.enableDeepCompare = false;\n        /** @hidden */\n        _this_1.totalDataRecordsCount = 0;\n        /** @hidden */\n        _this_1.disableSelectedRecords = [];\n        /** @hidden */\n        _this_1.partialSelectedRecords = [];\n        /** @hidden */\n        _this_1.isSpan = false;\n        /** @hidden */\n        _this_1.islazyloadRequest = false;\n        /** @hidden */\n        _this_1.isAddNewRow = false;\n        /** @hidden */\n        _this_1.addNewRowFocus = true;\n        /** @hidden */\n        _this_1.selectVirtualRowOnAdd = false;\n        /** @hidden */\n        _this_1.lockcolPositionCount = 0;\n        /** @hidden */\n        _this_1.prevPageMoving = false;\n        /** @hidden */\n        _this_1.pageTemplateChange = false;\n        /** @hidden */\n        _this_1.isAutoGen = false;\n        /** @hidden */\n        _this_1.isAutoGenerateColumns = false;\n        /** @hidden */\n        _this_1.pageRequireRefresh = true;\n        _this_1.mediaBindInstance = {};\n        /** @hidden */\n        _this_1.commandDelIndex = undefined;\n        /** @hidden */\n        _this_1.preventAutoFit = false;\n        /** @hidden */\n        _this_1.asyncTimeOut = 50;\n        /** @hidden */\n        _this_1.isExportGrid = false;\n        /** @hidden */\n        _this_1.isWidgetsDestroyed = false;\n        _this_1.enableLogger = false;\n        _this_1.needsID = true;\n        Grid_1.Inject(Selection);\n        setValue('mergePersistData', _this_1.mergePersistGridData, _this_1);\n        return _this_1;\n    }\n    Grid_1 = Grid;\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} returns the persist data\n     */\n    Grid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n            groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton',\n                'disablePageWiseAggregates', 'hideCaptionCount'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: [], scrollPosition: []\n        };\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[parseInt(i.toString(), 10)]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[parseInt(i.toString(), 10)]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[\"\" + val];\n            }\n        }\n        var temp = this.pageSettings.template;\n        var settings = Object.assign({ template: undefined }, this.pageSettings);\n        if (this.enableVirtualization && this.enablePersistence && this.contentModule &&\n            this.contentModule.getPageFromTop && !isNullOrUndefined(this.scrollPosition) &&\n            !isNullOrUndefined(this.scrollPosition.top)) {\n            settings['properties']['currentPage'] = this.contentModule.getPageFromTop(this.scrollPosition.top, { block: 1 });\n        }\n        this.setProperties({ pageSettings: settings }, true);\n        var captionTemplateRef = this.groupSettings.captionTemplate;\n        var isAngularCaptionTemplate = captionTemplateRef && this.isAngular;\n        if (isAngularCaptionTemplate) {\n            delete this.groupSettings['properties']['captionTemplate'];\n        }\n        this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n        var persistData = this.addOnPersist(keyEntity);\n        settings.template = temp;\n        this.setProperties({ pageSettings: settings }, true);\n        if (isAngularCaptionTemplate) {\n            this.groupSettings.captionTemplate = captionTemplateRef;\n        }\n        return persistData;\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the module Declaration\n     * @hidden\n     */\n    Grid.prototype.requiredModules = function () {\n        this.setFrozenCount();\n        this.enableInfiniteAggrgate();\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (this.allowFiltering) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings, this.serviceLocator],\n                name: 'Filter'\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this, this.serviceLocator],\n                name: 'ExcelExport'\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this],\n                name: 'PdfExport'\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator],\n                name: 'Sort'\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings],\n                name: 'Page'\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this, this.selectionSettings, this.serviceLocator],\n                name: 'Selection'\n            });\n        }\n        if (this.resizeCheck()) {\n            modules.push({\n                member: 'resize',\n                args: [this],\n                name: 'Resize'\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this],\n                name: 'Reorder'\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this],\n                name: 'RowDD'\n            });\n        }\n        if (this.allowGrouping) {\n            modules.push({\n                member: 'group',\n                args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator],\n                name: 'Group'\n            });\n        }\n        if (this.aggregates.length) {\n            modules.push({ member: 'aggregate', args: [this, this.serviceLocator], name: 'Aggregate' });\n        }\n        if (this.isDetail()) {\n            modules.push({\n                member: 'detailRow',\n                args: [this, this.serviceLocator],\n                name: 'DetailRow'\n            });\n        }\n        if (this.toolbar || this.toolbarTemplate) {\n            modules.push({\n                member: 'toolbar',\n                args: [this, this.serviceLocator],\n                name: 'Toolbar'\n            });\n        }\n        if (this.enableVirtualization || this.enableColumnVirtualization) {\n            modules.push({\n                member: 'virtualscroll',\n                args: [this, this.serviceLocator],\n                name: 'VirtualScroll'\n            });\n        }\n        if (this.getFrozenColumns() || this.frozenRows || this.frozenRightCount || this.frozenLeftCount) {\n            modules.push({ member: 'freeze', args: [this, this.serviceLocator], name: 'Freeze' });\n        }\n        if (!isNullOrUndefined(this.columns) && this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this, this.serviceLocator],\n                name: 'CommandColumn'\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this, this.serviceLocator],\n                name: 'Edit'\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    Grid.prototype.extendRequiredModules = function (modules) {\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this, this.serviceLocator],\n                name: 'InfiniteScroll'\n            });\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            modules.push({\n                member: 'lazyLoadGroup',\n                args: [this, this.serviceLocator],\n                name: 'LazyLoadGroup'\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator],\n                name: 'ContextMenu'\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this, this.serviceLocator],\n                name: 'ColumnMenu'\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'columnChooser',\n                args: [this, this.serviceLocator],\n                name: 'ColumnChooser'\n            });\n        }\n        if (!isNullOrUndefined(this.columns) && this.isForeignKeyEnabled(this.columns)) {\n            modules.push({ member: 'foreignKey', args: [this, this.serviceLocator], name: 'ForeignKey' });\n        }\n        if (this.enableLogger) {\n            modules.push({ member: 'logger', args: [this], name: 'Logger' });\n        }\n    };\n    Grid.prototype.resizeCheck = function () {\n        var autoFitColumns = this.getColumns().filter(function (c) { return c.autoFit === true; }).length ? true : false;\n        if (!isNullOrUndefined(this.columnModel) && this.columnModel.length && !(this.columnModel[0] instanceof Column)) {\n            this.columnModel = [];\n        }\n        var columnMenu = this.showColumnMenu && (!this.columnMenuItems || this.columnMenuItems\n            .filter(function (c) { return c === 'AutoFit' || c === 'AutoFitAll'; }).length) ? true : false;\n        var contextMenu = this.contextMenuItems && this.contextMenuItems\n            .filter(function (c) { return c === 'AutoFit' || c === 'AutoFitAll'; }).length ? true : false;\n        return this.allowResizing || this.autoFitColumnsResize || autoFitColumns || columnMenu || contextMenu;\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.preRender = function () {\n        this.serviceLocator = new ServiceLocator;\n        this.initProperties();\n        this.initializeServices();\n    };\n    Grid.prototype.initProperties = function () {\n        this.isInitial = true;\n        this.sortedColumns = [];\n        this.inViewIndexes = [];\n        this.mediaCol = [];\n        this.isInitialLoad = false;\n        this.allowServerDataBinding = false;\n        this.ignoreCollectionWatch = true;\n        this.mergeCells = {};\n        this.isEdit = false;\n        this.checkAllRows = 'None';\n        this.isCheckBoxSelection = false;\n        this.isPersistSelection = false;\n        this.componentRefresh = Component.prototype.refresh;\n        this.freezeColumnRefresh = true;\n        this.filterOperators = {\n            contains: 'contains', endsWith: 'endswith', equal: 'equal', greaterThan: 'greaterthan', greaterThanOrEqual: 'greaterthanorequal',\n            lessThan: 'lessthan', lessThanOrEqual: 'lessthanorequal', notEqual: 'notequal', startsWith: 'startswith', wildCard: 'wildcard',\n            isNull: 'isnull', notNull: 'notnull', like: 'like'\n        };\n        this.defaultLocale = {\n            EmptyRecord: 'No records to display',\n            True: 'true',\n            False: 'false',\n            InvalidFilterMessage: 'Invalid Filter Data',\n            GroupDropArea: 'Drag a column header here to group its column',\n            UnGroup: 'Click here to ungroup',\n            UnGroupButton: 'Click here to ungroup',\n            GroupDisable: 'Grouping is disabled for this column',\n            FilterbarTitle: '\\'s filter bar cell',\n            EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n            // Toolbar Items\n            Add: 'Add',\n            Edit: 'Edit',\n            Cancel: 'Cancel',\n            Update: 'Update',\n            Delete: 'Delete',\n            Print: 'Print',\n            Pdfexport: 'PDF Export',\n            Excelexport: 'Excel Export',\n            Wordexport: 'Word Export',\n            Csvexport: 'CSV Export',\n            Search: 'Search',\n            Columnchooser: 'Columns',\n            Save: 'Save',\n            Item: 'item',\n            Items: 'items',\n            EditOperationAlert: 'No records selected for edit operation',\n            DeleteOperationAlert: 'No records selected for delete operation',\n            SaveButton: 'Save',\n            OKButton: 'OK',\n            CancelButton: 'Cancel',\n            EditFormTitle: 'Details of ',\n            AddFormTitle: 'Add New Record',\n            BatchSaveConfirm: 'Are you sure you want to save changes?',\n            BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n            ConfirmDelete: 'Are you sure you want to Delete Record?',\n            CancelEdit: 'Are you sure you want to Cancel the changes?',\n            ChooseColumns: 'Choose Column',\n            ColumnMenu: 'Column Menu',\n            SearchColumns: 'search columns',\n            Matchs: 'No matches found',\n            FilterButton: 'Filter',\n            FilterTitle: 'Filter',\n            FilterIcon: 'Filter',\n            ClearButton: 'Clear',\n            StartsWith: 'Starts With',\n            NotStartsWith: 'Does Not Start With',\n            Like: 'Like',\n            EndsWith: 'Ends With',\n            NotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            NotContains: 'Does Not Contain',\n            IsNull: 'Null',\n            NotNull: 'Not Null',\n            IsEmpty: 'Empty',\n            IsNotEmpty: 'Not Empty',\n            Equal: 'Equal',\n            NotEqual: 'Not Equal',\n            LessThan: 'Less Than',\n            LessThanOrEqual: 'Less Than Or Equal',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqual: 'Greater Than Or Equal',\n            In: 'In',\n            NotIn: 'Not In',\n            ChooseDate: 'Choose a Date',\n            EnterValue: 'Enter the value',\n            Copy: 'Copy',\n            Group: 'Group by this column',\n            Ungroup: 'Ungroup by this column',\n            GroupButton: 'Group button',\n            UnGroupAria: 'ungroup button',\n            GroupSeperator: 'Separator for the grouped columns',\n            UnGroupIcon: 'ungroup the grouped column ',\n            GroupedSortIcon: 'sort the grouped column ',\n            GroupedDrag: 'Drag the grouped column',\n            GroupCaption: ' is groupcaption cell',\n            CheckBoxLabel: 'checkbox',\n            SelectAllCheckbox: 'Select all checkbox',\n            SelectRow: 'Select row',\n            autoFitAll: 'Autofit all columns',\n            autoFit: 'Autofit this column',\n            AutoFitAll: 'Autofit all columns',\n            AutoFit: 'Autofit this column',\n            Export: 'Export',\n            FirstPage: 'First Page',\n            LastPage: 'Last Page',\n            PreviousPage: 'Previous Page',\n            NextPage: 'Next Page',\n            SortAscending: 'Sort Ascending',\n            SortDescending: 'Sort Descending',\n            EditRecord: 'Edit Record',\n            DeleteRecord: 'Delete Record',\n            FilterMenu: 'Filter',\n            SelectAll: 'Select All',\n            AddCurrentSelection: 'Add current selection to filter',\n            Blanks: 'Blanks',\n            FilterTrue: 'True',\n            FilterFalse: 'False',\n            NoResult: 'No matches found',\n            ClearFilter: 'Clear Filter',\n            Clear: 'Clear',\n            NumberFilter: 'Number Filters',\n            TextFilter: 'Text Filters',\n            DateFilter: 'Date Filters',\n            DateTimeFilter: 'DateTime Filters',\n            MatchCase: 'Match Case',\n            Between: 'Between',\n            CustomFilter: 'Custom Filter',\n            CustomFilterPlaceHolder: 'Enter the value',\n            CustomFilterDatePlaceHolder: 'Choose a date',\n            AND: 'AND',\n            OR: 'OR',\n            ShowRowsWhere: 'Show rows where:',\n            ToolbarMenuDialogARIA: 'Toolbar menu dialog',\n            FilterMenuDialogARIA: 'Filter menu',\n            ExcelFilterDialogARIA: 'Excel filter',\n            CheckBoxFilterDialogARIA: 'Checkbox filter',\n            DialogEditARIA: 'Edit dialog',\n            ColumnMenuDialogARIA: 'Column menu dialog',\n            CustomFilterDialogARIA: 'Customer filter dialog',\n            SortAtoZ: 'Sort A to Z',\n            SortZtoA: 'Sort Z to A',\n            SortByOldest: 'Sort by Oldest',\n            SortByNewest: 'Sort by Newest',\n            SortSmallestToLargest: 'Sort Smallest to Largest',\n            SortLargestToSmallest: 'Sort Largest to Smallest',\n            Sort: 'Sort',\n            SortIcon: 'Sort',\n            FilterDescription: 'Press Alt Down to open filter Menu',\n            SortDescription: 'Press Enter to sort',\n            ColumnMenuDescription: 'Press Alt Down to open Column Menu',\n            GroupDescription: 'Press Ctrl space to group',\n            ColumnHeader: ' column header ',\n            TemplateCell: ' is template cell',\n            CommandColumnAria: 'is Command column column header ',\n            DialogEdit: 'Dialog edit',\n            ClipBoard: 'clipboard',\n            AscendingText: 'Ascending',\n            DescendingText: 'Descending',\n            NoneText: 'None',\n            Expanded: 'Expanded',\n            Collapsed: 'Collapsed'\n        };\n        this.keyConfigs = {\n            downArrow: 'downarrow',\n            upArrow: 'uparrow',\n            rightArrow: 'rightarrow',\n            leftArrow: 'leftarrow',\n            shiftDown: 'shift+downarrow',\n            shiftUp: 'shift+uparrow',\n            shiftRight: 'shift+rightarrow',\n            shiftLeft: 'shift+leftarrow',\n            home: 'home',\n            end: 'end',\n            escape: 'escape',\n            ctrlHome: 'ctrl+home',\n            ctrlEnd: 'ctrl+end',\n            pageUp: 'pageup',\n            pageDown: 'pagedown',\n            ctrlAltPageUp: 'ctrl+alt+pageup',\n            ctrlAltPageDown: 'ctrl+alt+pagedown',\n            altPageUp: 'alt+pageup',\n            altPageDown: 'alt+pagedown',\n            altDownArrow: 'alt+downarrow',\n            altUpArrow: 'alt+uparrow',\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlPlusA: 'ctrl+A',\n            ctrlPlusP: 'ctrl+P',\n            insert: 'insert',\n            delete: 'delete',\n            f2: 'f2',\n            enter: 'enter',\n            ctrlEnter: 'ctrl+enter',\n            shiftEnter: 'shift+enter',\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            space: 'space',\n            ctrlPlusC: 'ctrl+C',\n            ctrlShiftPlusH: 'ctrl+shift+H',\n            ctrlSpace: 'ctrl+space',\n            ctrlLeftArrow: 'ctrl+leftarrow',\n            ctrlRightArrow: 'ctrl+rightarrow'\n        };\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.render = function () {\n        this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n        this.ariaService.setOptions(this.element, { role: 'grid' });\n        createSpinner({ target: this.element, cssClass: this.cssClass ? this.cssClass : null }, this.createElement);\n        this.renderModule = new Render(this, this.serviceLocator);\n        this.searchModule = new Search(this);\n        this.scrollModule = new Scroll(this);\n        this.notify(events.initialLoad, {});\n        if (this.pageSettings.enableQueryString) {\n            var pageValue = new URL(window.location.href).searchParams.get('page');\n            if (!isNullOrUndefined(pageValue) && window.location.href.indexOf('?page=') > 0) {\n                var currentPageValue = parseInt(pageValue, 10);\n                this.setProperties({ pageSettings: { currentPage: currentPageValue } }, true);\n                this.pageSettings.currentPage = currentPageValue;\n            }\n        }\n        if ((this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined)\n            && !(!isNullOrUndefined(this.dataSource) && this.dataSource.result)) {\n            this.isVirtualAdaptive = true;\n        }\n        if (this.aggregateModule && this.aggregates.length) {\n            for (var i = 0; i < this.aggregates.length; i++) {\n                for (var j = 0; j < this.aggregates[parseInt(i.toString(), 10)].columns.length; j++) {\n                    var column = this.aggregates[parseInt(i.toString(), 10)].columns[parseInt(j.toString(), 10)];\n                    if (column['types']) {\n                        column.type = column['types'];\n                    }\n                }\n            }\n        }\n        if (this.isReact) {\n            var args = { requireTemplateRef: this.requireTemplateRef };\n            this.trigger(events.load, args);\n            if (!args.requireTemplateRef) {\n                this.requireTemplateRef = args.requireTemplateRef;\n            }\n        }\n        else {\n            this.trigger(events.load);\n        }\n        prepareColumns(this.columns, this.enableColumnVirtualization, this);\n        if (this.enableColumnVirtualization && this.isChangeDataSourceCall && this.columnModel) {\n            this.columnModel = [];\n            this.updateColumnModel(this.columns);\n        }\n        this.isPreparedFrozenColumns = true;\n        if (this.enablePersistence) {\n            this.notify(events.columnsPrepared, {});\n        }\n        this.getMediaColumns();\n        setColumnIndex(this.columns);\n        if (this.isFrozenGrid() && !this.mergedColumns) {\n            this.setInitialFrozenColumnIndex(this.columns);\n        }\n        this.checkLockColumns(this.columns);\n        this.getColumns();\n        this.processModel();\n        this.gridRender();\n        this.wireEvents();\n        this.addListener();\n        this.updateDefaultCursor();\n        this.updateStackedFilter();\n        if (this.loadingIndicator.indicatorType === 'Spinner') {\n            this.showSpinner();\n        }\n        this.notify(events.initialEnd, {});\n        if (this.loadingIndicator.indicatorType === 'Shimmer') {\n            this.refreshMaskRow();\n        }\n        if (this.refreshing) {\n            this.trigger('created');\n        }\n    };\n    Grid.prototype.setInitialFrozenColumnIndex = function (columns) {\n        for (var i = 0; i < columns.length; i++) {\n            var column = columns[parseInt(i.toString(), 10)];\n            column[\"\" + literals.initialFrozenColumnIndex] = column.index;\n            if (column.columns) {\n                this.setInitialFrozenColumnIndex(column.columns);\n            }\n        }\n    };\n    /**\n     * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showSpinner = function () {\n        if (!this.isExportGrid) {\n            showSpinner(this.element);\n        }\n    };\n    /**\n     * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.hideSpinner = function () {\n        if (!this.isExportGrid) {\n            hideSpinner(this.element);\n        }\n    };\n    Grid.prototype.showMaskRow = function (axisDirection, dialogElement) {\n        if (isNullOrUndefined(this.headerModule) || isNullOrUndefined(this.contentModule)) {\n            return;\n        }\n        var gridHeader = this.getHeaderContent().firstChild;\n        var gridContent = this.getContent().firstChild;\n        var gridFooter = this.getFooterContent();\n        if (dialogElement) {\n            var dialogHolder = dialogElement.querySelector('.e-checkboxlist');\n            var maskRowCount = Math.floor(dialogHolder.getBoundingClientRect().height / this.getRowHeight());\n            var maskTemplate = '<div class=\"e-ftrchk e-mask-ftrchk\">'\n                + '<div class=\"e-checkbox-wrapper\"><input class=\"e-chk-hidden\">'\n                + this.getShimmerTemplate() + this.getShimmerTemplate() + '</div></div>';\n            dialogHolder.innerHTML = '';\n            for (var i = 0; i < maskRowCount; i++) {\n                dialogHolder.innerHTML += maskTemplate;\n                dialogHolder.querySelector('.e-ftrchk.e-mask-ftrchk').style.width = '100%';\n                dialogHolder.querySelector('.e-checkbox-wrapper').style.width = '100%';\n                var maskSpan = [].slice.call(dialogHolder\n                    .querySelectorAll('.e-mask:not(.e-mask-checkbox-filter-intent):not(.e-mask-checkbox-filter-span-intent)'));\n                maskSpan[0].classList.add('e-mask-checkbox-filter-intent');\n                maskSpan[1].classList.add('e-mask-checkbox-filter-span-intent');\n            }\n            return;\n        }\n        if ((!this.enableRtl && !this.getHeaderContent().style.paddingRight)\n            || (this.enableRtl && !this.getHeaderContent().style.paddingLeft)) {\n            gridContent.style.overflowY = 'hidden';\n        }\n        if (!this.isInitialLoad && !this.getColumns().length) {\n            var contentHeight = gridContent.getBoundingClientRect().height;\n            var maskTableHeight = contentHeight === 0 ? this.allowPaging ? this.pageSettings.pageSize * this.getRowHeight()\n                : window.innerHeight : contentHeight;\n            var contentRowCount = Math.ceil(maskTableHeight / this.getRowHeight());\n            if (this.rowRenderingMode !== 'Vertical') {\n                this.headerMaskTable = this.createEmptyMaskTable(gridHeader, 1);\n            }\n            this.contentMaskTable = this.createEmptyMaskTable(gridContent, contentRowCount);\n            return;\n        }\n        this.maskRowContentScroll = (this.enableVirtualization || this.enableColumnVirtualization) && axisDirection ? true : false;\n        if (!this.contentMaskTable) {\n            var content = gridContent;\n            if (this.enableVirtualization || this.enableColumnVirtualization) {\n                content = content.querySelector('.e-virtualtable');\n            }\n            if (!isNullOrUndefined(content.querySelector('tbody'))) {\n                this.contentMaskTable = this.createMaskTable(content, this.getContentMaskColumns(), axisDirection);\n            }\n        }\n        if (!this.headerMaskTable && (this.isFrozenGrid() || (this.enableColumnVirtualization && axisDirection === 'X'))) {\n            var content = gridHeader;\n            if (this.enableColumnVirtualization && axisDirection === 'X') {\n                content = content.querySelector('.e-virtualtable');\n            }\n            this.headerMaskTable = this.createMaskTable(content, this.getContentMaskColumns(), axisDirection);\n        }\n        if (gridFooter && gridFooter.querySelector('.e-summaryrow')) {\n            var gridFooterContent = gridFooter.firstChild;\n            if (!this.footerContentMaskTable) {\n                var footerContent = gridFooterContent;\n                this.footerContentMaskTable = this.createMaskTable(footerContent);\n            }\n        }\n        if (!(this.enableVirtualization && axisDirection)) {\n            EventHandler.add(gridContent, 'scroll', this.translateMaskRow, this);\n        }\n    };\n    Grid.prototype.getContentMaskColumns = function () {\n        return this.getColumns();\n    };\n    Grid.prototype.createEmptyMaskTable = function (maskElement, rowCount) {\n        var table = this.createElement('table', { className: 'e-table e-masked-table' });\n        var tbody = this.createElement('tbody', { className: 'e-masked-tbody' });\n        var row = this.createElement('tr', { className: 'e-masked-row e-row' });\n        row.style.height = this.getRowHeight() + \"px\";\n        var cell = this.createElement('td', { className: 'e-masked-cell e-rowcell' });\n        cell.innerHTML = this.getShimmerTemplate();\n        row.appendChild(cell);\n        for (var i = 0; i < rowCount; i++) {\n            tbody.appendChild(row.cloneNode(true));\n        }\n        table.appendChild(tbody);\n        maskElement.appendChild(table);\n        return table;\n    };\n    Grid.prototype.createMaskTable = function (element, columns, axisDirection) {\n        var parentElement = element;\n        var header = closest(parentElement, '.e-gridheader') ? true : false;\n        var content = closest(parentElement, '.e-gridcontent') ? true : false;\n        var footer = closest(parentElement, '.e-gridfooter') ? true : false;\n        var gridContent = this.getContent().firstChild;\n        var gridContentScrollHeight = gridContent.scrollHeight;\n        var table = parentElement.querySelector('table');\n        var maskTable = table.cloneNode();\n        maskTable.removeAttribute('role');\n        maskTable.removeAttribute('id');\n        updateCSSText(maskTable, \"position: absolute; z-index: 5; width: \" + table.getBoundingClientRect().width + \"px;\");\n        if (header && !(this.enableColumnVirtualization && axisDirection === 'X')) {\n            maskTable.style.transform = 'translate(0px,'\n                + table.querySelector('thead').getBoundingClientRect().height + 'px)';\n        }\n        maskTable.setAttribute('class', 'e-table e-masked-table');\n        var maskColgroup = table.querySelector('colgroup').cloneNode(true);\n        maskColgroup.removeAttribute('id');\n        maskColgroup.setAttribute('class', 'e-masked-colgroup');\n        maskTable.appendChild(maskColgroup);\n        if (header && this.enableColumnVirtualization && axisDirection === 'X') {\n            var row = this.createMaskRow(maskColgroup, columns);\n            if (this.isFrozenGrid()) {\n                var frzTd = [].slice.call(row.querySelectorAll('.e-rowcell'));\n                for (var i = 0; i < frzTd.length; i++) {\n                    if (i < this.frozenLeftCount) {\n                        if (this.frozenLeftCount - 1 === i) {\n                            frzTd[parseInt(i.toString(), 10)].classList.add('e-freezeleftborder');\n                        }\n                        frzTd[parseInt(i.toString(), 10)].classList.add('e-leftfreeze');\n                        frzTd[parseInt(i.toString(), 10)].setAttribute('aria-colindex', (i + 1).toString());\n                        frzTd[parseInt(i.toString(), 10)].style.left = (columns[parseInt(i.toString(), 10)].valueX -\n                            this.translateX) + 'px';\n                    }\n                    else if ((frzTd.length - this.frozenRightCount) <= i && columns[parseInt(i.toString(), 10)]) {\n                        if ((frzTd.length - this.frozenRightCount) === i) {\n                            frzTd[parseInt(i.toString(), 10)].classList.add('e-freezerightborder');\n                        }\n                        frzTd[parseInt(i.toString(), 10)].classList.add('e-rightfreeze');\n                        frzTd[parseInt(i.toString(), 10)].setAttribute('aria-colindex', (i + 1).toString());\n                        frzTd[parseInt(i.toString(), 10)].style.right = (this.translateX +\n                            columns[parseInt(i.toString(), 10)].valueX) + 'px';\n                    }\n                }\n            }\n            var thead = table.querySelector('thead');\n            var rows = [].slice.call(thead.querySelectorAll('tr'));\n            var maskTHead = thead.cloneNode();\n            maskTHead.removeAttribute('role');\n            maskTHead.setAttribute('class', 'e-masked-thead');\n            var rowCount = rows.length;\n            for (var i = 0; i < rowCount; i++) {\n                maskTHead.appendChild(row.cloneNode(true));\n                maskTHead.childNodes[parseInt(i.toString(), 10)].style\n                    .height = rows[parseInt(i.toString(), 10)].getBoundingClientRect().height + 'px';\n            }\n            maskTable.appendChild(maskTHead);\n        }\n        var maskTBody = table.querySelector('tbody').cloneNode();\n        maskTBody.removeAttribute('role');\n        maskTBody.setAttribute('class', 'e-masked-tbody');\n        var tbody = table.querySelector('tbody');\n        if (content || header) {\n            var rowCountElement = gridContent;\n            var rowCount = Math.ceil(rowCountElement.getBoundingClientRect().height / this.getRowHeight());\n            if (this.allowPaging && this.pageSettings.pageSize !== this.currentViewData.length &&\n                this.pagerModule.pagerObj.totalPages !== this.pageSettings.currentPage) {\n                var row = this.createMaskRow(maskColgroup, columns);\n                var altRow = row.cloneNode(true);\n                altRow.classList.add('e-altrow');\n                for (var i = 0; i < this.pageSettings.pageSize - this.currentViewData.length; i++) {\n                    maskTBody.appendChild((i % 2 === 1) ? altRow.cloneNode(true) : row.cloneNode(true));\n                }\n            }\n            if (tbody.querySelector('.e-emptyrow') || !tbody.childNodes.length || (content && this.childGrid)) {\n                var row = this.createMaskRow(maskColgroup, columns);\n                var altRow = row.cloneNode(true);\n                altRow.classList.add('e-altrow');\n                for (var i = 0; i < rowCount; i++) {\n                    var altNumber = 1;\n                    maskTBody.appendChild((i + altNumber) % 2 === 0 ? altRow.cloneNode(true) : row.cloneNode(true));\n                }\n            }\n            else {\n                var rowsQuery = 'tr:not(.e-hide):not([style*=\"display:none\"]):not([style*=\"display: none\"])';\n                var rows = [].slice.call(tbody.querySelectorAll(rowsQuery));\n                var addEditRow = tbody.querySelector('.e-addedrow, .e-editedrow');\n                var addEditRowIndex = void 0;\n                if (addEditRow) {\n                    addEditRowIndex = rows.indexOf(addEditRow);\n                    if (this.isFrozenGrid() && this.enableColumnVirtualization) {\n                        var frzTd = [].slice.call(rows[addEditRowIndex + 1].querySelectorAll('.e-rowcell'));\n                        for (var i = 0; i < frzTd.length; i++) {\n                            if (i < this.frozenLeftCount) {\n                                frzTd[parseInt(i.toString(), 10)].classList.add('e-leftfreeze');\n                                frzTd[parseInt(i.toString(), 10)].setAttribute('aria-colindex', (i + 1).toString());\n                                frzTd[parseInt(i.toString(), 10)].style.left = (columns[parseInt(i.toString(), 10)].valueX - this.translateX) + 'px';\n                            }\n                            else if ((frzTd.length - this.frozenRightCount) <= i && columns[parseInt(i.toString(), 10)]) {\n                                frzTd[parseInt(i.toString(), 10)].classList.add('e-rightfreeze');\n                                frzTd[parseInt(i.toString(), 10)].setAttribute('aria-colindex', (i + 1).toString());\n                                frzTd[parseInt(i.toString(), 10)].style.right = (this.translateX +\n                                    columns[parseInt(i.toString(), 10)].valueX) + 'px';\n                            }\n                        }\n                    }\n                    if (addEditRow.classList.contains('e-addedrow')) {\n                        rows.splice(addEditRowIndex, 2);\n                    }\n                    else {\n                        rows.splice(addEditRowIndex, 1);\n                    }\n                }\n                rowCount = (this.enableVirtualization || this.enableColumnVirtualization) && axisDirection ? rows.length\n                    : rowCount <= rows.length ? rowCount : rows.length;\n                for (var i = 0; i < rowCount; i++) {\n                    maskTBody.appendChild(this.applyMaskRow(rows[parseInt(i.toString(), 10)].cloneNode(true), rows[parseInt(i.toString(), 10)].getBoundingClientRect().height));\n                }\n                if (addEditRow && addEditRow.classList.contains('e-editedrow') && addEditRowIndex < rowCount) {\n                    var addEditMaskRow = maskTBody.childNodes[parseInt(addEditRowIndex.toString(), 10)];\n                    addEditMaskRow.style.height = this.getRowHeight() + 'px';\n                    addEditMaskRow.classList.add('e-row');\n                    if (addEditRow.classList.contains('e-altrow')) {\n                        addEditMaskRow.classList.add('e-altrow');\n                    }\n                }\n            }\n        }\n        maskTable.appendChild(maskTBody);\n        if (footer) {\n            var tfoot = table.querySelector('tfoot');\n            var maskTFoot = tfoot.cloneNode();\n            maskTFoot.setAttribute('class', 'e-masked-tfoot');\n            var rows = [].slice.call(tfoot.querySelectorAll('tr'));\n            for (var i = 0; i < rows.length; i++) {\n                maskTFoot.appendChild(this.applyMaskRow(rows[parseInt(i.toString(), 10)].cloneNode(true), rows[parseInt(i.toString(), 10)].getBoundingClientRect().height));\n            }\n            maskTable.appendChild(maskTFoot);\n        }\n        if (header && this.isFrozenGrid() && !this.enableColumnVirtualization) {\n            this.getHeaderContent().querySelector('.' + literals.headerContent).style.position = 'relative';\n        }\n        parentElement.insertBefore(maskTable, parentElement.firstChild);\n        if (content && !(this.enableVirtualization && axisDirection)) {\n            var minScrollTop = gridContentScrollHeight - maskTable.getBoundingClientRect().height;\n            minScrollTop = minScrollTop < 0 ? 0 : minScrollTop;\n            var scrollTop = gridContent.scrollTop <= minScrollTop ? gridContent.scrollTop : minScrollTop;\n            if (this.enableVirtualization) {\n                scrollTop -= getTransformValues(closest(parentElement, '.e-virtualtable')).height;\n            }\n            maskTable.style.transform = 'translate(0px,' + scrollTop + 'px)';\n        }\n        return maskTable;\n    };\n    Grid.prototype.applyMaskRow = function (row, rowHeight) {\n        var maskRow = row;\n        maskRow.removeAttribute('role');\n        maskRow.removeAttribute('aria-rowindex');\n        maskRow.removeAttribute('data-uid');\n        maskRow.classList.add('e-masked-row');\n        maskRow.style.height = rowHeight + 'px';\n        var maskCells = [].slice.call(maskRow.childNodes);\n        for (var i = 0; i < maskCells.length; i++) {\n            var maskCell = maskCells[parseInt(i.toString(), 10)];\n            var displayAsCheckBoxCell = maskCell.firstChild && maskCell.firstChild.classList\n                && maskCell.firstChild.classList.contains('e-checkbox-wrapper');\n            maskCell.removeAttribute('role');\n            maskCell.removeAttribute('tabindex');\n            maskCell.removeAttribute('aria-label');\n            if (this.enableColumnVirtualization && maskCell.classList.contains('e-fixedfreeze')) {\n                removeClass([maskCell], ['e-fixedfreeze', 'e-freezeleftborder', 'e-freezerightborder']);\n                addClass([maskCell], ['e-unfreeze']);\n            }\n            maskCell.removeAttribute('aria-colindex');\n            maskCell.removeAttribute('index');\n            maskCell.removeAttribute('ej-mappingname');\n            maskCell.removeAttribute('ej-mappingvalue');\n            maskCell.removeAttribute('e-mappinguid');\n            maskCell.removeAttribute('aria-expanded');\n            maskCell.classList.add('e-masked-cell');\n            maskCell.innerHTML = this.getShimmerTemplate();\n            if (maskCell.classList.contains('e-recordplusexpand') || maskCell.classList.contains('e-recordpluscollapse')) {\n                maskCell.firstChild.classList.add('e-mask-group-intent');\n            }\n            else if (maskCell.classList.contains('e-gridchkbox') || displayAsCheckBoxCell) {\n                maskCell.firstChild.classList.add('e-mask-checkbox-intent');\n            }\n            else if (maskCell.classList.contains('e-rowdragdrop')) {\n                maskCell.firstChild.classList.add('e-mask-drag-intent');\n            }\n            else if (maskCell.classList.contains('e-indentcell')) {\n                maskCell.innerHTML = '';\n            }\n        }\n        return maskRow;\n    };\n    Grid.prototype.createMaskRow = function (refColgroup, refColumns) {\n        var colgroup = refColgroup;\n        var columns = refColumns;\n        var row = this.createElement('tr', { className: 'e-masked-row e-row' });\n        if (this.rowRenderingMode !== 'Vertical') {\n            row.style.height = this.getRowHeight() + 'px';\n        }\n        var td = this.createElement('td', { className: 'e-masked-cell e-rowcell' });\n        for (var i = 0, colIndex = 0; i < colgroup.childNodes.length; i++) {\n            var col = colgroup.childNodes[parseInt(i.toString(), 10)];\n            var localTD = td.cloneNode();\n            localTD.innerHTML = this.getShimmerTemplate();\n            if (!(col.classList.contains('e-group-intent') || col.classList.contains('e-detail-intent')\n                || col.classList.contains('e-drag-intent'))) {\n                if (this.rowRenderingMode === 'Vertical' && columns[parseInt(colIndex.toString(), 10)]) {\n                    localTD.setAttribute('data-cell', columns[parseInt(colIndex.toString(), 10)].headerText ?\n                        columns[parseInt(colIndex.toString(), 10)].headerText : columns[parseInt(colIndex.toString(), 10)].field);\n                }\n                if (col.style.display === 'none') {\n                    localTD.classList.add('e-hide');\n                }\n                else {\n                    localTD.style.textAlign = columns[parseInt(colIndex.toString(), 10)]\n                        && columns[parseInt(colIndex.toString(), 10)].textAlign ?\n                        columns[parseInt(colIndex.toString(), 10)].textAlign.toLowerCase()\n                        : this.enableRtl ? 'right' : 'left';\n                    if (columns[parseInt(colIndex.toString(), 10)] && (columns[parseInt(colIndex.toString(), 10)].type === 'checkbox'\n                        || columns[parseInt(colIndex.toString(), 10)].displayAsCheckBox)) {\n                        localTD.firstChild.classList.add('e-mask-checkbox-intent');\n                    }\n                }\n                colIndex++;\n            }\n            else {\n                if (col.classList.contains('e-group-intent')) {\n                    localTD.firstChild.classList.add('e-mask-group-intent');\n                }\n                else if (col.classList.contains('e-detail-intent')) {\n                    localTD.firstChild.classList.add('e-mask-detail-intent');\n                }\n                else if (col.classList.contains('e-drag-intent')) {\n                    localTD.firstChild.classList.add('e-mask-drag-intent');\n                }\n            }\n            row.appendChild(localTD);\n        }\n        return row;\n    };\n    Grid.prototype.getShimmerTemplate = function () {\n        if (this.maskRowContentScroll) {\n            return '<span class=\"e-mask e-skeleton e-skeleton-text\"></span>';\n        }\n        return '<span class=\"e-mask e-skeleton e-skeleton-text e-shimmer-wave\"></span>';\n    };\n    Grid.prototype.addShimmerEffect = function () {\n        this.maskRowContentScroll = false;\n        var maskSpan = [].slice.call(this.element.querySelectorAll('.e-mask:not(.e-shimmer-wave)'));\n        for (var i = 0; i < maskSpan.length; i++) {\n            if (maskSpan[parseInt(i.toString(), 10)]) {\n                maskSpan[parseInt(i.toString(), 10)].classList.add('e-shimmer-wave');\n            }\n        }\n    };\n    Grid.prototype.translateMaskRow = function (e) {\n        var target = e.target;\n        var maskTables = target.querySelectorAll('.e-masked-table');\n        for (var i = 0; i < maskTables.length; i++) {\n            var maskTable = maskTables[parseInt(i.toString(), 10)];\n            if (maskTable) {\n                var minScrollTop = target.scrollHeight - maskTable.getBoundingClientRect().height;\n                minScrollTop = minScrollTop < 0 ? 0 : minScrollTop;\n                var scrollTop = target.scrollTop <= minScrollTop ? target.scrollTop : minScrollTop;\n                if (this.enableVirtualization) {\n                    scrollTop -= getTransformValues(closest(maskTable, '.e-virtualtable')).height;\n                }\n                maskTable.style.transform = 'translate(0px,' + scrollTop + 'px)';\n            }\n        }\n    };\n    Grid.prototype.removeMaskRow = function () {\n        if (!isNullOrUndefined(this.contentModule)) {\n            var gridContent = this.getContent().firstChild;\n            EventHandler.remove(gridContent, 'scroll', this.translateMaskRow);\n        }\n        if (this.headerMaskTable && this.isFrozenGrid() && !this.enableColumnVirtualization) {\n            this.getHeaderContent().querySelector('.' + literals.headerContent).style.position = '';\n        }\n        var maskTables = [this.headerMaskTable,\n            this.contentMaskTable, this.footerContentMaskTable];\n        for (var i = 0; i < maskTables.length; i++) {\n            var maskTable = maskTables[parseInt(i.toString(), 10)];\n            if (maskTable) {\n                remove(maskTable);\n            }\n        }\n        this.headerMaskTable = null;\n        this.contentMaskTable = null;\n        this.footerContentMaskTable = null;\n    };\n    Grid.prototype.refreshMaskRow = function () {\n        var gridContent = this.getContent().firstChild;\n        if (!this.isInitialLoad && !this.getColumns().length) {\n            return;\n        }\n        if (this.contentMaskTable && gridContent.querySelector('.e-masked-table')) {\n            var content = gridContent;\n            if (this.enableVirtualization) {\n                content = content.querySelector('.e-virtualtable');\n            }\n            this.refreshMaskRowColgroupWidth(content);\n        }\n    };\n    Grid.prototype.refreshMaskRowColgroupWidth = function (content) {\n        var table = content.querySelector('table:not(.e-masked-table)');\n        var colgroup = table.querySelector(literals.colGroup).cloneNode(true);\n        var maskTable = content.querySelector('.e-masked-table');\n        colgroup.removeAttribute('id');\n        colgroup.setAttribute('class', 'e-masked-colgroup');\n        for (var i = 0; i < colgroup.childNodes.length; i++) {\n            colgroup.childNodes[parseInt(i.toString(), 10)].removeAttribute('class');\n        }\n        remove(maskTable.querySelector('.e-masked-colgroup'));\n        maskTable.insertBefore(colgroup, maskTable.firstChild);\n        maskTable.style.width = table.getBoundingClientRect().width + 'px';\n    };\n    Grid.prototype.updateStackedFilter = function () {\n        if (this.allowFiltering && this.filterSettings.type === 'FilterBar' &&\n            this.getHeaderContent().getElementsByClassName('e-stackedheadercell').length) {\n            this.getHeaderContent().classList.add('e-stackedfilter');\n        }\n        else {\n            this.getHeaderContent().classList.remove('e-stackedfilter');\n        }\n    };\n    Grid.prototype.getMediaColumns = function () {\n        if (!this.enableColumnVirtualization) {\n            var gcol = this.getColumns();\n            this.getShowHideService = this.serviceLocator.getService('showHideService');\n            if (!isNullOrUndefined(gcol)) {\n                for (var index = 0; index < gcol.length; index++) {\n                    if (!isNullOrUndefined(gcol[parseInt(index.toString(), 10)].hideAtMedia)\n                        && (isNullOrUndefined(gcol[parseInt(index.toString(), 10)].visible)\n                            || gcol[parseInt(index.toString(), 10)].visible)) {\n                        this.pushMediaColumn(gcol[parseInt(index.toString(), 10)], index);\n                    }\n                }\n            }\n        }\n        this.updateFrozenColumnsWidth();\n    };\n    Grid.prototype.pushMediaColumn = function (col, index) {\n        this.mediaCol.push(col);\n        this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n        this.mediaQueryUpdate(index, this.media[col.uid]);\n        this.mediaBindInstance[parseInt(index.toString(), 10)] = this.mediaQueryUpdate.bind(this, index);\n        this.media[col.uid].addListener(this.mediaBindInstance[parseInt(index.toString(), 10)]);\n    };\n    /**\n     * @param {Column} col - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.updateMediaColumns = function (col) {\n        if (!this.enableColumnVirtualization) {\n            var index = this.getColumnIndexByUid(col.uid);\n            for (var i = 0; i < this.mediaCol.length; i++) {\n                if (col.uid === this.mediaCol[parseInt(i.toString(), 10)].uid) {\n                    this.mediaCol.splice(i, 1);\n                    return;\n                }\n            }\n            this.pushMediaColumn(col, index);\n        }\n    };\n    /**\n     * @param {number} columnIndex - specifies the column index\n     * @param {MediaQueryList} e - specifies the MediaQueryList\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n        var col = this.getColumns()[parseInt(columnIndex.toString(), 10)];\n        if (this.mediaCol.some(function (mediaColumn) { return mediaColumn.uid === col.uid; })) {\n            col.visible = e.matches;\n            if (this.isInitialLoad) {\n                this.invokedFromMedia = true;\n                if (col.visible) {\n                    this.showHider.show(col.headerText, 'headerText');\n                }\n                else {\n                    this.showHider.hide(col.headerText, 'headerText');\n                }\n            }\n        }\n    };\n    Grid.prototype.refreshMediaCol = function () {\n        this.isInitialLoad = true;\n        var footerContent = this.element.querySelector('.' + literals.gridFooter);\n        if (this.aggregates.length && this.element.scrollHeight > parseInt(this.height.toString(), 10) && footerContent) {\n            addClass([footerContent], ['e-footerpadding']);\n        }\n        var checkboxColumn = this.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length === 0 || checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            this.isCheckBoxSelection = false;\n        }\n        if (this.rowRenderingMode === 'Vertical') {\n            if (this.enableHover) {\n                this.setProperties({ enableAdaptiveUI: true, enableHover: false }, true);\n                removeClass([this.element], 'e-gridhover');\n            }\n        }\n        if (this.enableAdaptiveUI && this.scrollModule) {\n            this.scrollModule.refresh();\n        }\n        if (this.isFrozenGrid() && this.isAutoGenerateColumns) {\n            this.widthService.setWidthToColumns();\n            this.isAutoGenerateColumns = false;\n        }\n    };\n    Grid.prototype.removeMediaListener = function () {\n        for (var i = 0; i < this.mediaCol.length; i++) {\n            this.media[this.mediaCol[parseInt(i.toString(), 10)].uid]\n                .removeListener(this.mediaBindInstance[this.mediaCol[parseInt(i.toString(), 10)].index]);\n        }\n    };\n    /**\n     * For internal use only - Initialize the event handler\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.eventInitializer = function () {\n        //eventInitializer\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Grid.prototype.destroy = function () {\n        var gridElement = this.element;\n        if (!gridElement) {\n            return;\n        }\n        var hasGridChild = gridElement.querySelector('.' + literals.gridHeader) &&\n            gridElement.querySelector('.' + literals.gridContent) ? true : false;\n        if (hasGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        this.removeMediaListener();\n        this.notify(events.destroy, {});\n        this.destroyDependentModules();\n        if (this.isReact) {\n            this.destroyTemplate(['template']);\n        }\n        if (this.isVue) {\n            this.destroyTemplate();\n        }\n        if (hasGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        this.toolTipObj.destroy();\n        if (this.isReact && !Browser.isIE) {\n            this.element.innerHTML = '';\n        }\n        var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService',\n            'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider',\n            'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[parseInt(i.toString(), 10)]]) {\n                this[modules[parseInt(i.toString(), 10)]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n    };\n    Grid.prototype.destroyDependentModules = function () {\n        var gridElement = this.element;\n        if (!gridElement || (!gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent))) {\n            return;\n        }\n        this.scrollModule.destroy();\n        this.keyboardModule.destroy();\n        this.focusModule.destroy();\n        this.clipboardModule.destroy();\n        this.printModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Grid.prototype.getModuleName = function () {\n        return 'grid';\n    };\n    Grid.prototype.enableBoxSelection = function () {\n        if (this.enableAutoFill) {\n            this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n            this.element.classList.add('e-afenabled');\n        }\n        else {\n            this.element.classList.remove('e-afenabled');\n            this.notify(events.destroyAutoFillElements, {});\n        }\n    };\n    Grid.prototype.setCSSClass = function (oldCSSClass) {\n        if (this.cssClass) {\n            addClass([this.element], this.cssClass.split(' '));\n        }\n        if (oldCSSClass) {\n            removeClass([this.element], oldCSSClass.split(' '));\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {GridModel} newProp - Defines new properties\n     * @param {GridModel} oldProp - Defines old properties\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        var requireGridRefresh = false;\n        var freezeRefresh = false;\n        var checkCursor;\n        var args = { requestType: 'refresh' };\n        var childGridParent = null;\n        var parentInstance = null;\n        if (this.isDestroyed) {\n            return;\n        }\n        this.log('module_missing');\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n        var properties = Object.keys(newProp);\n        if (properties.indexOf('columns') > -1) {\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n            }\n            this.updateColumnObject();\n            requireGridRefresh = true;\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'allowPaging':\n                    this.notify(events.uiUpdate, { module: 'pager', enable: this.allowPaging });\n                    requireRefresh = true;\n                    if (this.height === '100%') {\n                        this.scrollModule.refresh();\n                    }\n                    break;\n                case 'pageSettings':\n                    if (this.pageTemplateChange) {\n                        this.pageTemplateChange = false;\n                        this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                        break;\n                    }\n                    if (this.pagerModule && this.pagerModule.isCancel) {\n                        this.pagerModule.isCancel = false;\n                        return;\n                    }\n                    this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                    if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize)\n                        && isNullOrUndefined(newProp.pageSettings.totalRecordsCount)\n                        || !isNullOrUndefined(oldProp.pageSettings) &&\n                            ((newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage)\n                                && !this.enableColumnVirtualization && !this.enableVirtualization && this.pageRequireRefresh\n                                && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize)) {\n                        requireRefresh = true;\n                    }\n                    if (!this.pageRequireRefresh) {\n                        this.pageRequireRefresh = true;\n                    }\n                    if (this.pagerModule && this.pagerModule.isCancel) {\n                        this.pagerModule.isCancel = false;\n                    }\n                    break;\n                case 'allowSorting':\n                    this.notify(events.uiUpdate, { module: 'sort', enable: this.allowSorting });\n                    requireRefresh = true;\n                    checkCursor = true;\n                    break;\n                case 'allowFiltering':\n                    this.updateStackedFilter();\n                    this.notify(events.uiUpdate, { module: 'filter', enable: this.allowFiltering });\n                    requireRefresh = true;\n                    if (this.filterSettings.type !== 'FilterBar' || (this.editSettings.showAddNewRow && this.filterSettings.type === 'FilterBar')) {\n                        this.refreshHeader();\n                    }\n                    else {\n                        if (this.height === '100%') {\n                            this.scrollModule.refresh();\n                        }\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.notify(events.uiUpdate, { module: 'scroll', properties: { width: newProp.width, height: newProp.height } });\n                    if (this.allowPaging) {\n                        this.pagerModule.refresh();\n                    }\n                    break;\n                case 'allowReordering':\n                    this.headerModule.refreshUI();\n                    checkCursor = true;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.notify(events.uiUpdate, { module: 'rowDragAndDrop', enable: this.allowRowDragAndDrop });\n                    this.renderModule.refresh();\n                    this.headerModule.refreshUI();\n                    break;\n                case 'allowSelection':\n                    this.notify(events.uiUpdate, { module: 'selection', enable: this.allowSelection });\n                    this.renderModule.refresh();\n                    break;\n                case 'cssClass':\n                    this.setCSSClass(oldProp.cssClass);\n                    break;\n                case 'enableAutoFill':\n                    if (this.selectionModule) {\n                        this.enableBoxSelection();\n                        this.selectionModule.updateAutoFillPosition();\n                    }\n                    break;\n                case 'rowTemplate':\n                    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'emptyRecordTemplate':\n                    this.emptyRecordTemplateFn = templateCompiler(this.emptyRecordTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'detailTemplate':\n                    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'allowGrouping':\n                    this.notify(events.uiUpdate, { module: 'group', enable: this.allowGrouping });\n                    this.headerModule.refreshUI();\n                    requireRefresh = true;\n                    checkCursor = true;\n                    if (this.height === '100%') {\n                        this.scrollModule.refresh();\n                    }\n                    break;\n                case 'enableInfiniteScrolling':\n                case 'childGrid':\n                    requireRefresh = true;\n                    childGridParent = this.parentDetails ? document.querySelector(\"#\" + this.parentDetails.parentID) : null;\n                    parentInstance = childGridParent ? childGridParent.ej2_instances[0] : null;\n                    if (this.childGrid && parentInstance && isNullOrUndefined(parentInstance.childGrid.childGrid)) {\n                        var childGridObject = Object.assign({}, parentInstance.childGrid, { childGrid: newProp.childGrid });\n                        parentInstance.setProperties({ childGrid: childGridObject }, true);\n                        while (!isNullOrUndefined(parentInstance.parentDetails)) {\n                            var currentParent = document.querySelector(\"#\" + parentInstance.parentDetails.parentID);\n                            var currentParentInstance = currentParent ? currentParent.ej2_instances[0] : null;\n                            if (currentParentInstance) {\n                                var currentChildObject = Object.assign({}, currentParentInstance.childGrid);\n                                currentChildObject.childGrid = parentInstance.childGrid;\n                                currentParentInstance.setProperties({ childGrid: currentChildObject }, true);\n                            }\n                            parentInstance = currentParentInstance;\n                        }\n                    }\n                    this.headerModule.refreshUI();\n                    break;\n                case 'toolbar':\n                    this.notify(events.uiUpdate, { module: 'toolbar' });\n                    if (this.height === '100%') {\n                        this.scrollModule.refresh();\n                    }\n                    break;\n                case 'groupSettings':\n                    this.notify(events.inBoundModelChanged, {\n                        module: 'group', properties: newProp.groupSettings,\n                        oldProperties: oldProp.groupSettings\n                    });\n                    break;\n                case 'aggregates':\n                    if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n                        requireRefresh = true;\n                    }\n                    this.notify(events.uiUpdate, { module: 'aggregate', properties: newProp });\n                    if (this.height === '100%') {\n                        this.scrollModule.refresh();\n                    }\n                    break;\n                case 'frozenColumns':\n                case 'frozenRows':\n                case 'enableVirtualization':\n                case 'enableColumnVirtualization':\n                case 'currencyCode':\n                case 'locale':\n                    if (this.isFrozenGrid()) {\n                        this.log('frozen_rows_columns');\n                    }\n                    freezeRefresh = true;\n                    requireGridRefresh = true;\n                    this.addNewRowFocus = true;\n                    break;\n                case 'query':\n                    if (!this.getDataModule().isQueryInvokedFromData) {\n                        requireRefresh = true;\n                    }\n                    this.getDataModule().isQueryInvokedFromData = false;\n                    break;\n                case 'autoFit':\n                    if (this.autoFit) {\n                        this.preventAdjustColumns();\n                    }\n                    else {\n                        this.restoreAdjustColumns();\n                    }\n                    break;\n                default:\n                    this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n            }\n        }\n        if (checkCursor) {\n            this.updateDefaultCursor();\n        }\n        if (requireGridRefresh) {\n            if (freezeRefresh || this.getFrozenColumns() || this.frozenRows\n                || (this.frozenLeftColumns.length || this.frozenRightColumns.length)) {\n                this.freezeRefresh();\n            }\n            else {\n                this.refresh();\n            }\n        }\n        else if (requireRefresh) {\n            this.notify(events.modelChanged, args);\n            requireRefresh = false;\n            this.maintainSelection(newProp.selectedRowIndex);\n        }\n    };\n    Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n        switch (prop) {\n            case 'enableRtl':\n                this.updateRTL();\n                if (this.allowPaging) {\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n                }\n                if (this.height !== 'auto') {\n                    this.scrollModule.removePadding(!newProp.enableRtl);\n                    this.scrollModule.setPadding();\n                }\n                if (this.toolbar && this.toolbarModule) {\n                    this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n                }\n                if (this.contextMenuItems && this.contextMenuModule) {\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n                }\n                if (this.showColumnMenu && this.columnMenuModule && !this.enableAdaptiveUI) {\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n                }\n                if (this.filterSettings.type === 'FilterBar' && this.filterSettings.showFilterBarOperator) {\n                    this.refreshHeader();\n                }\n                this.notify(events.rtlUpdated, {});\n                break;\n            case 'enableAltRow':\n                this.renderModule.refresh();\n                break;\n            case 'allowResizing':\n                if (this.resizeModule) {\n                    this.resizeModule.render();\n                }\n                this.headerModule.refreshUI();\n                this.updateResizeLines();\n                break;\n            case 'rowHeight':\n                if (this.rowHeight) {\n                    addClass([this.element], 'e-grid-min-height');\n                }\n                else {\n                    removeClass([this.element], 'e-grid-min-height');\n                }\n                this.renderModule.refresh();\n                this.headerModule.refreshUI();\n                break;\n            case 'gridLines':\n                this.updateGridLines();\n                break;\n            case 'showColumnMenu':\n                this.headerModule.refreshUI();\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: true });\n                break;\n            case 'columnMenuItems':\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: this.columnMenuItems });\n                break;\n            case 'contextMenuItems':\n                this.notify(events.uiUpdate, { module: 'contextMenu', enable: this.contextMenuItems });\n                break;\n            case 'showColumnChooser':\n                if (this.toolbarModule) {\n                    this.toolbarModule.refreshToolbarItems();\n                }\n                this.notify(events.uiUpdate, { module: 'columnChooser', enable: this.showColumnChooser });\n                break;\n            case 'filterSettings':\n                this.updateStackedFilter();\n                this.notify(events.inBoundModelChanged, { module: 'filter', properties: newProp.filterSettings });\n                break;\n            case 'searchSettings':\n                this.notify(events.inBoundModelChanged, { module: 'search', properties: newProp.searchSettings });\n                break;\n            case 'sortSettings':\n                this.notify(events.inBoundModelChanged, { module: 'sort' });\n                break;\n            case 'selectionSettings':\n                this.notify(events.inBoundModelChanged, { module: 'selection', properties: newProp.selectionSettings });\n                break;\n            case 'editSettings':\n                this.notify(events.inBoundModelChanged, { module: 'edit', properties: newProp.editSettings });\n                break;\n            case 'allowTextWrap':\n            case 'textWrapSettings':\n                if (this.allowTextWrap) {\n                    this.applyTextWrap();\n                }\n                else {\n                    this.removeTextWrap();\n                }\n                this.notify(events.freezeRender, { case: 'textwrap', isModeChg: (prop === 'textWrapSettings') });\n                this.refreshHeader();\n                if (this.height === '100%') {\n                    this.scrollModule.refresh();\n                }\n                break;\n            case 'dataSource':\n                // eslint-disable-next-line no-case-declarations\n                var requestPendingState = this.getDataModule().getState();\n                if (this.allowPaging && this.pageSettings.pageSizes && !this.getDataModule().isRemote()\n                    && !(requestPendingState && requestPendingState.isPending)) {\n                    if (this.pagerModule.pagerObj.isAllPage) {\n                        var count = this.dataSource instanceof DataManager ? this.dataSource.dataSource.json.length :\n                            'result' in this.dataSource ? this.dataSource.count : this.dataSource.length;\n                        var isAllPage = Array.isArray(this.pageSettings.pageSizes) &&\n                            this.pageSettings.pageSizes.indexOf('All') > -1 ? true : this.pageSettings.pageSizes;\n                        if (!isAllPage && this.pageSettings.pageSize !== count) {\n                            this.pagerModule.pagerObj.isAllPage = false;\n                        }\n                        else {\n                            this.setProperties({ pageSettings: { pageSize: count } }, true);\n                            this.pagerModule.pagerObj.setProperties({ pageSize: count }, true);\n                        }\n                    }\n                }\n                if (this.allowSelection && this.isPersistSelection && !(requestPendingState && requestPendingState.isPending)) {\n                    this.clearSelection();\n                }\n                if (!isNullOrUndefined(this.dataSource) && this.dataSource.result) {\n                    this.isVirtualAdaptive = false;\n                }\n                if (Object.getPrototypeOf(newProp).deepWatch) {\n                    var pKeyField = this.getPrimaryKeyFieldNames()[0];\n                    for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n                        this.setRowData(getValue(pKeyField, this.dataSource[props[parseInt(i.toString(), 10)]]), this.dataSource[props[parseInt(i.toString(), 10)]]);\n                    }\n                }\n                else if (requestPendingState.isPending) {\n                    var gResult = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n                    var names = (requestPendingState.group || []);\n                    if (names.length && !this.groupSettings.enableLazyLoading && !(gResult.length && gResult[0].field)) {\n                        for (var i = 0; i < names.length; i++) {\n                            gResult = DataUtil.group(gResult, names[parseInt(i.toString(), 10)], requestPendingState.aggregates\n                                || []);\n                        }\n                    }\n                    this.dataSource = {\n                        result: gResult, count: this.dataSource.count,\n                        aggregates: this.dataSource.aggregates\n                    };\n                    this.getDataModule().setState({});\n                    requestPendingState.resolver(this.dataSource);\n                }\n                else {\n                    if ((!isNullOrUndefined(this.dataSource) && this.dataSource.result\n                        && this.dataSource.count && this.groupSettings.columns.length)) {\n                        var gResult = this.dataSource.result;\n                        var names = this.groupSettings.columns;\n                        if (names.length && !(gResult.length && gResult[0].field)) {\n                            for (var i = 0; i < names.length; i++) {\n                                gResult = DataUtil.group(gResult, names[parseInt(i.toString(), 10)]);\n                            }\n                        }\n                        this.dataSource = {\n                            result: gResult, count: this.dataSource.count\n                        };\n                    }\n                    this.getDataModule().setState({ isDataChanged: false });\n                    this.notify(events.dataSourceModified, {});\n                    if (!requireGridRefresh) {\n                        this.renderModule.refresh();\n                        if (this.isCheckBoxSelection) {\n                            this.notify(events.beforeRefreshOnDataChange, {});\n                        }\n                    }\n                }\n                this.scrollRefresh();\n                break;\n            case 'enableHover':\n                // eslint-disable-next-line no-case-declarations\n                var action = newProp.enableHover ? addClass : removeClass;\n                action([this.element], 'e-gridhover');\n                break;\n            case 'selectedRowIndex':\n                if (!this.isSelectedRowIndexUpdating) {\n                    this.selectRow(newProp.selectedRowIndex);\n                }\n                this.isSelectedRowIndexUpdating = false;\n                break;\n            case 'resizeSettings':\n                this.widthService.setWidthToTable();\n                break;\n            case 'enableAdaptiveUI':\n                this.notify(events.setFullScreenDialog, {});\n                break;\n            case 'rowRenderingMode':\n                this.enableVerticalRendering();\n                this.notify(events.rowModeChange, {});\n                this.refresh();\n                break;\n            case 'enableStickyHeader':\n                this.scrollModule.addStickyListener(newProp.enableStickyHeader);\n                break;\n            case 'allowPdfExport':\n                if (this.toolbarModule) {\n                    this.toolbarModule.refreshToolbarItems();\n                }\n                break;\n            case 'allowExcelExport':\n                if (this.toolbarModule) {\n                    this.toolbarModule.refreshToolbarItems();\n                }\n                break;\n        }\n    };\n    Grid.prototype.maintainSelection = function (index) {\n        var _this_1 = this;\n        if (index !== -1) {\n            var fn_1 = function () {\n                _this_1.selectRow(index);\n                _this_1.off(events.contentReady, fn_1);\n            };\n            this.on(events.contentReady, fn_1, this);\n        }\n    };\n    /**\n     * @param {Object} prop - Defines the property\n     * @param {boolean} muteOnChange - Defines the mute on change\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.setProperties = function (prop, muteOnChange) {\n        _super.prototype.setProperties.call(this, prop, muteOnChange);\n        var filterSettings = 'filterSettings';\n        if (prop[\"\" + filterSettings] && this.filterModule && muteOnChange) {\n            this.filterModule.refreshFilter();\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} - Returns the tables count\n     */\n    Grid.prototype.getTablesCount = function () {\n        return this.tablesCount;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.updateDefaultCursor = function () {\n        var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n        var stdHdrCell = [].slice.call(this.getHeaderContent().getElementsByClassName('e-stackedheadercell'));\n        var cols = this.getColumns();\n        for (var i = 0; i < headerCells.length; i++) {\n            var cell = headerCells[parseInt(i.toString(), 10)];\n            if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n                if (!cols[parseInt(i.toString(), 10)].allowReordering || !cols[parseInt(i.toString(), 10)].allowSorting\n                    || !cols[parseInt(i.toString(), 10)].allowGrouping) {\n                    cell.classList.add('e-defaultcursor');\n                }\n                else {\n                    cell.classList.add('e-mousepointer');\n                }\n            }\n        }\n        for (var count = 0; count < stdHdrCell.length; count++) {\n            if (this.allowReordering) {\n                stdHdrCell[parseInt(count.toString(), 10)].classList.add('e-mousepointer');\n            }\n        }\n    };\n    Grid.prototype.updateColumnModel = function (columns, isRecursion) {\n        for (var i = 0, len = (!isNullOrUndefined(columns) ? columns.length : 0); i < len; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.updateColumnModel(columns[parseInt(i.toString(), 10)].columns, true);\n            }\n            else {\n                this.columnModel.push(columns[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (isNullOrUndefined(isRecursion) || !isRecursion) {\n            this.updateLockableColumns();\n        }\n    };\n    Grid.prototype.getFrozenLeftCount = function () {\n        return this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n    };\n    Grid.prototype.isFrozenGrid = function () {\n        return this.getFrozenColumns() !== 0 || this.frozenLeftColumns.length !== 0 || this.frozenRightColumns.length !== 0 ||\n            this.fixedColumns.length !== 0;\n    };\n    Grid.prototype.getFrozenMode = function () {\n        return this.frozenName;\n    };\n    Grid.prototype.updateLockableColumns = function () {\n        var cols = this.columnModel;\n        var frozenCount = 0;\n        var movableCount = 0;\n        var frozenColumns = this.getFrozenColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[parseInt(i.toString(), 10)].lockColumn) {\n                if (i < frozenColumns) {\n                    cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n                    frozenCount++;\n                }\n                else {\n                    cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n                    movableCount++;\n                }\n            }\n        }\n    };\n    Grid.prototype.checkLockColumns = function (cols) {\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[parseInt(i.toString(), 10)].columns) {\n                this.checkLockColumns(cols[parseInt(i.toString(), 10)].columns);\n            }\n            else if (cols[parseInt(i.toString(), 10)].lockColumn) {\n                this.lockcolPositionCount++;\n            }\n        }\n    };\n    /**\n     * @param {string} position - specifies position\n     * @returns {number} returns the width\n     * @hidden\n     */\n    Grid.prototype.leftrightColumnWidth = function (position) {\n        var cols = position === 'left' ? this.getFrozenLeftColumns() : position === 'right' ? this.getFrozenRightColumns() : [];\n        var width = 0;\n        cols.filter(function (col) {\n            if (col.visible) {\n                width += parseInt(col.width.toString(), 10);\n            }\n        });\n        return width;\n    };\n    /**\n     * Gets the columns from the Grid.\n     *\n     * @param {boolean} isRefresh - Defines the boolean whether to refresh\n     * @returns {Column[]} - returns the column\n     */\n    Grid.prototype.getColumns = function (isRefresh) {\n        var _this_1 = this;\n        var inview = this.inViewIndexes.map(function (v) { return v - _this_1.groupSettings.columns.length; }).filter(function (v) { return v > -1; });\n        var vLen = inview.length;\n        if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n            this.columnModel = [];\n            this.updateColumnModel(this.columns);\n        }\n        var columns = vLen === 0 ? this.columnModel :\n            this.getVisibleColumns().slice(inview[0], inview[vLen - 1] + 1);\n        var left = [];\n        var right = [];\n        var movable = [];\n        var isLeftRightFrozen = this.enableColumnVirtualization && this.isPreparedFrozenColumns && vLen === 0;\n        if (isLeftRightFrozen) {\n            this.frozenRightColumns = [];\n            this.frozenLeftColumns = [];\n        }\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n                left.push(columns[parseInt(i.toString(), 10)]);\n                if (isLeftRightFrozen) {\n                    this.frozenLeftColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n            }\n            else if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n                right.push(columns[parseInt(i.toString(), 10)]);\n                if (isLeftRightFrozen) {\n                    this.frozenRightColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n            }\n            else {\n                movable.push(columns[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (this.enableColumnVirtualization && this.isFrozenGrid()) {\n            if (this.frozenLeftColumns.length) {\n                left = this.frozenLeftColumns;\n            }\n            if (this.frozenRightColumns.length) {\n                right = this.frozenRightColumns;\n            }\n        }\n        return left.concat(movable).concat(right);\n    };\n    /**\n     * @private\n     * @param {string} stackedHeader - Defines the stacked header\n     * @param {Column[]} col - Defines the column\n     * @returns {Column} Returns the Column\n     */\n    Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n        for (var i = 0; i < col.length; i++) {\n            var individualColumn = col[parseInt(i.toString(), 10)];\n            if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n                this.stackedColumn = individualColumn;\n                break;\n            }\n            else if (individualColumn.columns) {\n                this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n            }\n        }\n        return this.stackedColumn;\n    };\n    /**\n     * @private\n     * @returns {number[]} Returns the column indexes\n     */\n    Grid.prototype.getColumnIndexesInView = function () {\n        return this.inViewIndexes;\n    };\n    /**\n     * @private\n     * @returns {Query} - returns the query\n     */\n    Grid.prototype.getQuery = function () {\n        return this.query;\n    };\n    /**\n     * @private\n     * @returns {object} - returns the locale constants\n     */\n    Grid.prototype.getLocaleConstants = function () {\n        return this.defaultLocale;\n    };\n    /**\n     * @param {number[]} indexes - specifies the indexes\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.setColumnIndexesInView = function (indexes) {\n        this.inViewIndexes = indexes;\n    };\n    /**\n     * Gets the visible columns from the Grid.\n     *\n     * @returns {Column[]} returns the column\n     */\n    Grid.prototype.getVisibleColumns = function () {\n        return this.getCurrentVisibleColumns();\n    };\n    /**\n     * Gets the header div of the Grid.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getHeaderContent = function () {\n        return this.headerModule.getPanel();\n    };\n    /**\n     * Sets the header div of the Grid to replace the old header.\n     *\n     * @param  {Element} element - Specifies the Grid header.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setGridHeaderContent = function (element) {\n        this.headerModule.setPanel(element);\n    };\n    /**\n     * Gets the content table of the Grid.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getContentTable = function () {\n        return this.contentModule.getTable();\n    };\n    /**\n     * Sets the content table of the Grid to replace the old content table.\n     *\n     * @param  {Element} element - Specifies the Grid content table.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setGridContentTable = function (element) {\n        this.contentModule.setTable(element);\n    };\n    /**\n     * Gets the content div of the Grid.\n     *\n     * @returns {Element} Returns the element\n     */\n    Grid.prototype.getContent = function () {\n        return this.contentModule.getPanel();\n    };\n    /**\n     * Sets the content div of the Grid to replace the old Grid content.\n     *\n     * @param  {Element} element - Specifies the Grid content.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setGridContent = function (element) {\n        this.contentModule.setPanel(element);\n    };\n    /**\n     * Gets the header table element of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getHeaderTable = function () {\n        return this.headerModule.getTable();\n    };\n    /**\n     * Sets the header table of the Grid to replace the old one.\n     *\n     * @param  {Element} element - Specifies the Grid header table.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setGridHeaderTable = function (element) {\n        this.headerModule.setTable(element);\n    };\n    /**\n     * Gets the footer div of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFooterContent = function () {\n        this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n        return this.footerElement;\n    };\n    /**\n     * Gets the footer table element of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFooterContentTable = function () {\n        this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n        return this.footerElement.firstChild.firstChild;\n    };\n    /**\n     * Gets the pager of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getPager = function () {\n        return this.gridPager; //get element from pager\n    };\n    /**\n     * Sets the pager of the Grid to replace the old pager.\n     *\n     * @param  {Element} element - Specifies the Grid pager.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setGridPager = function (element) {\n        this.gridPager = element;\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getRowByIndex = function (index) {\n        if (this.enableVirtualization && this.groupSettings.enableLazyLoading) {\n            return this.lazyLoadRender.getRowByIndex(index);\n        }\n        else {\n            return this.contentModule.getRowByIndex(index);\n        }\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     *\n     * @returns {Element} returns the element\n\n     */\n    Grid.prototype.getMovableRowByIndex = function (index) {\n        return this.contentModule.getRowByIndex(index);\n    };\n    /**\n     * Gets a frozen tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n\n     */\n    Grid.prototype.getFrozenRowByIndex = function (index) {\n        return this.contentModule.getRowByIndex(index);\n    };\n    /**\n     * Gets all the data rows of the Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getRows = function () {\n        return this.contentModule.getRowElements();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n\n     */\n    Grid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.contentModule.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - specifies the element\n     *\n     * @returns {RowInfo} returns the row info\n     */\n    Grid.prototype.getRowInfo = function (target) {\n        var ele = target;\n        var args = { target: target };\n        if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse')\n            && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand')))) {\n            var cell = closest(ele, '.' + literals.rowCell);\n            if (!cell) {\n                var row_1 = closest(ele, '.' + literals.row);\n                if (!isNullOrUndefined(row_1) && !row_1.classList.contains('e-addedrow')) {\n                    var rowObj = this.getRowObjectFromUID(row_1.getAttribute('data-uid'));\n                    var rowIndex = parseInt(row_1.getAttribute(literals.ariaRowIndex), 10) - 1;\n                    args = { row: row_1, rowData: rowObj.data, rowIndex: rowIndex };\n                }\n                return args;\n            }\n            var cellIndex = parseInt(cell.getAttribute(literals.ariaColIndex), 10) - 1;\n            var row_2 = closest(cell, '.' + literals.row);\n            if (!isNullOrUndefined(cell) && !isNaN(cellIndex) && !isNullOrUndefined(row_2)) {\n                var rowIndex = parseInt(row_2.getAttribute(literals.ariaRowIndex), 10) - 1;\n                var rows = this.contentModule.getRows();\n                var index = cellIndex + this.getIndentCount();\n                var rowsObject = rows.filter(function (r) { return r.uid === row_2.getAttribute('data-uid'); });\n                var rowData = {};\n                var column = void 0;\n                if (Object.keys(rowsObject).length) {\n                    rowData = rowsObject[0].data;\n                    column = rowsObject[0].cells[parseInt(index.toString(), 10)].column;\n                }\n                args = { cell: cell, cellIndex: cellIndex, row: row_2, rowIndex: rowIndex, rowData: rowData, column: column, target: target };\n            }\n        }\n        return args;\n    };\n    /**\n     * Gets the Grid's movable content rows from frozen grid.\n     *\n     * @returns {Element[]} returns the element\n\n     */\n    Grid.prototype.getMovableRows = function () {\n        return this.contentModule.getRowElements();\n    };\n    /**\n     * Gets the Grid's frozen right content rows from frozen grid.\n     *\n     * @returns {Element[]} returns the element\n\n     */\n    Grid.prototype.getFrozenRightRows = function () {\n        return this.contentModule.getRowElements();\n    };\n    /**\n     * Gets all the Grid's data rows.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getDataRows = function () {\n        return this.getAllDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd - specifies includeAdd\n     * @returns {Element[]} returns the element\n     * @hidden\n     */\n    Grid.prototype.getAllDataRows = function (includeAdd) {\n        if (isNullOrUndefined(this.getContentTable().querySelector(literals.tbody))) {\n            return [];\n        }\n        var tbody = this.getContentTable().querySelector(literals.tbody);\n        var rows = [].slice.call(tbody.children);\n        if (this.editSettings.showAddNewRow) {\n            if (rows[0].classList.contains('e-addedrow')) {\n                rows.shift();\n            }\n            else if (rows[rows.length - 1].classList.contains('e-addedrow')) {\n                rows.pop();\n            }\n        }\n        if (this.frozenRows) {\n            var hdrTbody = this.getHeaderTable().querySelector(literals.tbody);\n            var freezeRows = [].slice.call(hdrTbody.children);\n            rows = this.addMovableRows(freezeRows, rows);\n            if (this.editSettings.showAddNewRow && freezeRows[0].classList.contains('e-addedrow')) {\n                freezeRows.shift();\n            }\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * @param {HTMLElement[]} fRows - Defines the frozen Rows\n     * @param {HTMLElement[]} mrows - Defines the movable Rows\n     * @returns {HTMLElement[]} Returns the element\n     * @hidden\n     */\n    Grid.prototype.addMovableRows = function (fRows, mrows) {\n        for (var i = 0, len = mrows.length; i < len; i++) {\n            fRows.push(mrows[parseInt(i.toString(), 10)]);\n        }\n        return fRows;\n    };\n    Grid.prototype.generateDataRows = function (rows, includAdd) {\n        var dRows = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (rows[parseInt(i.toString(), 10)].classList.contains(literals.row)\n                && (!rows[parseInt(i.toString(), 10)].classList.contains('e-hiddenrow') || includAdd)) {\n                if (this.isCollapseStateEnabled()) {\n                    dRows[parseInt(rows[parseInt(i.toString(), 10)].getAttribute('aria-rowindex'), 10) - 1] = rows[parseInt(i.toString(), 10)];\n                }\n                else {\n                    dRows.push(rows[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Gets all the Grid's movable table data rows.\n     *\n     * @returns {Element[]} Returns the element\n\n     */\n    Grid.prototype.getMovableDataRows = function () {\n        return this.getAllMovableDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n\n     * @hidden\n     */\n    Grid.prototype.getAllMovableDataRows = function (includeAdd) {\n        return this.getAllDataRows(includeAdd);\n    };\n    /**\n     * Gets all the Grid's frozen table data rows.\n     *\n     * @returns {Element[]} returns the element\n\n     */\n    Grid.prototype.getFrozenDataRows = function () {\n        return this.getAllFrozenDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n\n     * @hidden\n     */\n    Grid.prototype.getAllFrozenDataRows = function (includeAdd) {\n        return this.getAllDataRows(includeAdd);\n    };\n    /**\n     * Gets all the Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n\n     */\n    Grid.prototype.getFrozenRightDataRows = function () {\n        return this.getAllFrozenRightDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n\n     * @hidden\n     */\n    Grid.prototype.getAllFrozenRightDataRows = function (includeAdd) {\n        return this.getAllDataRows(includeAdd);\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setCellValue = function (key, field, value) {\n        var cells = 'cells';\n        var rowData = 'data';\n        var rowIdx = 'index';\n        var rowuID = 'uid';\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        var cell = new CellRenderer(this, this.serviceLocator);\n        var fieldIdx = this.getColumnIndexByField(field);\n        var col = this.getColumnByField(field);\n        var rowObjects = this.contentModule.getRows();\n        var selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        var tr = selectedRow ? this.element.querySelector('[data-uid=' + selectedRow[\"\" + rowuID] + ']') : null;\n        if (!isNullOrUndefined(tr)) {\n            if (typeof value === 'string') {\n                value = this.sanitize(value);\n            }\n            setValue(field, value, selectedRow[\"\" + rowData]);\n            var td = this.enableVirtualization ? tr.children[parseInt(fieldIdx.toString(), 10)]\n                : this.getCellFromIndex(selectedRow[\"\" + rowIdx], fieldIdx);\n            if (!isNullOrUndefined(td)) {\n                var Idx = 0;\n                if (this.groupSettings.columns.length) {\n                    fieldIdx = fieldIdx + this.groupSettings.columns.length;\n                }\n                if (this.childGrid || this.detailTemplate) {\n                    fieldIdx++;\n                }\n                if (this.isRowDragable()) {\n                    fieldIdx++;\n                }\n                var sRow = selectedRow[\"\" + cells][fieldIdx - Idx];\n                cell.refreshTD(td, sRow, selectedRow[\"\" + rowData], { index: selectedRow[\"\" + rowIdx] });\n                if (this.isReact) {\n                    td = this.enableVirtualization ? tr.children[parseInt(fieldIdx.toString(), 10)]\n                        : this.getCellFromIndex(selectedRow[\"\" + rowIdx], fieldIdx);\n                }\n                if (this.aggregates.length > 0) {\n                    this.notify(events.refreshFooterRenderer, {});\n                    if (this.groupSettings.columns.length > 0) {\n                        this.notify(events.groupAggregates, {});\n                    }\n                }\n                /* tslint:disable:no-string-literal */\n                if (!isNullOrUndefined(selectedRow) && !isNullOrUndefined(selectedRow['changes'])) {\n                    selectedRow['changes'][\"\" + field] = value;\n                }\n                /* tslint:disable:no-string-literal */\n                this.trigger(events.queryCellInfo, {\n                    cell: td, column: col, data: selectedRow[\"\" + rowData]\n                });\n                if (this.isReact && td.getAttribute('tabindex') === '0' && td.classList.contains('e-focused')) {\n                    td.focus();\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @param {boolean} renderTemplates - Defines renderTemplates need to invoke\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshReactColumnTemplateByUid = function (columnUid, renderTemplates) {\n        var _this_1 = this;\n        if (this.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.clearTemplate(['columnTemplate'], undefined, function () {\n                var isChildGrid = _this_1.childGrid && _this_1.element.querySelectorAll('.e-childgrid').length ? true : false;\n                var rows = isChildGrid ? _this_1.getContentTable().querySelectorAll('.e-row') :\n                    _this_1.getDataRows();\n                _this_1.refreshReactTemplateTD(rows, isChildGrid);\n                if (renderTemplates) {\n                    _this_1.renderTemplates();\n                }\n            });\n        }\n    };\n    /**\n     * @param {Element[] | NodeListOf<Element>} rows - Defines the rows\n     * @param {boolean} isChildGrid - Defines whether it is a Hierarchy Grid.\n     * @param {boolean} isFrozen - Defines whether it is a Frozen Grid\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshReactTemplateTD = function (rows, isChildGrid, isFrozen) {\n        var cells = 'cells';\n        var rowIdx = 'index';\n        var indent = this.getIndentCount();\n        var childIndent = 0;\n        var isChildRow = false;\n        for (var j = 0; j < rows.length; j++) {\n            var rowsObj = this.getRowObjectFromUID(rows[parseInt(j.toString(), 10)].getAttribute('data-uid'));\n            if (isChildGrid && !rowsObj && parentsUntil(rows[parseInt(j.toString(), 10)], 'e-childgrid')) {\n                var gridObj = parentsUntil(rows[parseInt(j.toString(), 10)], 'e-childgrid').ej2_instances[0];\n                rowsObj = gridObj.getRowObjectFromUID(rows[parseInt(j.toString(), 10)].getAttribute('data-uid'));\n                childIndent = gridObj.getIndentCount();\n                isChildRow = true;\n            }\n            if (rowsObj && rowsObj.isDataRow && !isNullOrUndefined(rowsObj.index) &&\n                !rows[parseInt(j.toString(), 10)].classList.contains('e-editedrow')) {\n                for (var i = 0; i < rowsObj[\"\" + cells].length; i++) {\n                    var cell = rowsObj[\"\" + cells][parseInt(i.toString(), 10)];\n                    if (cell.isTemplate) {\n                        var cellRenderer = new CellRenderer(this, this.serviceLocator);\n                        var td = isChildGrid ? rows[parseInt(j.toString(), 10)]\n                            .children[cell.index + (isChildRow ? childIndent : indent)] : this.getCellFromIndex(j, isFrozen ? cell.index : i - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj.data, { index: rowsObj[\"\" + rowIdx] });\n                    }\n                }\n            }\n            isChildRow = false;\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshGroupCaptionFooterTemplate = function () {\n        var isChildGrid = this.childGrid && this.element.querySelectorAll('.e-childgrid').length ? true : false;\n        var rows = this.getContentTable().querySelectorAll('.e-groupcaptionrow, .e-groupfooterrow');\n        for (var i = 0; i < rows.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var gridObj = this;\n            var rowsObj = this.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-uid'));\n            if (isChildGrid && !rowsObj && parentsUntil(rows[parseInt(i.toString(), 10)], 'e-childgrid')) {\n                gridObj = parentsUntil(rows[parseInt(i.toString(), 10)], 'e-childgrid').ej2_instances[0];\n                rowsObj = gridObj.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-uid'));\n            }\n            if (rowsObj) {\n                var cells = rowsObj.cells.filter(function (cell) { return cell.isDataCell; });\n                var args = { cells: cells, data: rowsObj.data, dataUid: rowsObj.uid };\n                gridObj.notify(events.refreshAggregateCell, args);\n            }\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshReactHeaderTemplateByUid = function (columnUid) {\n        if (this.isReact) {\n            var cells = 'cells';\n            var rowsObj = this.headerModule.rows;\n            var cellIndex = this.getNormalizedColumnIndex(columnUid);\n            var _loop_1 = function (j) {\n                var cell = rowsObj[parseInt(j.toString(), 10)][\"\" + cells][parseInt(cellIndex.toString(), 10)];\n                if (cell && cell.column.uid === columnUid) {\n                    var headerCellRenderer = new HeaderCellRenderer(this_1, this_1.serviceLocator);\n                    var td = parentsUntil(this_1.element.querySelectorAll('[e-mappinguid=' + columnUid + ']')[0], 'e-templatecell');\n                    headerCellRenderer.refresh(cell, td);\n                    var cols = this_1.sortSettings.columns;\n                    var columnIndex = cols.findIndex(function (col) {\n                        return col.field === cell\n                            .column.field;\n                    });\n                    if (columnIndex !== -1) {\n                        var header = this_1.getColumnHeaderByField(cell.column.field);\n                        this_1.ariaService.setSort(header, (cols[parseInt(columnIndex.toString(), 10)].direction).toLowerCase());\n                        if (cols.length > 1) {\n                            header.querySelector('.e-headercelldiv').insertBefore(this_1.createElement('span', { className: 'e-sortnumber', innerHTML: (columnIndex + 1).toString() }), header.querySelector('.e-headertext'));\n                        }\n                        var filterElement = header.querySelector('.e-sortfilterdiv');\n                        if (cols[parseInt(columnIndex.toString(), 10)].direction === 'Ascending') {\n                            classList(filterElement, ['e-ascending', 'e-icon-ascending'], []);\n                        }\n                        else {\n                            classList(filterElement, ['e-descending', 'e-icon-descending'], []);\n                        }\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < rowsObj.length; j++) {\n                _loop_1(j);\n            }\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {Object} rowData - To update new data for the particular row.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setRowData = function (key, rowData) {\n        var rowuID = 'uid';\n        var rowObjects = this.contentModule.getRows();\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n            rowObjects = rowObjects.filter(function (row) { return row.isDataRow; });\n        }\n        var selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        var selectRowEle = selectedRow ? [].slice.call(this.element.querySelectorAll('[data-uid=' + selectedRow[\"\" + rowuID] + ']')) : undefined;\n        if (!isNullOrUndefined(selectedRow) && selectRowEle.length) {\n            selectedRow.changes = rowData;\n            if (this.frozenRows) {\n                var fRowTr = this.getRowsObject()[selectedRow.index];\n                this.setFrozenRowData(fRowTr, rowData);\n            }\n            else {\n                this.setFrozenRowData(selectedRow, rowData);\n            }\n            if (this.aggregates.length > 0) {\n                this.notify(events.refreshFooterRenderer, {});\n                if (this.groupSettings.columns.length > 0) {\n                    this.notify(events.groupAggregates, {});\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    Grid.prototype.setFrozenRowData = function (fTr, rowData) {\n        var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n        fTr.changes = rowData;\n        refreshForeignData(fTr, this.getForeignKeyColumns(), fTr.changes);\n        rowRenderer.refresh(fTr, this.getColumns(), true);\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     *\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        var col = this.getColumnByIndex(columnIndex);\n        return getCellByColAndRowIndex(this, col, rowIndex, columnIndex);\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     *\n     * @returns {Element} Returns the Element\n\n     */\n    Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n\n     */\n    Grid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     *\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.getHeaderTable().getElementsByClassName('e-headercell')[parseInt(index.toString(), 10)];\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n\n     */\n    Grid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n\n     */\n    Grid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n\n     */\n    Grid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.getColumnHeaderByIndex(index);\n    };\n    /**\n     * @param {string} uid - Defines the uid\n     * @returns {Row<Column>} Returns the row object\n     * @hidden\n     */\n    Grid.prototype.getRowObjectFromUID = function (uid) {\n        var rows = this.contentModule.getRows();\n        var row = this.rowObject(rows, uid);\n        if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n            row = this.rowObject(this.vRows, uid);\n            return row;\n        }\n        return row;\n    };\n    Grid.prototype.rowObject = function (rows, uid) {\n        if (rows) {\n            for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n                var row = rows_1[_i];\n                if (row.uid === uid) {\n                    return row;\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Get an array of row objects.\n     *\n     * @returns {Row<Column>[]} Returns the Row object\n     */\n    Grid.prototype.getRowsObject = function () {\n        return this.contentModule.getRows();\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n\n     */\n    Grid.prototype.getMovableRowsObject = function () {\n        return this.contentModule.getRows();\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n\n     */\n    Grid.prototype.getFrozenRightRowsObject = function () {\n        return this.contentModule.getRows();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getColumnHeaderByField = function (field) {\n        var column = this.getColumnByField(field);\n        return column ? this.getColumnHeaderByUid(column.uid) : undefined;\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getColumnHeaderByUid = function (uid) {\n        var element = this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']');\n        return element ? element.parentElement : undefined;\n    };\n    /**\n     * @hidden\n     * @param {number} index - Defines the index\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByIndex = function (index) {\n        var column;\n        this.getColumns().some(function (col, i) {\n            column = col;\n            return i === index;\n        });\n        return column;\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     *\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     *\n     * @returns {number} Returns the index by field\n     */\n    Grid.prototype.getColumnIndexByField = function (field) {\n        var cols = this.getColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[parseInt(i.toString(), 10)].field === field) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @param  {boolean} isColumns - Defines the all columns.\n     *\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByUid = function (uid, isColumns) {\n        var cols = isColumns ? this.columns : this.getColumns();\n        return iterateArrayOrObject(cols.concat(this.getStackedColumns(this.columns)), function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * @param {Column[]} columns - Defines the columns\n     * @param {Column[]} stackedColumn - Defines the stacked columns\n     * @returns {Column[]} Returns the columns\n     * @hidden\n     */\n    Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n        if (stackedColumn === void 0) { stackedColumn = []; }\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.columns) {\n                stackedColumn.push(column);\n                this.getStackedColumns(column.columns, stackedColumn);\n            }\n        }\n        return stackedColumn;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     *\n     * @returns {number} Returns the column by index\n     */\n    Grid.prototype.getColumnIndexByUid = function (uid) {\n        var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     *\n     * @returns {string} Returns the column by field\n     */\n    Grid.prototype.getUidByColumnField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item) {\n            if (item.field === field) {\n                return item.uid;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets column index by column uid value.\n     *\n     * @private\n     * @param  {string} uid - Specifies the column uid.\n     * @returns {number} Returns the column by field\n     */\n    Grid.prototype.getNormalizedColumnIndex = function (uid) {\n        var index = this.getColumnIndexByUid(uid);\n        return index + this.getIndentCount();\n    };\n    /**\n     * Gets indent cell count.\n     *\n     * @private\n     * @returns {number} Returns the indent count\n     */\n    Grid.prototype.getIndentCount = function () {\n        var index = 0;\n        if (this.allowGrouping) {\n            index += this.groupSettings.columns.length;\n        }\n        if (this.isDetail()) {\n            index++;\n        }\n        if (this.isRowDragable() && isNullOrUndefined(this.rowDropSettings.targetID)) {\n            index++;\n        }\n        /**\n         * TODO: index normalization based on the stacked header, grouping and detailTemplate\n         * and frozen should be handled here\n         */\n        return index;\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} Returns the Field names\n     */\n    Grid.prototype.getColumnFieldNames = function () {\n        var columnNames = [];\n        var column;\n        for (var i = 0, len = this.getColumns().length; i < len; i++) {\n            column = this.getColumns()[parseInt(i.toString(), 10)];\n            if (column.visible) {\n                columnNames.push(column.field);\n            }\n        }\n        return columnNames;\n    };\n    /**\n     * Gets a compiled row template.\n     *\n     * @returns {Function} Returns the row TEmplate\n     * @private\n     */\n    Grid.prototype.getRowTemplate = function () {\n        return this.rowTemplateFn;\n    };\n    /**\n     * Gets a compiled empty Record template.\n     *\n     * @returns {Function} Returns the empty Record template\n     * @private\n     */\n    Grid.prototype.getEmptyRecordTemplate = function () {\n        return this.emptyRecordTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     *\n     * @private\n     * @returns {Function} Returns the Detail template\n     */\n    Grid.prototype.getDetailTemplate = function () {\n        return this.detailTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit template.\n     *\n     * @private\n     * @returns {Function} Returns the Edit template\n     */\n    Grid.prototype.getEditTemplate = function () {\n        return this.editTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit header template.\n     *\n     * @private\n     * @returns {Function} returns template function\n     */\n    Grid.prototype.getEditHeaderTemplate = function () {\n        return this.editHeaderTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit footer template.\n     *\n     * @private\n     * @returns {Function} Returns the Footer template\n     */\n    Grid.prototype.getEditFooterTemplate = function () {\n        return this.editFooterTemplateFn;\n    };\n    /**\n     * Gets a compiled column chooser template.\n     *\n     * @private\n     * @returns {Function} Returns the template\n     */\n    Grid.prototype.getColumnChooserTemplate = function () {\n        return this.columnChooserTemplateFn;\n    };\n    /**\n     * Gets a compiled column chooser header template.\n     *\n     * @private\n     * @returns {Function} returns the header template\n     */\n    Grid.prototype.getColumnChooserHeaderTemplate = function () {\n        return this.columnChooserHeaderTemplateFn;\n    };\n    /**\n     * Gets a compiled column chooser footer template.\n     *\n     * @private\n     * @returns {Function} Returns the Footer template\n     */\n    Grid.prototype.getColumnChooserFooterTemplate = function () {\n        return this.columnChooserFooterTemplateFn;\n    };\n    /**\n     * Get the names of the primary key columns of the Grid.\n     *\n     * @returns {string[]} Returns the field names\n     */\n    Grid.prototype.getPrimaryKeyFieldNames = function () {\n        var keys = [];\n        for (var k = 0; k < this.columnModel.length; k++) {\n            if (this.columnModel[parseInt(k.toString(), 10)].isPrimaryKey) {\n                keys.push(this.columnModel[parseInt(k.toString(), 10)].field);\n            }\n        }\n        return keys;\n    };\n    /**\n     * Refreshes the Grid header and content.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refresh = function () {\n        if (!this.isDestroyed) {\n            this.isManualRefresh = true;\n            this.headerModule.refreshUI();\n            this.updateStackedFilter();\n            this.renderModule.refresh();\n        }\n    };\n    /**\n     * Refreshes the Grid header.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refreshHeader = function () {\n        this.headerModule.refreshUI();\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} Returns the element\n     */\n    Grid.prototype.getSelectedRows = function () {\n        return this.selectionModule ? this.selectionModule.selectedRecords : [];\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} Returns the Selected row indexes\n     */\n    Grid.prototype.getSelectedRowIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {number[]} Returns the Selected row cell indexes\n     */\n    Grid.prototype.getSelectedRowCellIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @returns {Object[]} Returns the selected records\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedRecords = function () {\n        return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n    };\n    /**\n     * Gets the collection of selected columns uid.\n     *\n     * @returns {string[]} Returns the selected column uid\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedColumnsUid = function () {\n        var _this_1 = this;\n        var uid = [];\n        if (this.selectionModule) {\n            this.selectionModule.selectedColumnsIndexes.filter(function (i) { return uid.push(_this_1.getColumns()[parseInt(i.toString(), 10)].uid); });\n        }\n        return uid;\n    };\n    /**\n     * Returns the data module used by the grid.\n     *\n     * Use this to access the current applied queries and data related configuration settings for the grid.\n     *\n     * @returns {Data} The data module currently used by the grid.\n     */\n    Grid.prototype.getDataModule = function () {\n        return this.renderModule.data;\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showColumns = function (keys, showBy) {\n        showBy = showBy ? showBy : 'headerText';\n        this.showHider.show(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.hideColumns = function (keys, hideBy) {\n        hideBy = hideBy ? hideBy : 'headerText';\n        this.showHider.hide(keys, hideBy);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen column\n     */\n    Grid.prototype.getFrozenColumns = function () {\n        return this.frozenColumns + this.getFrozenCount(this.columns, 0, 0);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    Grid.prototype.getFrozenRightColumnsCount = function () {\n        return this.frozenRightCount || this.rightcount;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    Grid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.frozenLeftCount || this.leftcount;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    Grid.prototype.getMovableColumnsCount = function () {\n        return this.movableCount || this.movablecount;\n    };\n    Grid.prototype.updateFrozenColumnsWidth = function () {\n        if (this.isFrozenGrid() && !this.enableColumnVirtualization) {\n            var gcol = this.getColumns();\n            var isAutoWidth = true;\n            var autoCol_1 = 0;\n            var difference_1 = 0;\n            var autoWidth_1 = 0;\n            var isFrozenAuto = gcol.some(function (data) {\n                return (data.freeze === 'Left' || data.freeze === 'Right'\n                    || data.freeze === 'Fixed' || data.isFrozen) && data.width === 'auto';\n            });\n            var _loop_2 = function (i) {\n                var col = gcol[parseInt(i.toString(), 10)];\n                if (isNullOrUndefined(col.width) && (col.freeze === 'Left' || col.freeze === 'Right' || col.freeze === 'Fixed' || col.isFrozen)) {\n                    col.width = Math.max(200, col.minWidth ? parseFloat(col.minWidth.toString()) : 0);\n                    if (!isNullOrUndefined(col.maxWidth) && parseFloat(col.maxWidth.toString()) < col.width) {\n                        col.width = col.maxWidth;\n                    }\n                }\n                if (col.width === 'auto' && isFrozenAuto) {\n                    var tWidth_1 = 0;\n                    if (isAutoWidth) {\n                        gcol.filter(function (cols) {\n                            if (cols.visible) {\n                                if (cols.width === 'auto') {\n                                    autoCol_1++;\n                                }\n                                if (cols.width !== 'auto') {\n                                    var width = !isNullOrUndefined(cols.width) ? parseFloat(cols.width.toString()) :\n                                        Math.max(200, cols.minWidth ? parseFloat(cols.minWidth.toString()) : 0);\n                                    tWidth_1 += width;\n                                }\n                            }\n                        });\n                        var gWidth = this_2.isPercentageWidthGrid() || this_2.width === 'auto' ? this_2.element.getBoundingClientRect().width :\n                            parseFloat(this_2.width.toString());\n                        difference_1 = this_2.height === 'auto' ? gWidth - tWidth_1 : ((gWidth - tWidth_1) - getScrollBarWidth());\n                        if (difference_1 < 0) {\n                            difference_1 = 0;\n                        }\n                        autoWidth_1 = parseFloat((difference_1 / autoCol_1).toString());\n                        gcol.filter(function (col) {\n                            if (col.visible) {\n                                if (col.minWidth && parseFloat(col.minWidth.toString()) > autoWidth_1) {\n                                    difference_1 = difference_1 - parseFloat(col.minWidth.toString());\n                                    autoCol_1--;\n                                }\n                            }\n                        });\n                        isAutoWidth = false;\n                    }\n                    if (col.minWidth && parseFloat(col.minWidth.toString()) > autoWidth_1) {\n                        col.width = parseFloat(col.minWidth.toString());\n                    }\n                    else {\n                        col.width = difference_1 / autoCol_1;\n                    }\n                }\n            };\n            var this_2 = this;\n            for (var i = 0; i < gcol.length; i++) {\n                _loop_2(i);\n            }\n        }\n    };\n    Grid.prototype.refreshSplitFrozenColumn = function () {\n        this.splitFrozenCount(this.columns);\n        this.updateFrozenColumnsWidth();\n        this.isAutoGenerateColumns = true;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.setFrozenCount = function () {\n        this.frozenLeftCount = this.frozenRightCount = this.movableCount = 0;\n        this.visibleFrozenLeft = this.visibleFrozenRight = this.visibleMovable = 0;\n        this.frozenLeftColumns = [];\n        this.frozenRightColumns = [];\n        this.movableColumns = [];\n        this.fixedColumns = [];\n        this.splitFrozenCount(this.columns);\n        this.leftcount = this.frozenLeftCount;\n        this.rightcount = this.frozenRightCount;\n        this.movablecount = this.movableCount;\n        // if (this.frozenColumns && (this.frozenLeftCount || this.frozenRightCount)) {\n        //     this.setProperties({ frozenColumns: 0 }, true);\n        // }\n        if (this.frozenLeftCount && !this.frozenRightCount) {\n            this.frozenName = 'Left';\n        }\n        else if (this.frozenRightCount && !this.frozenLeftCount) {\n            this.frozenName = 'Right';\n        }\n        else if (this.frozenLeftCount && this.frozenRightCount) {\n            this.frozenName = 'Left-Right';\n        }\n        else if (this.frozenColumns || this.frozenRows) {\n            this.frozenName = 'Left';\n        }\n        else {\n            this.frozenName = undefined;\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    Grid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.visibleFrozenLeft;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    Grid.prototype.getVisibleFrozenRightCount = function () {\n        return this.visibleFrozenRight;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    Grid.prototype.getVisibleMovableCount = function () {\n        return this.visibleMovable;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getFrozenRightColumns = function () {\n        return this.frozenRightColumns;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getFrozenLeftColumns = function () {\n        return this.frozenLeftColumns;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getMovableColumns = function () {\n        return this.movableColumns;\n    };\n    Grid.prototype.splitStackedColumns = function (columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.splitStackedColumns(columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleFrozenLeft++;\n                    }\n                    this.leftcount++;\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleFrozenRight++;\n                    }\n                    this.rightcount++;\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleFrozenFixed++;\n                    }\n                    this.fixedcount++;\n                }\n                else {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleMovable++;\n                    }\n                    this.movablecount++;\n                }\n            }\n        }\n    };\n    Grid.prototype.pushStackedColumns = function (columns, index, arr, col, stackedcol) {\n        arr[parseInt(index.toString(), 10)] = { headerText: col.headerText };\n        if (col.textAlign) {\n            arr[parseInt(index.toString(), 10)].textAlign = col.textAlign;\n        }\n        if (col.customAttributes) {\n            arr[parseInt(index.toString(), 10)].customAttributes = col.customAttributes;\n        }\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                index = index + 1;\n                this.pushStackedColumns(columns[parseInt(i.toString(), 10)].columns, index, arr, columns[parseInt(i.toString(), 10)], stackedcol);\n                index = index - 1;\n            }\n            else {\n                var stockCol = [];\n                stockCol = arr.slice().slice(0, index + 1);\n                if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n                    this.stackedLeft.push(stockCol);\n                    this.stackedarrayLeft.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n                    this.stackedRight.push(stockCol);\n                    this.stackedarrayRight.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                    this.stackedFixed.push(stockCol);\n                    this.stackedarrayFixed.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.stackedMovable.push(stockCol);\n                    this.stackedarrayMovable.push(columns[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n    };\n    Grid.prototype.pushallcol = function (text, text1, col, columns, isTrue) {\n        if (col.headerText === text1.headerText) {\n            if (isTrue) {\n                col.columns.push(columns);\n            }\n            else {\n                var newColumn = { headerText: text.headerText, columns: [] };\n                if (text.textAlign) {\n                    newColumn.textAlign = text.textAlign;\n                }\n                if (text.customAttributes) {\n                    newColumn.customAttributes = text.customAttributes;\n                }\n                col.columns.push(newColumn);\n            }\n        }\n        else {\n            if (col.columns && col.columns.length) {\n                for (var i = 0; i < col.columns.length; i++) {\n                    this.pushallcol(text, text1, col.columns[parseInt(i.toString(), 10)], columns, isTrue);\n                }\n            }\n        }\n    };\n    Grid.prototype.resetStackedColumns = function (headercol, gridcolumns, freeze) {\n        var col = {};\n        var tempHead = [];\n        for (var i = 1; i <= headercol.length; i++) {\n            var firstcol = headercol[i - 1];\n            for (var j = 0; j < firstcol.length; j++) {\n                if (!col.columns && i === 1) {\n                    col = { headerText: firstcol[parseInt(j.toString(), 10)].headerText,\n                        textAlign: firstcol[parseInt(j.toString(), 10)].textAlign,\n                        customAttributes: firstcol[parseInt(j.toString(), 10)].customAttributes, columns: [] };\n                    tempHead.push(firstcol[parseInt(j.toString(), 10)]);\n                }\n                else {\n                    if (tempHead.indexOf(firstcol[parseInt(j.toString(), 10)]) === -1) {\n                        this.pushallcol(firstcol[parseInt(j.toString(), 10)], firstcol[j - 1], col);\n                        tempHead.push(firstcol[parseInt(j.toString(), 10)]);\n                    }\n                }\n                if (j === firstcol.length - 1) {\n                    this.pushallcol(null, firstcol[parseInt(j.toString(), 10)], col, gridcolumns[i - 1], true);\n                    var count = 0;\n                    while (count !== headercol.length - 1 && i !== headercol.length) {\n                        var firstColHeaders = firstcol.map(function (col) {\n                            return col.headerText;\n                        }).join(', ');\n                        var headerColHeaders = headercol[parseInt(i.toString(), 10)].map(function (item) { return item.headerText; }).join(', ');\n                        if (firstColHeaders === headerColHeaders) {\n                            i++;\n                            this.pushallcol(null, firstcol[parseInt(j.toString(), 10)], col, gridcolumns[i - 1], true);\n                        }\n                        count++;\n                    }\n                }\n            }\n        }\n        if (freeze === 'Left') {\n            this.frozenLeftColumns.push(col);\n        }\n        else if (freeze === 'Right') {\n            this.frozenRightColumns.push(col);\n        }\n        else {\n            this.movableColumns.push(col);\n        }\n    };\n    Grid.prototype.splitFrozenCount = function (columns) {\n        if (this.frozenColumns || (this.changedProperties && this.changedProperties.frozenColumns === 0)) {\n            var cols = !this.enableColumnVirtualization || (this.enableColumnVirtualization && this.isPreparedFrozenColumns) ?\n                this.enableColumnVirtualization && this.columnModel && this.columnModel.length ? this.columnModel :\n                    this.getColumns() : this.columns;\n            if (!this.changedProperties || (this.changedProperties && !this.changedProperties.frozenColumns)) {\n                for (var i = 0; i < cols.length; i++) {\n                    if (this.frozenColumns > i) {\n                        cols[parseInt(i.toString(), 10)].freeze = 'Left';\n                    }\n                    else if (cols[parseInt(i.toString(), 10)].freeze === 'Right' || cols[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                        cols[parseInt(i.toString(), 10)].freeze = cols[parseInt(i.toString(), 10)].freeze;\n                    }\n                    else {\n                        cols[parseInt(i.toString(), 10)].freeze = undefined;\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < (!isNullOrUndefined(columns) ? columns.length : 0); i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.leftcount = 0;\n                this.rightcount = 0;\n                this.movablecount = 0;\n                this.fixedcount = 0;\n                var arr = [];\n                this.splitStackedColumns(columns[parseInt(i.toString(), 10)].columns);\n                if (this.leftcount && !this.rightcount && !this.movablecount && !this.fixedcount) {\n                    this.frozenLeftCount += this.leftcount;\n                    this.frozenLeftColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else if (this.rightcount && !this.leftcount && !this.movablecount && !this.fixedcount) {\n                    this.frozenRightCount += this.rightcount;\n                    this.frozenRightColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else if (this.movablecount && !this.leftcount && !this.rightcount && !this.fixedcount) {\n                    this.movableCount += this.movablecount;\n                    this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else if (this.fixedcount && !this.leftcount && !this.rightcount && !this.movablecount) {\n                    this.fixedCount += this.fixedcount;\n                    this.fixedColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.movableCount += this.movablecount;\n                    this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.frozenLeftCount += this.leftcount;\n                    this.frozenRightCount += this.rightcount;\n                    this.movableCount += this.movablecount;\n                    this.fixedCount += this.fixedcount;\n                    this.leftcount = 0;\n                    this.rightcount = 0;\n                    this.movablecount = 0;\n                    this.fixedcount = 0;\n                    this.stackedLeft = [];\n                    this.stackedRight = [];\n                    this.stackedFixed = [];\n                    this.stackedMovable = [];\n                    this.stackedarrayLeft = [];\n                    this.stackedarrayRight = [];\n                    this.stackedarrayFixed = [];\n                    this.stackedarrayMovable = [];\n                    this.pushStackedColumns(columns[parseInt(i.toString(), 10)].columns, 0, arr, columns[parseInt(i.toString(), 10)], { headerText: columns[parseInt(i.toString(), 10)].headerText,\n                        textAlign: columns[parseInt(i.toString(), 10)].textAlign,\n                        customAttributes: columns[parseInt(i.toString(), 10)].customAttributes, columns: [] });\n                    if (this.stackedarrayLeft.length) {\n                        this.resetStackedColumns(this.stackedLeft, this.stackedarrayLeft, 'Left');\n                    }\n                    if (this.stackedarrayRight.length) {\n                        this.resetStackedColumns(this.stackedRight, this.stackedarrayRight, 'Right');\n                    }\n                    if (this.stackedarrayFixed.length) {\n                        this.resetStackedColumns(this.stackedFixed, this.stackedarrayFixed, 'Fixed');\n                    }\n                    if (this.stackedarrayMovable.length) {\n                        this.resetStackedColumns(this.stackedMovable, this.stackedarrayMovable, 'Movable');\n                    }\n                    this.stackedLeft = [];\n                    this.stackedRight = [];\n                    this.stackedMovable = [];\n                    this.stackedFixed = [];\n                    this.stackedarrayLeft = [];\n                    this.stackedarrayRight = [];\n                    this.stackedarrayMovable = [];\n                    this.stackedarrayFixed = [];\n                }\n            }\n            else {\n                if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleFrozenRight++;\n                    }\n                    this.frozenRightColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.frozenRightCount++;\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleFrozenLeft++;\n                    }\n                    this.frozenLeftColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.frozenLeftCount++;\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                    this.fixedColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.fixedCount++;\n                    this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.movableCount++;\n                }\n                else {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleMovable++;\n                    }\n                    this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.movableCount++;\n                }\n            }\n        }\n        if (this.frozenLeftColumns.length) {\n            var cols = this.frozenLeftColumns[this.frozenLeftColumns.length - 1];\n            this.removeBorder(this.frozenLeftColumns);\n            this.frozenLeftBorderColumns(cols instanceof Column ? this.lastVisibleLeftCol(this.frozenLeftColumns) : cols);\n        }\n        if (this.frozenRightColumns.length) {\n            var cols = this.frozenRightColumns[0];\n            this.removeBorder(this.frozenRightColumns);\n            this.frozenRightBorderColumns(cols instanceof Column ? this.firstVisibleRightCol(this.frozenRightColumns) : cols);\n        }\n        if ((this.frozenLeftColumns.length || this.frozenRightColumns.length) && this.freezeColumnRefresh) {\n            var cols = (this.frozenLeftColumns.concat(this.movableColumns)).concat(this.frozenRightColumns);\n            this.setProperties({ columns: cols }, true);\n            this.freezeColumnRefresh = false;\n        }\n    };\n    Grid.prototype.removeBorder = function (columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns && columns[parseInt(i.toString(), 10)].columns.length) {\n                if (columns[parseInt(i.toString(), 10)].border === 'Right' ||\n                    columns[parseInt(i.toString(), 10)].border === 'Left') {\n                    columns[parseInt(i.toString(), 10)].border = undefined;\n                }\n                this.removeBorder(columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                if (columns[parseInt(i.toString(), 10)].border === 'Right' ||\n                    columns[parseInt(i.toString(), 10)].border === 'Left') {\n                    columns[parseInt(i.toString(), 10)].border = undefined;\n                }\n            }\n        }\n    };\n    Grid.prototype.isVisibleColumns = function (column, arr) {\n        if (column.columns && column.columns.length) {\n            for (var i = 0; i < column.columns.length; i++) {\n                this.isVisibleColumns(column.columns[parseInt(i.toString(), 10)], arr);\n                if (column.columns[parseInt(i.toString(), 10)].visible &&\n                    isNullOrUndefined(column.columns[parseInt(i.toString(), 10)].columns) &&\n                    (!isNullOrUndefined(column.columns[parseInt(i.toString(), 10)].freeze) ||\n                        column.columns[parseInt(i.toString(), 10)].isFrozen)) {\n                    arr.push('true');\n                }\n            }\n        }\n        else {\n            if (column.visible && (!isNullOrUndefined(column.freeze) || column.isFrozen)) {\n                arr.push('true');\n            }\n        }\n    };\n    Grid.prototype.lastVisibleLeftCol = function (columns) {\n        var column;\n        for (var i = columns.length - 1; i >= 0; i--) {\n            var arr = [];\n            this.isVisibleColumns(columns[parseInt(i.toString(), 10)], arr);\n            if (columns[parseInt(i.toString(), 10)].visible && arr.indexOf('true') !== -1) {\n                column = columns[parseInt(i.toString(), 10)];\n                break;\n            }\n        }\n        return column;\n    };\n    Grid.prototype.firstVisibleRightCol = function (columns) {\n        var column;\n        for (var i = 0; i < columns.length; i++) {\n            var arr = [];\n            this.isVisibleColumns(columns[parseInt(i.toString(), 10)], arr);\n            if (columns[parseInt(i.toString(), 10)].visible && arr.indexOf('true') !== -1) {\n                column = columns[parseInt(i.toString(), 10)];\n                break;\n            }\n        }\n        return column;\n    };\n    Grid.prototype.frozenLeftBorderColumns = function (columns) {\n        if (isNullOrUndefined(columns)) {\n            return;\n        }\n        if (columns.columns && columns.columns.length) {\n            columns.border = 'Left';\n            var cols = columns.columns[columns.columns.length - 1];\n            this.frozenLeftBorderColumns(cols instanceof Column && cols.columns ? this.lastVisibleLeftCol(columns.columns) : cols);\n        }\n        else {\n            columns.border = 'Left';\n        }\n    };\n    Grid.prototype.frozenRightBorderColumns = function (columns) {\n        if (isNullOrUndefined(columns)) {\n            return;\n        }\n        if (columns.columns && columns.columns.length) {\n            columns.border = 'Right';\n            var cols = columns.columns[0];\n            this.frozenRightBorderColumns(cols instanceof Column && cols.columns ? this.firstVisibleRightCol(columns.columns) : cols);\n        }\n        else {\n            columns.border = 'Right';\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible frozen columns count\n     */\n    Grid.prototype.getVisibleFrozenColumns = function () {\n        return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n    };\n    /**\n     * Get the current Filter operator and field.\n     *\n     * @returns {FilterUI} Returns the filter UI\n     */\n    Grid.prototype.getFilterUIInfo = function () {\n        return this.filterModule ? this.filterModule.getFilterUIInfo() : {};\n    };\n    Grid.prototype.getVisibleFrozenColumnsCount = function () {\n        var visibleFrozenColumns = 0;\n        var columns = this.columnModel;\n        for (var i = 0; i < this.frozenColumns; i++) {\n            if (columns[parseInt(i.toString(), 10)].visible) {\n                visibleFrozenColumns++;\n            }\n        }\n        if ((this.frozenLeftCount || this.leftcount) || (this.frozenRightCount || this.rightcount)) {\n            for (var i = 0; i < columns.length; i++) {\n                if (columns[parseInt(i.toString(), 10)].visible && (columns[parseInt(i.toString(), 10)].freeze === 'Left'\n                    || columns[parseInt(i.toString(), 10)].freeze === 'Right')) {\n                    visibleFrozenColumns++;\n                }\n            }\n        }\n        return visibleFrozenColumns;\n    };\n    Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n        if ((!this.frozenLeftCount && !this.leftcount) && (!this.frozenRightCount || !this.rightcount)) {\n            for (var i = 0, len = cols.length; i < len; i++) {\n                if (cols[parseInt(i.toString(), 10)].columns) {\n                    cnt = this.getVisibleFrozenCount(cols[parseInt(i.toString(), 10)].columns, cnt);\n                }\n                else {\n                    if (cols[parseInt(i.toString(), 10)].isFrozen && cols[parseInt(i.toString(), 10)].visible) {\n                        cnt++;\n                    }\n                }\n            }\n        }\n        return cnt;\n    };\n    Grid.prototype.getFrozenCount = function (cols, cnt, index) {\n        for (var i = 0, len = (!isNullOrUndefined(cols) ? cols.length : 0); i < len; i++) {\n            if (cols[parseInt(i.toString(), 10)].columns) {\n                cnt = this.getFrozenCount(cols[parseInt(i.toString(), 10)].columns, cnt, index);\n            }\n            else {\n                if (cols[parseInt(i.toString(), 10)].isFrozen && index > this.frozenColumns - 1) {\n                    cnt++;\n                }\n                index++;\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.goToPage = function (pageNo) {\n        if (this.pagerModule) {\n            this.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule && !this.pagerTemplate) {\n            this.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Remove the existing columns along with the grid actions like sorting, filtering, searching, grouping, aggregate, etc., and grid will refresh with new columns based on the updated new data source.\n     * > * If no columns are specified while changing the data source, then the columns are auto generated in the Grid based on the list of columns in the updated data source.\n     *\n     * @param {Object | DataManager | DataResult} dataSource -  Assign the new datasource.\n     * @param {Column[] | string[] | ColumnModel[]} columns - Defines columns.\n     * @returns {void}\n     *\n     *\n     * ```typescript\n     * <button id=\"btn\">change dataSource </button>\n     * <div id=\"Grid\"></div>\n     * <script>\n     * let gridObj: Grid = new Grid({\n     *     dataSource: employeeData,  // you can define the datamanager here if you are binding a data through datamanager\n     *     columns: [\n     *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n     *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n     * });\n     * gridObj.appendTo('#Grid');\n     * document.getElementById('btn').addEventListener(\"click\", function(){\n     * let newColumn: [\n     *     { field: 'CustomerID', headerText: 'Customer ID', width:100 },\n     *     { field: 'FirstName', headerText: 'Name' }];\n     * gridObj.changeDataSource(customerData, newColumn);\n     * });\n     * </script>\n     * ```\n     *\n     */\n    Grid.prototype.changeDataSource = function (dataSource, columns) {\n        this.isChangeDataSourceCall = true;\n        this.setProperties({ sortSettings: { columns: [] } }, true);\n        this.setProperties({ filterSettings: { columns: [] } }, true);\n        this.setProperties({ searchSettings: { key: '' } }, true);\n        if (this.allowGrouping) {\n            this.setProperties({ groupSettings: { columns: [] } }, true);\n        }\n        if (columns && columns.length) {\n            this.setProperties({ columns: columns }, true);\n        }\n        if (dataSource) {\n            if (isNullOrUndefined(columns)) {\n                this.setProperties({ columns: [] }, true);\n            }\n            this.setProperties({ dataSource: dataSource }, true);\n        }\n        this.freezeRefresh();\n        this.isChangeDataSourceCall = false;\n    };\n    /**\n     * Clears all the sorted columns of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.clearGridActions = function () {\n        this.setProperties({ sortSettings: { columns: [] } }, true);\n        this.setProperties({ filterSettings: { columns: [] } }, true);\n        this.setProperties({ searchSettings: { key: '' } }, true);\n        if (this.allowGrouping) {\n            this.setProperties({ groupSettings: { columns: [] } }, false);\n        }\n        else {\n            this.freezeRefresh();\n        }\n    };\n    /**\n     * Filters grid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        if (this.filterModule) {\n            this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n        }\n    };\n    /**\n     * Clears all the filtered rows of the Grid.\n     *\n     * @param {string[]} fields - Defines the Fields\n     * @returns {void}\n     */\n    Grid.prototype.clearFiltering = function (fields) {\n        if (this.filterModule) {\n            this.filterModule.clearFiltering(fields);\n        }\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        if (this.filterModule) {\n            this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n        }\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectRow = function (index, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRow(index, isToggle);\n        }\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectRows = function (rowIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRows(rowIndexes);\n        }\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearSelection();\n        }\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectCell = function (cellIndex, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCell(cellIndex, isToggle);\n        }\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     *\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        this.selectionModule.selectCellsByRange(startIndex, endIndex);\n    };\n    /**\n     * Searches Grid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.search = function (searchString) {\n        if (this.searchModule) {\n            this.searchModule.search(searchString);\n        }\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    Grid.prototype.print = function () {\n        if (this.printModule) {\n            this.printModule.print();\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    Grid.prototype.deleteRecord = function (fieldname, data) {\n        if (this.editModule) {\n            this.editModule.deleteRecord(fieldname, data);\n        }\n    };\n    /**\n     * Starts edit the selected row. At least one row must be selected before invoking this method.\n     * `editSettings.allowEditing` should be true.\n     * {% codeBlock src='grid/startEdit/index.md' %}{% endcodeBlock %}\n     *\n     * @returns {void}\n     */\n    Grid.prototype.startEdit = function () {\n        if (this.editModule) {\n            this.editModule.startEdit();\n        }\n    };\n    /**\n     * If Grid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.endEdit = function () {\n        if (this.editModule) {\n            this.editModule.endEdit();\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.closeEdit = function () {\n        if (this.editModule) {\n            this.editModule.closeEdit();\n        }\n    };\n    /**\n     * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     * @returns {void}\n     */\n    Grid.prototype.addRecord = function (data, index) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    Grid.prototype.deleteRow = function (tr) {\n        if (this.editModule) {\n            this.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n     *\n     * @param {number} index - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform batch edit.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.editCell = function (index, field) {\n        if (this.editModule) {\n            this.editModule.editCell(index, field);\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     * {% codeBlock src='grid/saveCell/index.md' %}{% endcodeBlock %}\n     */\n    Grid.prototype.saveCell = function () {\n        if (this.editModule) {\n            this.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.editModule) {\n            this.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * {% codeBlock src='grid/updateRow/index.md' %}{% endcodeBlock %}\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.updateRow = function (index, data) {\n        if (this.editModule) {\n            this.editModule.updateRow(index, data);\n        }\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} Returns the batch changes\n     */\n    Grid.prototype.getBatchChanges = function () {\n        if (this.editModule) {\n            return this.editModule.getBatchChanges();\n        }\n        return {};\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.toolbarModule) {\n            this.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    Grid.prototype.copy = function (withHeader) {\n        if (this.clipboardModule) {\n            this.clipboardModule.copy(withHeader);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.recalcIndentWidth = function () {\n        var _this_1 = this;\n        if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n            return;\n        }\n        if ((!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable()) ||\n            this.getHeaderTable().querySelector('.e-emptycell.e-indentRefreshed') ||\n            !this.getContentTable()) {\n            return;\n        }\n        var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n        var headerCol = [].slice.call(this.getHeaderTable().querySelector(literals.colGroup).childNodes);\n        var contentCol = [].slice.call(this.getContentTable().querySelector(literals.colGroup).childNodes);\n        var perPixel = indentWidth / 30;\n        var i = this.getFrozenMode() === 'Right' ? this.groupSettings.columns.length + this.getColumns().length : 0;\n        var parentOffset = this.element.offsetWidth;\n        var applyWidth = function (index, width) {\n            if (ispercentageWidth(_this_1)) {\n                var newWidth = (width / parentOffset * 100).toFixed(1) + '%';\n                headerCol[parseInt(index.toString(), 10)].style.width = newWidth;\n                contentCol[parseInt(index.toString(), 10)].style.width = newWidth;\n            }\n            else {\n                headerCol[parseInt(index.toString(), 10)].style.width = width + 'px';\n                contentCol[parseInt(index.toString(), 10)].style.width = width + 'px';\n            }\n            _this_1.notify(events.columnWidthChanged, { index: index, width: width });\n        };\n        if (perPixel >= 1) {\n            indentWidth = (30 / perPixel);\n        }\n        if (indentWidth < 1) {\n            indentWidth = 1;\n        }\n        if (this.enableColumnVirtualization || this.isAutoGen || (this.columns.length === this.groupSettings.columns.length)) {\n            indentWidth = 30;\n        }\n        while (i < this.groupSettings.columns.length) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isDetail()) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isRowDragable()) {\n            applyWidth(i, indentWidth);\n        }\n        this.isAutoGen = false;\n        this.getHeaderTable().querySelector('.e-emptycell').classList.add('e-indentRefreshed');\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.resetIndentWidth = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        if (ispercentageWidth(this)) {\n            this.getHeaderTable().querySelector('.e-emptycell').classList.remove('e-indentRefreshed');\n            this.widthService.setWidthToColumns();\n            this.recalcIndentWidth();\n            if (this.autoFit) {\n                this.preventAdjustColumns();\n            }\n        }\n        if ((this.width === 'auto' || typeof (this.width) === 'string' && this.width.indexOf('%') !== -1)\n            && this.getColumns().filter(function (col) { return (!col.width || col.width === 'auto') && col.minWidth; }).length > 0) {\n            var tgridWidth = this.widthService.getTableWidth(this.getColumns(), true);\n            this.widthService.setMinwidthBycalculation(tgridWidth);\n        }\n        if (this.isFrozenGrid() && this.enableColumnVirtualization && this.widthService) {\n            this.widthService.refreshFrozenScrollbar();\n        }\n        if (this.allowTextWrap && this.textWrapSettings.wrapMode !== 'Content') {\n            this.notify(events.refreshHandlers, {});\n        }\n        if (this.frozenRows && this.scrollModule) {\n            this.scrollModule.resizeFrozenRowBorder();\n        }\n        if (this.enableStickyHeader) {\n            this.scrollModule.makeStickyHeader();\n        }\n        if (this.enableAutoFill && this.selectionSettings.type === 'Multiple' &&\n            this.selectionSettings.mode === 'Cell' && this.selectionModule.selectedRowCellIndexes.length) {\n            this.selectionModule.updateAutoFillPosition();\n            this.selectionModule.drawBorders();\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns isRowDragable\n     */\n    Grid.prototype.isRowDragable = function () {\n        return this.allowRowDragAndDrop && !this.rowDropSettings.targetID;\n    };\n    /**\n     * Changes the Grid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumns = function (fromFName, toFName) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumns(fromFName, toFName);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n     * then you won't get the same results every time.\n     *\n     * @param  {number} fromIndex - Defines the origin field index.\n     * @param  {number} toIndex - Defines the destination field index.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n     * then you will get the same results every time.\n     *\n     * @param  {string} fieldName - Defines the field name.\n     * @param  {number} toIndex - Defines the destination field index.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid Row position with given indexes.\n     *\n     * @param  {number} fromIndexes - Defines the origin Indexes.\n     * @param  {number} toIndex - Defines the destination Index.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n        if (this.rowDragAndDropModule) {\n            this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n        }\n    };\n    /**\n     * @param {ReturnType} e - Defines the Return type\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshDataSource = function (e) {\n        this.notify('refreshdataSource', e);\n    };\n    /**\n     * @param {boolean} enable -Defines the enable\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.disableRowDD = function (enable) {\n        var headerTable = this.getHeaderTable();\n        var contentTable = this.getContentTable();\n        var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n        var rows = this.getRows();\n        var disValue = enable ? 'none' : '';\n        setStyleAttribute(headerTable.querySelector(literals.colGroup).childNodes[0], { 'display': disValue });\n        setStyleAttribute(contentTable.querySelector(literals.colGroup).childNodes[0], { 'display': disValue });\n        for (var i = 0; i < this.getRows().length; i++) {\n            var ele = rows[parseInt(i.toString(), 10)].firstElementChild;\n            if (enable) {\n                addClass([ele], 'e-hide');\n            }\n            else {\n                removeClass([ele], ['e-hide']);\n            }\n        }\n        for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n            var ele = headerRows[parseInt(j.toString(), 10)];\n            if (enable) {\n                addClass([ele], 'e-hide');\n            }\n            else {\n                removeClass([ele], ['e-hide']);\n            }\n        }\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * > * By specifying the start row index and end row index, providing the range within which the maximum width for that column should be considered when applying `autoFitColumns`.\n     * > * The width of header rows is always calculated. If the width of a header row exceeds the specified range, its width will be allocated to the specific content rows.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @param  {number} startRowIndex - Specifies the start index of the content row.\n     * @param  {number} endRowIndex - Specifies the end index of content row.\n     * @returns {void}\n     *\n     *\n     * ```typescript\n     * <div id=\"Grid\"></div>\n     * <script>\n     * let gridObj: Grid = new Grid({\n     *     dataSource: employeeData,\n     *     columns: [\n     *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n     *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n     *     dataBound: () => gridObj.autoFitColumns('EmployeeID');\n     * });\n     * gridObj.appendTo('#Grid');\n     * </script>\n     * ```\n     *\n     */\n    Grid.prototype.autoFitColumns = function (fieldNames, startRowIndex, endRowIndex) {\n        var injectedModules = this.getInjectedModules();\n        var resize = injectedModules.find(function (item) {\n            if (typeof item === 'function' && !isNullOrUndefined(item.prototype)) {\n                return item.prototype.getModuleName() === 'resize';\n            }\n            else {\n                return item.name === 'Resize';\n            }\n        });\n        if (!this.resizeModule && resize) {\n            this.autoFitColumnsResize = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.injectModules();\n        }\n        if (this.resizeModule) {\n            this.resizeModule.autoFitColumns(fieldNames, startRowIndex, endRowIndex);\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.preventAdjustColumns = function () {\n        if ((this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical')\n            || (this.allowResizing && this.resizeSettings.mode === 'Auto')) {\n            return;\n        }\n        var columns = this.getColumns();\n        var headerTable = this.getHeaderTable();\n        var tableWidth = 0;\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].visible) {\n                if (this.groupSettings.columns.length\n                    && this.groupSettings.columns.indexOf(columns[parseInt(i.toString(), 10)].field) > -1) {\n                    var headerCol = [].slice.call(headerTable.querySelector('colgroup')\n                        .querySelectorAll(':not(.e-group-intent):not(.e-detail-intent):not(.e-drag-intent)'));\n                    if (headerCol[parseInt(i.toString(), 10)].style.display === 'none') {\n                        continue;\n                    }\n                }\n                if (columns[parseInt(i.toString(), 10)].width) {\n                    tableWidth += parseFloat(columns[parseInt(i.toString(), 10)].width.toString());\n                }\n                else {\n                    tableWidth = 0;\n                    break;\n                }\n            }\n        }\n        if (tableWidth) {\n            var percentageWidth = this.isPercentageWidthGrid();\n            var unit = this.widthUnit(percentageWidth);\n            var contentTable = this.getContentTable();\n            if (this.groupSettings.columns.length || this.isDetail() || this.isRowDragable()) {\n                var indentWidth = this.defaultIndentWidth(percentageWidth);\n                var indentWidthUnitFormat = indentWidth.toString() + unit;\n                var headerIndentCol = [].slice.call(headerTable.querySelector('colgroup')\n                    .querySelectorAll('.e-group-intent, .e-detail-intent, .e-drag-intent'));\n                var contentIndentCol = [].slice.call(contentTable.querySelector('colgroup')\n                    .querySelectorAll('.e-group-intent, .e-detail-intent, .e-drag-intent'));\n                for (var i = 0; i < headerIndentCol.length; i++) {\n                    headerIndentCol[parseInt(i.toString(), 10)].style.setProperty('width', indentWidthUnitFormat);\n                    contentIndentCol[parseInt(i.toString(), 10)].style.setProperty('width', indentWidthUnitFormat);\n                    tableWidth += indentWidth;\n                }\n            }\n            if ((percentageWidth && tableWidth < 100)\n                || (!percentageWidth && tableWidth < contentTable.parentElement.clientWidth)) {\n                if (!isNullOrUndefined(contentTable.querySelector('.e-emptyrow'))) {\n                    addClass([headerTable], ['e-tableborder']);\n                    removeClass([contentTable], ['e-tableborder']);\n                }\n                else {\n                    addClass([headerTable, contentTable], ['e-tableborder']);\n                }\n            }\n            var tableWidthUnitFormat = tableWidth.toString() + unit;\n            headerTable.style.setProperty('width', tableWidthUnitFormat);\n            contentTable.style.setProperty('width', tableWidthUnitFormat);\n        }\n        else {\n            this.restoreAdjustColumns();\n        }\n    };\n    Grid.prototype.restoreAdjustColumns = function () {\n        if ((this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical')\n            || (this.allowResizing && this.resizeSettings.mode === 'Auto')) {\n            return;\n        }\n        var headerTable = this.getHeaderTable();\n        var contentTable = this.getContentTable();\n        removeClass([headerTable, contentTable], ['e-tableborder']);\n        headerTable.style.removeProperty('width');\n        contentTable.style.removeProperty('width');\n        if (this.groupSettings.columns.length || this.isDetail() || this.isRowDragable()) {\n            var percentageWidth = this.isPercentageWidthGrid();\n            var indentWidthUnitFormat_1 = this.defaultIndentWidth(percentageWidth).toString() + this.widthUnit(percentageWidth);\n            var headerIndentCol = [].slice.call(headerTable.querySelector('colgroup')\n                .querySelectorAll('.e-group-intent, .e-detail-intent, .e-drag-intent'));\n            headerIndentCol.forEach(function (element) {\n                element.style.setProperty('width', indentWidthUnitFormat_1);\n            });\n            headerTable.querySelector('.e-emptycell').classList.remove('e-indentRefreshed');\n            this.recalcIndentWidth();\n        }\n    };\n    Grid.prototype.widthUnit = function (percentageWidth) {\n        return percentageWidth ? '%' : 'px';\n    };\n    Grid.prototype.defaultIndentWidth = function (percentageWidth) {\n        return percentageWidth ? parseFloat((30 / this.element.offsetWidth * 100).toFixed(1)) : 30;\n    };\n    Grid.prototype.isPercentageWidthGrid = function () {\n        var column = this.getColumns().find(function (col) { return !isNullOrUndefined(col.width); });\n        return column ? column.width.toString().indexOf('%') > -1 : false;\n    };\n    /**\n     * @param {number} x - Defines the number\n     * @param {number} y - Defines the number\n     * @param {Element} target - Defines the Element\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.createColumnchooser = function (x, y, target) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.renderColumnChooser(x, y, target);\n        }\n    };\n    Grid.prototype.initializeServices = function () {\n        this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n        this.serviceLocator.register('cellRendererFactory', new CellRendererFactory);\n        this.serviceLocator.register('rendererFactory', new RendererFactory);\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n        this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n        this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n        this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n        this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n    };\n    Grid.prototype.processModel = function () {\n        var gCols = this.groupSettings.columns;\n        var sCols = this.sortSettings.columns;\n        var flag;\n        var j;\n        if (this.allowGrouping) {\n            var _loop_3 = function (i, len) {\n                flag = false;\n                j = 0;\n                for (var sLen = sCols.length; j < sLen; j++) {\n                    if (sCols[parseInt(j.toString(), 10)].field === gCols[parseInt(i.toString(), 10)]) {\n                        flag = true;\n                        break;\n                    }\n                }\n                if (!flag) {\n                    sCols.push({ field: gCols[parseInt(i.toString(), 10)], direction: 'Ascending', isFromGroup: true });\n                }\n                else {\n                    if (this_3.allowSorting) {\n                        this_3.sortedColumns.push(sCols[parseInt(j.toString(), 10)].field);\n                    }\n                    else {\n                        sCols[parseInt(j.toString(), 10)].direction = 'Ascending';\n                    }\n                }\n                if (!this_3.groupSettings.showGroupedColumn) {\n                    var column = this_3.enableColumnVirtualization ?\n                        this_3.columns.filter(function (c) { return c.field === gCols[parseInt(i.toString(), 10)]; })[0]\n                        : this_3.getColumnByField(gCols[parseInt(i.toString(), 10)]);\n                    if (column) {\n                        column.visible = false;\n                    }\n                    else {\n                        this_3.log('initial_action', { moduleName: 'group', columnName: gCols[parseInt(i.toString(), 10)] });\n                    }\n                }\n            };\n            var this_3 = this;\n            for (var i = 0, len = gCols.length; i < len; i++) {\n                _loop_3(i, len);\n            }\n        }\n        if (!gCols.length) {\n            for (var i = 0; i < sCols.length; i++) {\n                this.sortedColumns.push(sCols[parseInt(i.toString(), 10)].field);\n            }\n        }\n        this.rowTemplateFn = templateCompiler(this.rowTemplate);\n        this.emptyRecordTemplateFn = templateCompiler(this.emptyRecordTemplate);\n        this.detailTemplateFn = templateCompiler(this.detailTemplate);\n        this.editTemplateFn = templateCompiler(this.editSettings.template);\n        this.editHeaderTemplateFn = templateCompiler(this.editSettings.headerTemplate);\n        this.editFooterTemplateFn = templateCompiler(this.editSettings.footerTemplate);\n        this.columnChooserTemplateFn = templateCompiler(this.columnChooserSettings.template);\n        this.columnChooserHeaderTemplateFn = templateCompiler(this.columnChooserSettings.headerTemplate);\n        this.columnChooserFooterTemplateFn = templateCompiler(this.columnChooserSettings.footerTemplate);\n        if (!isNullOrUndefined(this.parentDetails)) {\n            var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' :\n                this.parentDetails.parentKeyFieldValue;\n            this.query.where(this.queryString, 'equal', value, true);\n        }\n        this.initForeignColumn();\n    };\n    Grid.prototype.initForeignColumn = function () {\n        if (this.isForeignKeyEnabled(this.getColumns())) {\n            this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n        }\n    };\n    Grid.prototype.enableVerticalRendering = function () {\n        if (this.rowRenderingMode === 'Vertical') {\n            this.element.classList.add('e-row-responsive');\n        }\n        else {\n            this.element.classList.remove('e-row-responsive');\n        }\n    };\n    Grid.prototype.gridRender = function () {\n        var _a;\n        this.updateRTL();\n        if (this.rowRenderingMode === 'Vertical') {\n            this.element.classList.add('e-row-responsive');\n        }\n        if (this.enableHover) {\n            this.element.classList.add('e-gridhover');\n        }\n        if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent) || Browser.isSafari()) {\n            this.element.classList.add('e-mac-safari');\n        }\n        if (Browser.isDevice) {\n            this.element.classList.add('e-device');\n            if (this.adaptiveUIMode === 'Desktop') {\n                this.enableAdaptiveUI = false;\n            }\n        }\n        if (this.adaptiveUIMode === 'Mobile' && !(Browser.isDevice || this.rowRenderingMode === 'Vertical')) {\n            this.enableAdaptiveUI = false;\n        }\n        if (this.rowHeight) {\n            this.element.classList.add('e-grid-min-height');\n        }\n        if (this.cssClass) {\n            if (this.cssClass.indexOf(' ') !== -1) {\n                (_a = this.element.classList).add.apply(_a, this.cssClass.split(' '));\n            }\n            else {\n                this.element.classList.add(this.cssClass);\n            }\n        }\n        // If the below if statement is removed, then drag and drop between grids will not work in firefox browser.\n        if (this.allowRowDragAndDrop && this.rowDropSettings.targetID && Browser.info.name === 'mozilla') {\n            this.element.classList.add('e-disableuserselect');\n        }\n        if (this.editSettings.showAddNewRow && (this.enableVirtualization || this.enableInfiniteScrolling)) {\n            this.editSettings.newRowPosition = 'Top';\n        }\n        classList(this.element, ['e-responsive', 'e-default'], []);\n        var rendererFactory = this.serviceLocator.getService('rendererFactory');\n        this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n        this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n        this.printModule = new Print(this, this.scrollModule);\n        this.clipboardModule = new Clipboard(this, this.serviceLocator);\n        this.renderModule.render();\n        this.eventInitializer();\n        this.createGridPopUpElement();\n        this.widthService.setWidthToColumns();\n        this.updateGridLines();\n        this.applyTextWrap();\n        this.createTooltip(); //for clip mode ellipsis\n        this.enableBoxSelection();\n    };\n    Grid.prototype.dataReady = function () {\n        this.scrollModule.setWidth();\n        this.scrollModule.setHeight();\n        if (this.height !== 'auto') {\n            this.scrollModule.setPadding();\n        }\n    };\n    Grid.prototype.updateRTL = function () {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    };\n    Grid.prototype.createGridPopUpElement = function () {\n        var popup = this.createElement('div', { className: 'e-gridpopup' });\n        popup.style.display = 'none';\n        var content = this.createElement('div', { className: literals.content, attrs: { tabIndex: '-1' } });\n        append([content, this.createElement('div', { className: 'e-uptail e-tail' })], popup);\n        content.appendChild(this.createElement('span'));\n        append([content, this.createElement('div', { className: 'e-downtail e-tail' })], popup);\n        this.element.appendChild(popup);\n    };\n    Grid.prototype.updateGridLines = function () {\n        classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n        switch (this.gridLines) {\n            case 'Horizontal':\n                this.element.classList.add('e-horizontallines');\n                break;\n            case 'Vertical':\n                this.element.classList.add('e-verticallines');\n                break;\n            case 'None':\n                this.element.classList.add('e-hidelines');\n                break;\n            case 'Both':\n                this.element.classList.add('e-bothlines');\n                break;\n        }\n        this.updateResizeLines();\n    };\n    Grid.prototype.updateResizeLines = function () {\n        if (this.allowResizing &&\n            !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n            this.element.classList.add('e-resize-lines');\n        }\n        else {\n            this.element.classList.remove('e-resize-lines');\n        }\n    };\n    /**\n     * The function is used to apply text wrap\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.applyTextWrap = function () {\n        if (this.allowTextWrap) {\n            var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n            switch (this.textWrapSettings.wrapMode) {\n                case 'Header':\n                    wrap(this.element, false);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, true);\n                    break;\n                case 'Content':\n                    wrap(this.getContent(), true);\n                    wrap(this.element, false);\n                    wrap(headerRows, false);\n                    break;\n                default:\n                    wrap(this.element, true);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, false);\n            }\n            if (this.textWrapSettings.wrapMode !== 'Content') {\n                this.notify(events.refreshHandlers, {});\n            }\n        }\n    };\n    /**\n     * The function is used to remove text wrap\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeTextWrap = function () {\n        wrap(this.element, false);\n        var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n        wrap(headerRows, false);\n        wrap(this.getContent(), false);\n        if (this.textWrapSettings.wrapMode !== 'Content') {\n            this.notify(events.refreshHandlers, {});\n        }\n    };\n    /**\n     * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.createTooltip = function () {\n        this.toolTipObj = new Tooltip({\n            opensOn: 'custom',\n            content: '',\n            cssClass: this.cssClass ? this.cssClass : null\n        }, this.element);\n    };\n    /**\n     * Initiates a complete refresh of the Grid's column and layout.\n     *\n     * This method forces a full re-render of the Grid, ensuring that any dynamic\n     * changes to columns or layout are immediately reflected.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.freezeRefresh = function () {\n        if (this.enableVirtualization || this.enableInfiniteScrolling) {\n            this.pageSettings.currentPage = 1;\n        }\n        this.componentRefresh();\n    };\n    Grid.prototype.getTooltipStatus = function (element) {\n        var headerTable = this.getHeaderTable();\n        var headerDivTag = this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical' ? 'e-gridcontent' : 'e-gridheader';\n        var htable = this.createTable(headerTable, headerDivTag, 'header');\n        var ctable = this.createTable(headerTable, headerDivTag, 'content');\n        var table = element.classList.contains('e-headercell') ? htable : ctable;\n        var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n        table.querySelector(ele).className = element.className;\n        var targetElement = table.querySelector(ele);\n        targetElement.innerHTML = '';\n        Array.from(element.childNodes).forEach(function (child) {\n            targetElement.appendChild(child.cloneNode(true));\n        });\n        var width = table.querySelector(ele).getBoundingClientRect().width;\n        document.body.removeChild(htable);\n        document.body.removeChild(ctable);\n        if ((width > element.getBoundingClientRect().width && !element.classList.contains('e-editedbatchcell')) ||\n            (this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical' &&\n                width > (element.getBoundingClientRect().width * 0.55) - (this.height !== 'auto' ? 16 : 0))) {\n            // 0.55 - defines the width of adaptive content cell, 16 - defines the scrollbar width\n            return true;\n        }\n        return false;\n    };\n    Grid.prototype.mouseMoveHandler = function (e) {\n        if (this.isEllipsisTooltip()) {\n            var element = parentsUntil(e.target, 'e-ellipsistooltip');\n            if (e.type === 'mouseout' && (this.prevElement !== element || element !== parentsUntil(e.relatedTarget, 'e-ellipsistooltip'))) {\n                this.toolTipObj.close();\n                this.prevElement = null;\n            }\n            var tagName = e.target.tagName;\n            var elemNames = ['A', 'BUTTON', 'INPUT'];\n            if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n                if (this.getTooltipStatus(element)) {\n                    var col = this.getColumns()[parseInt(element.getAttribute(literals.ariaColIndex), 10) - 1];\n                    var domSetter = col && col.disableHtmlEncode ? 'innerText' : 'innerHTML';\n                    var contentDiv = this.createElement('div');\n                    if (element.getElementsByClassName('e-headertext').length) {\n                        var innerElement = element.getElementsByClassName('e-headertext')[0];\n                        contentDiv[\"\" + domSetter] = this.sanitize(innerElement.innerText);\n                        this.toolTipObj.content = contentDiv;\n                    }\n                    else {\n                        contentDiv[\"\" + domSetter] = this.sanitize(element.innerText);\n                        this.toolTipObj.content = contentDiv;\n                    }\n                    if (this.enableHtmlSanitizer) {\n                        this.toolTipObj.enableHtmlSanitizer = true;\n                    }\n                    if (col && col.disableHtmlEncode) {\n                        this.toolTipObj.enableHtmlParse = false;\n                    }\n                    if (element !== this.prevElement) {\n                        this.toolTipObj['open'](element);\n                    }\n                    this.prevElement = element;\n                }\n            }\n        }\n    };\n    Grid.prototype.isEllipsisTooltip = function () {\n        var cols = this.getColumns();\n        if (this.clipMode === 'EllipsisWithTooltip') {\n            return true;\n        }\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[parseInt(i.toString(), 10)].clipMode === 'EllipsisWithTooltip') {\n                return true;\n            }\n        }\n        return false;\n    };\n    Grid.prototype.scrollHandler = function () {\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * To create table for ellipsiswithtooltip\n     *\n     * @param {Element} table - Defines the table\n     * @param {string} tag - Defines the tag\n     * @param {string} type - Defines the type\n     * @returns {HTMLDivElement} Returns the HTML div ELement\n     * @hidden\n     */\n    Grid.prototype.createTable = function (table, tag, type) {\n        var myTableDiv = this.createElement('div');\n        myTableDiv.className = this.element.className;\n        myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n        var mySubDiv = this.createElement('div');\n        mySubDiv.className = tag;\n        var myTable = this.createElement('table');\n        myTable.className = table.className;\n        myTable.style.cssText = 'table-layout: auto;width: auto';\n        var ele = (type === 'header') ? 'th' : 'td';\n        var myTr = this.createElement('tr', { attrs: { role: 'row' } });\n        var mytd = this.createElement(ele);\n        myTr.appendChild(mytd);\n        myTable.appendChild(myTr);\n        mySubDiv.appendChild(myTable);\n        myTableDiv.appendChild(mySubDiv);\n        document.body.appendChild(myTableDiv);\n        return myTableDiv;\n    };\n    Grid.prototype.onKeyPressed = function (e) {\n        if (e.action === 'tab' || e.action === 'shiftTab') {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n        EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n        EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        EventHandler.add(window, 'resize', this.resetIndentWidth, this);\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n        EventHandler.add(this.element, 'mouseover', this.mouseMoveHandler, this);\n        EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n        EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n        EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n        EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n        EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n        EventHandler.remove(this.element, 'mouseover', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n        EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n        EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        EventHandler.remove(window, 'resize', this.resetIndentWidth);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.addListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.on(events.dataReady, this.dataReady, this);\n        this.on(events.contentReady, this.recalcIndentWidth, this);\n        this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n        this.on(events.refreshFrozenPosition, this.refreshFrozenPosition, this);\n        this.on(events.refreshSplitFrozenColumn, this.refreshSplitFrozenColumn, this);\n        this.dataBoundFunction = this.refreshMediaCol.bind(this);\n        this.addEventListener(events.dataBound, this.dataBoundFunction);\n        this.on(events.keyPressed, this.onKeyPressed, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off(events.dataReady, this.dataReady);\n        this.off(events.contentReady, this.recalcIndentWidth);\n        this.off(events.headerRefreshed, this.recalcIndentWidth);\n        this.on(events.refreshFrozenPosition, this.refreshFrozenPosition, this);\n        this.on(events.refreshSplitFrozenColumn, this.refreshSplitFrozenColumn, this);\n        this.removeEventListener(events.dataBound, this.dataBoundFunction);\n        this.off(events.keyPressed, this.onKeyPressed);\n    };\n    /**\n     * Get current visible data of grid.\n     *\n     * @returns {Object[]} Returns the current view records\n     *\n     * @isGenericType true\n     */\n    Grid.prototype.getCurrentViewRecords = function () {\n        if (isGroupAdaptive(this)) {\n            return isNullOrUndefined(this.currentViewData.records) ?\n                this.currentViewData : this.currentViewData.records;\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            return this.currentViewData;\n        }\n        return (this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length\n            && this.currentViewData.records) ? this.currentViewData.records\n            : this.currentViewData;\n    };\n    Grid.prototype.mouseClickHandler = function (e) {\n        if (this.isChildGrid(e) || (parentsUntil(e.target, 'e-gridpopup') && e.touches) ||\n            this.element.getElementsByClassName('e-cloneproperties').length || this.checkEdit(e)) {\n            return;\n        }\n        if (((!this.allowRowDragAndDrop && (parentsUntil(e.target, literals.gridContent) ||\n            e.target.tagName === 'TD')) || (parentsUntil(e.target, 'e-headercell') &&\n            parentsUntil(e.target, 'e-headercell').querySelector('.e-checkselectall')) ||\n            (!(this.allowGrouping || this.allowReordering) && parentsUntil(e.target, 'e-gridheader'))) &&\n            e.touches) {\n            return;\n        }\n        if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop &&\n            !(parentsUntil(e.target, 'e-filterbarcell')) && (e.target &&\n            ['A', 'BUTTON', 'INPUT'].indexOf(e.target.tagName) === -1)) {\n            e.preventDefault();\n        }\n        var args = this.getRowInfo(e.target);\n        var cancel = 'cancel';\n        args[\"\" + cancel] = false;\n        var isDataRow = false;\n        var tr = closest(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            isDataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        if (isDataRow) {\n            this.trigger(events.recordClick, args);\n        }\n        this.notify(events.click, e);\n    };\n    Grid.prototype.checkEdit = function (e) {\n        var tr = parentsUntil(e.target, literals.row);\n        var isEdit = this.editSettings.mode !== 'Batch' &&\n            this.isEdit && tr && (tr.classList.contains(literals.editedRow) || (tr.classList.contains(literals.addedRow)) &&\n            !this.editSettings.showAddNewRow);\n        return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || (parentsUntil(e.target, literals.rowCell) &&\n            parentsUntil(e.target, literals.rowCell).classList.contains('e-editedbatchcell')));\n    };\n    Grid.prototype.dblClickHandler = function (e) {\n        var grid = parentsUntil(e.target, 'e-grid');\n        if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n            return;\n        }\n        var dataRow = false;\n        var tr = closest(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            dataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        var args = this.getRowInfo(e.target);\n        args.target = e.target;\n        if (dataRow) {\n            this.trigger(events.recordDoubleClick, args);\n        }\n        this.notify(events.dblclick, e);\n    };\n    Grid.prototype.focusOutHandler = function (e) {\n        if (this.isChildGrid(e)) {\n            return;\n        }\n        if (!parentsUntil(e.target, 'e-grid')) {\n            this.element.querySelector('.e-gridpopup').style.display = 'None';\n        }\n        var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n        if (filterClear && !filterClear.parentElement.classList.contains('e-tbar-btn')) {\n            filterClear.classList.add('e-hide');\n        }\n        var relatedTarget = e.relatedTarget;\n        var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n        if ((!relatedTarget || (!parentsUntil(relatedTarget, 'e-grid') &&\n            (!isNullOrUndefined(ariaOwns) &&\n                (ariaOwns)) !== e.target.getAttribute('aria-owns')))\n            && !this.keyPress && this.isEdit && !Browser.isDevice) {\n            if (this.editSettings.mode === 'Batch' && !(((parentsUntil(relatedTarget, 'e-ddl') || parentsUntil(relatedTarget, 'e-ddt')) &&\n                (parentsUntil(relatedTarget, 'e-multi-select-list-wrapper') || parentsUntil(relatedTarget, 'e-input-filter'))) &&\n                parentsUntil(relatedTarget, 'e-input-group')) && (parentsUntil(relatedTarget, 'e-uploader') || (!(relatedTarget &&\n                isNullOrUndefined(parentsUntil(relatedTarget, 'e-input-group'))) && !parentsUntil(e.target, 'edit-custom-template')))) {\n                this.editModule.saveCell();\n                this.notify(events.editNextValCell, {});\n            }\n            if (this.editSettings.mode === 'Normal' && !this.isWidgetsDestroyed) {\n                this.editModule.editFormValidate();\n            }\n        }\n        if (this.editSettings.showAddNewRow) {\n            this.editModule.isShowAddedRowValidate = false;\n        }\n        this.keyPress = false;\n    };\n    Grid.prototype.isChildGrid = function (e) {\n        var gridElement = parentsUntil(e.target, 'e-grid');\n        if ((gridElement && gridElement.id !== this.element.id) || (parentsUntil(e.target, 'e-unboundcelldiv') &&\n            isNullOrUndefined(gridElement))) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {Object} persistedData - Defines the persisted data\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.mergePersistGridData = function (persistedData) {\n        var data = this.getLocalData();\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof this[\"\" + key] === 'object') && !isNullOrUndefined(this[\"\" + key])) {\n                    if (Array.isArray(this[\"\" + key]) && key === 'columns') {\n                        this.setFrozenCount();\n                        setColumnIndex(this[\"\" + key]);\n                        this.mergeColumns(dataObj[\"\" + key], this[\"\" + key]);\n                        this.mergedColumns = true;\n                        this[\"\" + key] = dataObj[\"\" + key];\n                    }\n                    else {\n                        extend(this[\"\" + key], dataObj[\"\" + key]);\n                    }\n                }\n                else {\n                    this[\"\" + key] = dataObj[\"\" + key];\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    Grid.prototype.mergeColumns = function (storedColumn, columns) {\n        var storedColumns = storedColumn;\n        var isFrozenGrid = this.isFrozenGrid();\n        var _loop_4 = function (i) {\n            var localCol = columns.filter(function (tCol) { return isFrozenGrid ?\n                tCol.index === storedColumns[parseInt(i.toString(), 10)][\"\" + literals.initialFrozenColumnIndex] :\n                tCol.index === storedColumns[parseInt(i.toString(), 10)].index; })[0];\n            if (!isNullOrUndefined(localCol)) {\n                if (isFrozenGrid) {\n                    localCol = extend({}, localCol, {}, true);\n                    localCol.freeze = storedColumns[parseInt(i.toString(), 10)].freeze;\n                }\n                if (localCol.columns && localCol.columns.length) {\n                    this_4.mergeColumns(storedColumns[parseInt(i.toString(), 10)].columns, localCol.columns);\n                    storedColumns[parseInt(i.toString(), 10)] = extend(localCol, storedColumns[parseInt(i.toString(), 10)], {}, true);\n                }\n                else {\n                    storedColumns[parseInt(i.toString(), 10)] = extend(localCol, storedColumns[parseInt(i.toString(), 10)], {}, true);\n                }\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_4(i);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns the isDetail\n     */\n    Grid.prototype.isDetail = function () {\n        return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n    };\n    Grid.prototype.isCommandColumn = function (columns) {\n        var _this_1 = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this_1.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    Grid.prototype.isForeignKeyEnabled = function (columns) {\n        var _this_1 = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this_1.isForeignKeyEnabled(col.columns);\n            }\n            return !!(col.dataSource && col.foreignKeyValue);\n        });\n    };\n    Grid.prototype.keyPressHandler = function (e) {\n        var presskey = extend(e, { cancel: false });\n        this.trigger('keyPressed', presskey);\n        if (presskey.cancel === true || (this.isEdit && e && parentsUntil(e.target, 'e-gridform') &&\n            parentsUntil(e.target, 'e-ddl') && e.action === 'open' && e.altKey === true && e.code === 'ArrowDown')) {\n            e.stopImmediatePropagation();\n        }\n    };\n    Grid.prototype.keyDownHandler = function (e) {\n        if (e.altKey) {\n            if (e.keyCode === 74) { //alt j\n                if (this.keyA) { //alt A J\n                    this.notify(events.groupCollapse, { target: e.target, collapse: false });\n                    this.keyA = false;\n                }\n                else {\n                    if (this.focusModule && this.focusModule.currentInfo && this.focusModule.currentInfo.element) {\n                        removeClass([this.focusModule.currentInfo.element, this.focusModule.currentInfo.elementToFocus], ['e-focused', 'e-focus']);\n                        this.focusModule.currentInfo.element.tabIndex = -1;\n                    }\n                    if (!this.element.classList.contains('e-childgrid')) {\n                        this.element.focus();\n                    }\n                }\n            }\n            if (e.keyCode === 87) { //alt w\n                var focusModule = this.focusModule;\n                if (focusModule) {\n                    if (!this.currentViewData.length) {\n                        return;\n                    }\n                    focusModule.focusContent();\n                    focusModule.addOutline();\n                }\n            }\n            if (e.keyCode === 65) { //alt A\n                this.keyA = true;\n            }\n            if (e.keyCode === 72 && this.keyA) { //alt A H\n                this.notify(events.groupCollapse, { target: e.target, collapse: true });\n                this.keyA = false;\n            }\n        }\n        if (e.keyCode === 13) {\n            this.notify(events.enterKeyHandler, e);\n        }\n    };\n    Grid.prototype.keyActionHandler = function (e) {\n        if (this.isChildGrid(e) ||\n            (this.editModule && ((this.editModule.alertDObj && this.editModule.alertDObj.visible) ||\n                (this.editModule.dialogObj && this.editModule.dialogObj.visible))) ||\n            ((this.isEdit && (!this.editSettings.showAddNewRow || (this.editSettings.showAddNewRow &&\n                this.element.querySelector(literals.editedRow)))) && e.action !== 'escape' && e.action !== 'enter'\n                && e.action !== 'shiftEnter' && e.action !== 'tab' && e.action !== 'shiftTab')) {\n            return;\n        }\n        else {\n            this.keyPress = true;\n        }\n        if (this.allowKeyboard) {\n            if (e.action === 'ctrlPlusP') {\n                e.preventDefault();\n                this.print();\n            }\n            this.notify(events.keyPressed, e);\n        }\n    };\n    /**\n     * @param {Function[]} modules - Defines the modules\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.setInjectedModules = function (modules) {\n        this.injectedModules = modules;\n    };\n    Grid.prototype.updateColumnObject = function () {\n        prepareColumns(this.columns, this.enableColumnVirtualization, this);\n        setColumnIndex(this.columns);\n        this.initForeignColumn();\n        this.notify(events.autoCol, {});\n    };\n    Grid.prototype.refreshFrozenPosition = function (obj) {\n        if (obj && obj.isModeChg) {\n            this.refreshColumns();\n            this.notify(events.refreshResizePosition, {});\n        }\n        else {\n            this.refreshColumns();\n        }\n    };\n    /**\n     * Gets the foreign columns from Grid.\n     *\n     * @returns {Column[]} Returns Foreign key column\n     */\n    Grid.prototype.getForeignKeyColumns = function () {\n        var cols = this.enableColumnVirtualization ? this.columns : this.getColumns();\n        return cols.filter(function (col) {\n            return col.isForeignColumn();\n        });\n    };\n    /**\n     * @hidden\n     * @param {boolean} accurateHeight - Defines the accurate row height\n     * @returns {number} Returns row height\n     */\n    Grid.prototype.getRowHeight = function (accurateHeight) {\n        return this.rowHeight ? this.rowHeight : getRowHeight(this.element, accurateHeight);\n    };\n    /**\n     * Refreshes the Grid column changes.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refreshColumns = function () {\n        this.freezeColumnRefresh = true;\n        this.setFrozenCount();\n        this.updateFrozenColumnsWidth();\n        if (this.isFrozenGrid()) {\n            this.isPreventScrollEvent = true;\n        }\n        this.updateColumnObject();\n        this.checkLockColumns(this.getColumns());\n        this.refresh();\n        if (this.isFrozenGrid() && this.enableColumnVirtualization) {\n            var left = this.getContent().querySelector('.e-movablescrollbar').scrollLeft;\n            this.getHeaderContent().querySelector('.' + literals.headerContent).scrollLeft = left;\n            this.getContent().querySelector('.' + literals.content).scrollLeft = left;\n        }\n    };\n    /**\n     * Export Grid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} Returns the excelexport\n     */\n    Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    workbook, isBlob) {\n        if (this.exportGrids && this.exportGrids.length) {\n            var gridIds = this.exportGrids.slice();\n            return this.exportMultipleExcelGrids(gridIds, excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n        else {\n            return this.excelExportModule ?\n                this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n        }\n    };\n    /**\n     * Export Grid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} Returns csv export\n     */\n    Grid.prototype.csvExport = function (excelExportProperties, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule ?\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n    };\n    /**\n     * Export Grid data to PDF document.\n     *\n     * @param {pdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n     * @param {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     *\n     * @returns {Promise<any>} Returns pdfexport\n     */\n    Grid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        if (this.exportGrids && this.exportGrids.length) {\n            var gridIds = this.exportGrids.slice();\n            return this.exportMultiplePdfGrids(gridIds, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n        }\n        else {\n            return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n        }\n    };\n    Grid.prototype.exportMultiplePdfGrids = function (gridIds, pdfExportProperties, isMultipleExport, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    pdfDoc, isBlob) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var _this = this;\n        if (gridIds.length !== 0) {\n            var currentGridId = gridIds.shift();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var currentGridInstance = document.getElementById(currentGridId).ej2_instances[0];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var exportPromise = currentGridInstance.pdfExportModule ?\n                currentGridInstance.pdfExportModule.Map(currentGridInstance, pdfExportProperties, isMultipleExport, pdfDoc, isBlob)\n                : Promise.resolve();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return exportPromise.then(function (exportedGridResults) {\n                isMultipleExport = gridIds.length === 1 ? false : true;\n                return _this.exportMultiplePdfGrids(gridIds, pdfExportProperties, isMultipleExport, exportedGridResults, isBlob);\n            });\n        }\n        return null;\n    };\n    Grid.prototype.exportMultipleExcelGrids = function (gridIds, excelExportProperties, isMultipleExport, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    workbook, isBlob) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var _this = this;\n        if (gridIds.length !== 0) {\n            var currentGridId = gridIds.shift();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var currentGridInstance = document.getElementById(currentGridId).ej2_instances[0];\n            var exportPromise = currentGridInstance.excelExportModule ?\n                currentGridInstance.excelExportModule.Map(currentGridInstance, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return exportPromise.then(function (exportedGridResults) {\n                isMultipleExport = gridIds.length === 1 ? false : true;\n                return _this.exportMultipleExcelGrids(gridIds, excelExportProperties, isMultipleExport, exportedGridResults, isBlob);\n            });\n        }\n        return null;\n    };\n    /**\n     * Groups a column by column name.\n     *\n     * @param  {string} columnName - Defines the column name to group.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.groupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.groupColumn(columnName);\n        }\n    };\n    /**\n     * Expands all the grouped rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.groupExpandAll = function () {\n        if (this.groupModule) {\n            this.groupModule.expandAll();\n        }\n    };\n    /**\n     * Collapses all the grouped rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.groupCollapseAll = function () {\n        if (this.groupModule) {\n            this.groupModule.collapseAll();\n        }\n    };\n    /**\n     * Expands or collapses grouped rows by target element.\n     *\n     * @param  {Element} target - Defines the target element of the grouped row.\n     * @returns {void}\n     */\n    // public expandCollapseRows(target: Element): void {\n    //     if (this.groupModule) {\n    //         this.groupModule.expandCollapseRows(target);\n    //     }\n    // }\n    /**\n     * Clears all the grouped columns of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearGrouping = function () {\n        if (this.groupModule) {\n            this.groupModule.clearGrouping();\n        }\n    };\n    /**\n     * Ungroups a column by column name.\n     *\n     * {% codeBlock src='grid/ungroupColumn/index.md' %}{% endcodeBlock %}\n     *\n     * @param  {string} columnName - Defines the column name to ungroup.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.ungroupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.ungroupColumn(columnName);\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    Grid.prototype.scrollRefresh = function () {\n        var _this_1 = this;\n        var refresh = function () {\n            _this_1.scrollModule.refresh();\n            _this_1.off(events.contentReady, refresh);\n        };\n        this.on(events.contentReady, refresh, this);\n    };\n    /**\n     * Collapses a detail row with the given target.\n     *\n     * @param  {Element} target - Defines the expanded element to collapse.\n     * @returns {void}\n     */\n    // public detailCollapse(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.collapse(target);\n    //     }\n    // }\n    /**\n     * Collapses all the detail rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.detailCollapseAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.collapseAll();\n        }\n    };\n    /**\n     * Expands a detail row with the given target.\n     *\n     * @param  {Element} target - Defines the collapsed element to expand.\n     * @returns {void}\n     */\n    // public detailExpand(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.expand(target);\n    //     }\n    // }\n    /**\n     * Expands all the detail rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.detailExpandAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.expandAll();\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearCellSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearCellSelection();\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearRowSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearRowSelection();\n        }\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     *\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectCells = function (rowCellIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCells(rowCellIndexes);\n        }\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     *\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRowsByRange(startIndex, endIndex);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns whether context menu is open or not\n     */\n    Grid.prototype.isContextMenuOpen = function () {\n        return this.contextMenuModule && this.contextMenuModule.isOpen;\n    };\n    /**\n     * @param {Function} module - Defines the module\n     * @returns {boolean} return the injected modules\n     * @hidden\n     */\n    Grid.prototype.ensureModuleInjected = function (module) {\n        return this.getInjectedModules().indexOf(module) >= 0;\n    };\n    /**\n     * Destroys the given template reference.\n     *\n     * @param {string[]} propertyNames - Defines the collection of template name.\n     * @param {any} index - specifies the index\n     *\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Grid.prototype.destroyTemplate = function (propertyNames, index) {\n        this.clearTemplate(propertyNames, index);\n    };\n    /**\n     * @param {string | string[]} type - Defines the type\n     * @param {Object} args - Defines the arguments\n     * @returns {void}\n     * @hidden\n     * @private\n     */\n    Grid.prototype.log = function (type, args) {\n        var injectedModules = this.getInjectedModules();\n        var logger = injectedModules.find(function (item) { return item.name === 'Logger'; });\n        if (!logger) {\n            Grid_1.Inject(Logger);\n            this.enableLogger = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.injectModules();\n        }\n        // eslint-disable-next-line\n        this.loggerModule ? this.loggerModule.log(type, args) : (function () { return 0; })();\n    };\n    /**\n     * @param {Element} element - Defines the element\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.applyBiggerTheme = function (element) {\n        if (this.element.classList.contains('e-bigger')) {\n            element.classList.add('e-bigger');\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Object} Returns the previous row data\n     */\n    Grid.prototype.getPreviousRowData = function () {\n        var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n        return previousRowData;\n    };\n    /**\n     * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.hideScroll = function () {\n        var content = this.getContent().querySelector('.' + literals.content);\n        if (content.scrollHeight <= content.clientHeight) {\n            this.scrollModule.removePadding();\n            content.style.overflowY = 'auto';\n        }\n    };\n    /**\n     * Get row index by primary key or row data.\n     *\n     * @param  {string | Object} value - Defines the primary key value.\n     *\n     * @returns {number} Returns the index\n     */\n    Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        value = typeof value === 'object' ? value[\"\" + pkName] : value;\n        var rows = this.getRowsObject();\n        for (var i = 0; i < rows.length; i++) {\n            if (rows[parseInt(i.toString(), 10)].isDetailRow || rows[parseInt(i.toString(), 10)].isCaptionRow) {\n                continue;\n            }\n            var pKvalue = rows[parseInt(i.toString(), 10)].data[\"\" + pkName];\n            if (pkName.split('.').length > 1) {\n                pKvalue = performComplexDataOperation(pkName, rows[parseInt(i.toString(), 10)].data);\n            }\n            if (pKvalue === value) {\n                return rows[parseInt(i.toString(), 10)].index;\n            }\n        }\n        return -1;\n    };\n    /**\n     * @param {string} field - Defines the field name\n     * @param {boolean} isForeignKey - Defines the foreign key\n     * @returns {Column} returns the column\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByFieldFromAllCols = function (field, isForeignKey) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if ((!isForeignKey && field === gCols[parseInt(i.toString(), 10)].field) ||\n                (isForeignKey && gCols[parseInt(i.toString(), 10)].isForeignColumn() &&\n                    field === gCols[parseInt(i.toString(), 10)].foreignKeyValue)) {\n                column = gCols[parseInt(i.toString(), 10)];\n                break;\n            }\n        }\n        return column;\n    };\n    /**\n     * @param {string} uid - Defines the uid\n     * @returns {Column} returns the column\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if (uid === gCols[parseInt(i.toString(), 10)].uid) {\n                column = gCols[parseInt(i.toString(), 10)];\n            }\n        }\n        return column;\n    };\n    /**\n     * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n     *\n     * @returns {Object[] | Promise<Object>} Returns the filtered records\n     */\n    Grid.prototype.getFilteredRecords = function () {\n        if ((this.allowFiltering && this.filterSettings.columns.length) || this.searchSettings.key.length) {\n            var query = this.renderModule.data.generateQuery(true);\n            if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n                return this.renderModule.data.getData(this.dataSource, query);\n            }\n            else {\n                if (this.dataSource instanceof DataManager) {\n                    return this.dataSource.executeLocal(query);\n                }\n                else {\n                    return new DataManager(this.dataSource, query).executeLocal(query);\n                }\n            }\n        }\n        return [];\n    };\n    Grid.prototype.getUserAgent = function () {\n        var userAgent = Browser.userAgent.toLowerCase();\n        return /iphone|ipod|ipad|macintosh/.test(userAgent);\n    };\n    /**\n     * @param {TouchEventArgs} e - Defines the TouchEventArgs\n     * @returns {void}\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    // eslint-disable-next-line\n    Grid.prototype.tapEvent = function (e) {\n        if (this.getUserAgent()) {\n            if (!Global.timer) {\n                Global.timer = setTimeout(function () {\n                    Global.timer = null;\n                }, 300);\n            }\n            else {\n                clearTimeout(Global.timer);\n                Global.timer = null;\n                this.dblClickHandler(e);\n                this.notify(events.doubleTap, e);\n            }\n        }\n    };\n    /**\n     * @param {string} prefix - specifies the prefix\n     * @returns {string} returns the row uid\n     * @hidden\n     */\n    Grid.prototype.getRowUid = function (prefix) {\n        return \"\" + prefix + this.rowUid++;\n    };\n    /**\n     * @param {string} uid - specifies the uid\n     * @returns {Element} returns the element\n     * @hidden\n     */\n    Grid.prototype.getRowElementByUID = function (uid) {\n        var rowEle;\n        var rows = [];\n        var cntRows = [].slice.call(this.getContent().querySelector(literals.tbody).children);\n        if (this.frozenRows) {\n            rows = [].slice.call(this.getHeaderContent().querySelector(literals.tbody).children);\n            rows = rows.concat(cntRows);\n        }\n        else {\n            rows = cntRows;\n        }\n        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n            var row = rows_2[_i];\n            if (row.getAttribute('data-uid') === uid) {\n                rowEle = row;\n                break;\n            }\n        }\n        return rowEle;\n    };\n    /**\n     * Gets the hidden columns from the Grid.\n     *\n     * @returns {Column[]} Returns the Column\n     */\n    Grid.prototype.getHiddenColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible === false) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * Calculates the page size by parent element height\n     *\n     * @param {number | string } containerHeight - specifies the container height\n     * @returns {number} returns the page size\n     */\n    Grid.prototype.calculatePageSizeByParentHeight = function (containerHeight) {\n        if (this.allowPaging) {\n            if ((this.allowTextWrap && this.textWrapSettings.wrapMode === 'Header') || (!this.allowTextWrap)) {\n                var pagesize = 0;\n                if (containerHeight.indexOf('%') !== -1) {\n                    containerHeight = parseInt(containerHeight, 10) / 100 * this.element.clientHeight;\n                }\n                var nonContentHeight = this.getNoncontentHeight() + this.getRowHeight();\n                if (containerHeight > nonContentHeight) {\n                    var contentHeight = 0;\n                    contentHeight = containerHeight - this.getNoncontentHeight();\n                    pagesize = (contentHeight / this.getRowHeight());\n                }\n                if (pagesize > 0) {\n                    return Math.floor(pagesize);\n                }\n            }\n        }\n        return 0;\n    };\n    Grid.prototype.getNoncontentHeight = function () {\n        var height = 0;\n        if (this.getHeaderContent() && !isNullOrUndefined(this.getHeaderContent().clientHeight)) {\n            height += this.getHeaderContent().clientHeight;\n        }\n        if (this.toolbar && !isNullOrUndefined(this.element.querySelector('.e-toolbar').clientHeight)) {\n            height += this.element.querySelector('.e-toolbar').clientHeight;\n        }\n        if (this.allowPaging && !isNullOrUndefined(this.element.querySelector('.e-gridpager').clientHeight)) {\n            height += this.element.querySelector('.e-gridpager').clientHeight;\n        }\n        if (this.showColumnChooser && !isNullOrUndefined(this.element.querySelector('.e-columnheader').clientHeight)) {\n            height += this.element.querySelector('.e-columnheader').clientHeight;\n        }\n        if (this.allowGrouping && this.groupSettings.showDropArea && !isNullOrUndefined(this.element.querySelector('.e-groupdroparea').clientHeight)) {\n            height += this.element.querySelector('.e-groupdroparea').clientHeight;\n        }\n        if (this.aggregates.length > 0 && !isNullOrUndefined(this.element.querySelector('.e-summaryrow').clientHeight)) {\n            for (var i = 0; i < this.element.getElementsByClassName('e-summaryrow').length; i++) {\n                height += this.element.getElementsByClassName('e-summaryrow')[parseInt(i.toString(), 10)].clientHeight;\n            }\n        }\n        return height;\n    };\n    /**\n     *To perform aggregate operation on a column.\n     *\n     * @param  {AggregateColumnModel} summaryCol - Pass Aggregate Column details.\n     * @param  {Object} summaryData - Pass JSON Array for which its field values to be calculated.\n     *\n     * @returns {number} returns the summary values\n     */\n    Grid.prototype.getSummaryValues = function (summaryCol, summaryData) {\n        return DataUtil.aggregates[summaryCol.type.toLowerCase()](summaryData, summaryCol.field);\n    };\n    /**\n     * Sends a Post request to export Grid to Excel file in server side.\n     *\n     * @param  {string} url - Pass Url for server side excel export action.\n     *\n     * @param  {ExportHeaders} headers - The headers to include in the export request.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.serverExcelExport = function (url, headers) {\n        this.isExcel = true;\n        this.exportGrid(url, headers);\n    };\n    /**\n     * Sends a Post request to export Grid to Pdf file in server side.\n     *\n     * @param  {string} url - Pass Url for server side pdf export action.\n     *\n     * @param  {ExportHeaders} headers - The headers to include in the export request.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.serverPdfExport = function (url, headers) {\n        this.isExcel = false;\n        this.exportGrid(url, headers);\n    };\n    /**\n     * Sends a Post request to export Grid to CSV file in server side.\n     *\n     * @param  {string} url - Pass Url for server side csv export action.\n     *\n     * @param  {ExportHeaders} headers - The headers to include in the export request.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.serverCsvExport = function (url, headers) {\n        this.isExcel = true;\n        this.exportGrid(url, headers);\n    };\n    /**\n     * @param {string} url - Defines exporting url\n     * @param {ExportHeaders} headers - The optional headers for the export request.\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.exportGrid = function (url, headers) {\n        var _this_1 = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var grid = this;\n        var query = grid.getDataModule().generateQuery(true);\n        var state = new UrlAdaptor().processQuery(new DataManager({ url: '' }), query);\n        var queries = JSON.parse(state.data);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var gridModel = JSON.parse(this.addOnPersist(['allowGrouping', 'allowPaging', 'pageSettings', 'sortSettings', 'allowPdfExport', 'allowExcelExport', 'aggregates',\n            'filterSettings', 'groupSettings', 'columns', 'locale', 'searchSettings']));\n        var include = ['field', 'headerText', 'type', 'format', 'visible', 'foreignKeyValue', 'foreignKeyField',\n            'template', 'index', 'width', 'textAlign', 'headerTextAlign', 'columns'];\n        gridModel.filterSettings.columns = queries.where;\n        gridModel.searchSettings.fields = queries.search && queries.search[0]['fields'] || [];\n        gridModel.sortSettings.columns = queries.sorted;\n        gridModel.columns = this.setHeaderText(gridModel.columns, include);\n        var form = this.createElement('form', { id: 'ExportForm' });\n        form.style.display = 'none';\n        var gridInput = this.createElement('input', { id: 'gridInput', attrs: { name: 'gridModel' } });\n        gridInput.value = JSON.stringify(gridModel);\n        form.method = 'POST';\n        form.action = url;\n        form.appendChild(gridInput);\n        if (headers && headers.headers && Array.isArray(headers.headers)) {\n            headers.headers.forEach(function (header) {\n                Object.keys(header).forEach(function (key) {\n                    var value = typeof header[\"\" + key] === 'string' ? header[\"\" + key] : JSON.stringify(header[\"\" + key]);\n                    var headerInput = _this_1.createElement('input', { attrs: { name: key, value: value, type: 'hidden' } });\n                    form.appendChild(headerInput);\n                });\n            });\n        }\n        document.body.appendChild(form);\n        form.submit();\n        form.remove();\n    };\n    /**\n     * @param {Column[]} columns - Defines array of columns\n     * @param {string[]} include - Defines array of sting\n     * @returns {Column[]} returns array of columns\n     * @hidden\n     */\n    Grid.prototype.setHeaderText = function (columns, include) {\n        for (var i = 0; i < columns.length; i++) {\n            var column = this.getColumnByUid(columns[parseInt(i.toString(), 10)].uid);\n            columns[parseInt(i.toString(), 10)].headerText = column.headerText;\n            if (!isNullOrUndefined(column.template)) {\n                columns[parseInt(i.toString(), 10)].template = 'true';\n            }\n            if (columns[parseInt(i.toString(), 10)].format) {\n                columns[parseInt(i.toString(), 10)].format = getNumberFormat(this.getFormat(columns[parseInt(i.toString(), 10)].format), columns[parseInt(i.toString(), 10)].type, false, defaultCurrencyCode);\n                if (column.type === 'datetime' || column.type === 'date' || column.type === 'time') {\n                    columns[parseInt(i.toString(), 10)].format = columns[parseInt(i.toString(), 10)].format.toString().replace('AM/PM', 'tt');\n                }\n            }\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.setHeaderText(columns[parseInt(i.toString(), 10)].columns, include);\n            }\n            var keys = Object.keys(columns[parseInt(i.toString(), 10)]);\n            for (var j = 0; j < keys.length; j++) {\n                if (include.indexOf(keys[parseInt(j.toString(), 10)]) < 0) {\n                    delete columns[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                }\n            }\n        }\n        return columns;\n    };\n    Grid.prototype.getFormat = function (format) {\n        return typeof (format) === 'object' ? !isNullOrUndefined(format.format) ?\n            format.format : format.skeleton : format;\n    };\n    /**\n     * @hidden\n     * @returns {boolean} returns the isCollapseStateEnabled\n     */\n    Grid.prototype.isCollapseStateEnabled = function () {\n        var isExpanded = 'isExpanded';\n        return this[\"\" + isExpanded] === false;\n    };\n    /**\n     * @param {number} key - Defines the primary key value.\n     * @param {Object} rowData - Defines the rowData\n     * @returns {void}\n     */\n    Grid.prototype.updateRowValue = function (key, rowData) {\n        var args = {\n            requestType: 'save', data: rowData\n        };\n        this.showSpinner();\n        this.notify(events.updateData, args);\n        this.refresh();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.setForeignKeyData = function () {\n        this.dataBind();\n        var colpending = this.getDataModule().getForeignKeyDataState();\n        if (colpending.isPending) {\n            this.getDataModule().setForeignKeyDataState({});\n            colpending.resolver();\n        }\n        else {\n            this.getDataModule().setForeignKeyDataState({ isDataChanged: false });\n            if (this.contentModule || this.headerModule) {\n                this.renderModule.render();\n            }\n        }\n    };\n    /**\n     * @param {string} field - specifies the field\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.resetFilterDlgPosition = function (field) {\n        var header = this.getColumnHeaderByField(field);\n        if (header) {\n            var target = header.querySelector('.e-filtermenudiv');\n            var filterDlg = this.element.querySelector('.e-filter-popup');\n            if (target) {\n                var gClient = this.element.getBoundingClientRect();\n                var fClient = target.getBoundingClientRect();\n                if (filterDlg) {\n                    if ((filterDlg.offsetWidth + fClient.right) > gClient.right) {\n                        filterDlg.style.left = ((fClient.right - filterDlg.offsetWidth) - gClient.left).toString() + 'px';\n                    }\n                    else {\n                        filterDlg.style.left = (fClient.right - gClient.left).toString() + 'px';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {any} callBack - specifies the callBack method\n     * @returns {void}\n     * @hidden\n     */\n    // eslint-disable-next-line\n    Grid.prototype.renderTemplates = function (callBack) {\n        var isReactChild = this.parentDetails && this.parentDetails.parentInstObj && this.parentDetails.parentInstObj.isReact;\n        var isReactPrintGrid = this.printGridParent && this.printGridParent.isReact;\n        if ((isReactChild || isReactPrintGrid) && this['portals']) {\n            var parentInstObj = isReactPrintGrid ? this.printGridParent : this.parentDetails.parentInstObj;\n            parentInstObj['portals'] = parentInstObj['portals'].concat(this['portals']);\n            parentInstObj.renderTemplates(callBack);\n            this['portals'] = undefined;\n        }\n        else {\n            var portals = 'portals';\n            this.notify('reactTemplateRender', this[\"\" + portals]);\n            this.renderReactTemplates(callBack);\n        }\n    };\n    /**\n     * Apply the changes to the Grid without refreshing the rows.\n     *\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @returns {void}\n     */\n    Grid.prototype.batchUpdate = function (changes) {\n        this.processRowChanges(changes);\n    };\n    /**\n     * Apply the changes to the Grid in one batch after 50ms without refreshing the rows.\n     *\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @returns {void}\n     */\n    Grid.prototype.batchAsyncUpdate = function (changes) {\n        this.processBulkRowChanges(changes);\n    };\n    Grid.prototype.processBulkRowChanges = function (changes) {\n        var _this_1 = this;\n        if (!this.dataToBeUpdated) {\n            this.dataToBeUpdated = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n            setTimeout(function () {\n                _this_1.processRowChanges(_this_1.dataToBeUpdated);\n                _this_1.dataToBeUpdated = null;\n            }, this.asyncTimeOut);\n        }\n        else {\n            var loopstring = [literals.addedRecords, literals.changedRecords, literals.deletedRecords];\n            var keyField = this.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < loopstring.length; i++) {\n                if (changes[loopstring[parseInt(i.toString(), 10)]]) {\n                    compareChanges(this, changes, loopstring[parseInt(i.toString(), 10)], keyField);\n                }\n            }\n        }\n    };\n    Grid.prototype.processRowChanges = function (changes) {\n        var _this_1 = this;\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        changes = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n        var promise = this.getDataModule().saveChanges(changes, keyField, {}, this.getDataModule().generateQuery().requiresCount());\n        if (this.getDataModule().isRemote()) {\n            promise.then(function () {\n                _this_1.setNewData();\n            });\n        }\n        else {\n            this.setNewData();\n        }\n    };\n    Grid.prototype.setNewData = function () {\n        var _this_1 = this;\n        var oldValues = JSON.parse(JSON.stringify(this.getCurrentViewRecords()));\n        var getData = this.getDataModule().getData({}, this.getDataModule().generateQuery().requiresCount());\n        getData.then(function (e) {\n            _this_1.bulkRefresh(e.result, oldValues, e.count);\n        });\n    };\n    Grid.prototype.deleteRowElement = function (row) {\n        var tr = this.getRowElementByUID(row.uid);\n        remove(tr);\n    };\n    Grid.prototype.bulkRefresh = function (result, oldValues, count) {\n        var _this_1 = this;\n        var rowObj = this.getRowsObject();\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        var _loop_5 = function (i) {\n            if (!result.filter(function (e) { return e[\"\" + keyField] === rowObj[parseInt(i.toString(), 10)].data[\"\" + keyField]; }).length) {\n                this_5.deleteRowElement(rowObj[parseInt(i.toString(), 10)]);\n                rowObj.splice(i, 1);\n                i--;\n            }\n            out_i_1 = i;\n        };\n        var this_5 = this, out_i_1;\n        for (var i = 0; i < rowObj.length; i++) {\n            _loop_5(i);\n            i = out_i_1;\n        }\n        var _loop_6 = function (i) {\n            var isRowExist;\n            oldValues.filter(function (e) {\n                if (e[\"\" + keyField] === result[parseInt(i.toString(), 10)][\"\" + keyField]) {\n                    if (e !== result[parseInt(i.toString(), 10)]) {\n                        _this_1.setRowData(result[parseInt(i.toString(), 10)][\"\" + keyField], result[parseInt(i.toString(), 10)]);\n                    }\n                    isRowExist = true;\n                }\n            });\n            if (!isRowExist) {\n                this_6.renderRowElement(result[parseInt(i.toString(), 10)], i);\n            }\n        };\n        var this_6 = this;\n        for (var i = 0; i < result.length; i++) {\n            _loop_6(i);\n        }\n        this.currentViewData = result;\n        var rows = [].slice.call(this.getContentTable().getElementsByClassName(literals.row));\n        resetRowIndex(this, this.getRowsObject(), rows);\n        setRowElements(this);\n        if (this.allowPaging) {\n            this.notify(events.inBoundModelChanged, { module: 'pager', properties: { totalRecordsCount: count } });\n        }\n    };\n    Grid.prototype.renderRowElement = function (data, index) {\n        var row = new RowRenderer(this.serviceLocator, null, this);\n        var model = new RowModelGenerator(this);\n        var modelData = model.generateRows([data]);\n        var tr = row.render(modelData[0], this.getColumns());\n        this.addRowObject(modelData[0], index);\n        var tbody = this.getContentTable().querySelector(literals.tbody);\n        if (tbody.querySelector('.e-emptyrow')) {\n            var emptyRow = tbody.querySelector('.e-emptyrow');\n            emptyRow.parentNode.removeChild(emptyRow);\n            if (this.frozenRows && this.element.querySelector('.e-frozenrow-empty')) {\n                this.element.querySelector('.e-frozenrow-empty').classList.remove('e-frozenrow-empty');\n            }\n        }\n        if (this.frozenRows && index < this.frozenRows) {\n            tbody = this.getHeaderContent().querySelector(literals.tbody);\n        }\n        else {\n            tbody = this.getContent().querySelector(literals.tbody);\n        }\n        tbody = this.getContent().querySelector(literals.tbody);\n        tbody.appendChild(tr);\n    };\n    Grid.prototype.addRowObject = function (row, index) {\n        this.getRowsObject().splice(index, 1, row);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.updateVisibleExpandCollapseRows = function () {\n        var rows = this.getRowsObject();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if ((rows[parseInt(i.toString(), 10)].isDataRow || rows[parseInt(i.toString(), 10)].isAggregateRow)\n                && this.getRowElementByUID(rows[parseInt(i.toString(), 10)].uid)\n                && this.getRowElementByUID(rows[parseInt(i.toString(), 10)].uid).style.display === 'none') {\n                rows[parseInt(i.toString(), 10)].visible = false;\n            }\n            else {\n                rows[parseInt(i.toString(), 10)].visible = true;\n            }\n        }\n    };\n    /**\n     * Method to sanitize any suspected untrusted strings and scripts before rendering them.\n     *\n     * @param {string} value - Specifies the html value to sanitize\n     * @returns {string} Returns the sanitized html string\n     * @hidden\n     */\n    Grid.prototype.sanitize = function (value) {\n        if (this.enableHtmlSanitizer) {\n            return SanitizeHtmlHelper.sanitize(value);\n        }\n        return value;\n    };\n    /**\n     * @param {string | number} height - specifies the height\n     * @returns {number | string} - specifies the height number\n     * @hidden\n     */\n    Grid.prototype.getHeight = function (height) {\n        if (!Number.isInteger(height) && height.indexOf('%') !== -1) {\n            height = parseInt(height, 10) / 100 * this.element.clientHeight;\n        }\n        else if (!Number.isInteger(height) && this.height !== 'auto') {\n            height = parseInt(height, 10);\n        }\n        else {\n            height = this.height;\n        }\n        return height;\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right content\n\n     */\n    Grid.prototype.getFrozenRightContent = function () {\n        return this.contentModule.getPanel();\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right header\n\n     */\n    Grid.prototype.getFrozenRightHeader = function () {\n        return this.headerModule.getPanel();\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns movable header tbody\n\n     */\n    Grid.prototype.getMovableHeaderTbody = function () {\n        return this.getHeaderContent().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns movable content tbody\n\n     */\n    Grid.prototype.getMovableContentTbody = function () {\n        return this.getContent().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen header tbody\n\n     */\n    Grid.prototype.getFrozenHeaderTbody = function () {\n        return this.getHeaderContent().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen left content tbody\n\n     */\n    Grid.prototype.getFrozenLeftContentTbody = function () {\n        return this.getContent().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right header tbody\n\n     */\n    Grid.prototype.getFrozenRightHeaderTbody = function () {\n        return this.getHeaderContent().querySelector(literals.tbody);\n    };\n    /**\n     * @returns {Element} returns frozen right content tbody\n\n     * @hidden\n     */\n    Grid.prototype.getFrozenRightContentTbody = function () {\n        return this.getContent().querySelector(literals.tbody);\n    };\n    /**\n     * @param {boolean} isCustom - Defines custom filter dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.showResponsiveCustomFilter = function (isCustom) {\n        if (this.filterModule) {\n            this.filterModule.showCustomFilter(isCustom || this.rowRenderingMode === 'Vertical');\n        }\n    };\n    /**\n     * @param {boolean} isCustom - Defines custom sort dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.showResponsiveCustomSort = function (isCustom) {\n        if (this.sortModule) {\n            this.sortModule.showCustomSort(isCustom || this.rowRenderingMode === 'Vertical');\n        }\n    };\n    /**\n     * @param {boolean} isCustom - Defines custom column chooser dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.showResponsiveCustomColumnChooser = function (isCustom) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.showCustomColumnChooser(isCustom || this.rowRenderingMode === 'Vertical');\n        }\n    };\n    /**\n     * To manually show the vertical row mode filter dialog\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showAdaptiveFilterDialog = function () {\n        if (this.enableAdaptiveUI) {\n            this.showResponsiveCustomFilter(true);\n        }\n    };\n    /**\n     * To manually show the vertical row sort filter dialog\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showAdaptiveSortDialog = function () {\n        if (this.enableAdaptiveUI) {\n            this.showResponsiveCustomSort(true);\n        }\n    };\n    /**\n     * @param {boolean} isColVirtualization - Defines column virtualization\n     * @returns {Column[]} returns array of column models\n     * @hidden\n     */\n    Grid.prototype.getCurrentVisibleColumns = function (isColVirtualization) {\n        var cols = [];\n        var gridCols = isColVirtualization ? this.getColumns() : this.columnModel;\n        for (var _i = 0, gridCols_1 = gridCols; _i < gridCols_1.length; _i++) {\n            var col = gridCols_1[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    Grid.prototype.enableInfiniteAggrgate = function () {\n        if (this.enableInfiniteScrolling && this.groupSettings.columns.length && !this.groupSettings.disablePageWiseAggregates\n            && !this.groupSettings.enableLazyLoading) {\n            this.setProperties({ groupSettings: { disablePageWiseAggregates: true } }, true);\n        }\n    };\n    var Grid_1;\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"currentViewData\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"parentDetails\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"showHider\", void 0);\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableStickyHeader\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], Grid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Complex({}, ResizeSettings)\n    ], Grid.prototype, \"resizeSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Grid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, LoadingIndicator)\n    ], Grid.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableVirtualMaskRow\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], Grid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], Grid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], Grid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], Grid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(-1)\n    ], Grid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], Grid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Grid.prototype, \"rowRenderingMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property('Both')\n    ], Grid.prototype, \"adaptiveUIMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], Grid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], Grid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"autoFit\", void 0);\n    __decorate([\n        Complex({}, GroupSettings)\n    ], Grid.prototype, \"groupSettings\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], Grid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], Grid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Complex({}, ColumnChooserSettings)\n    ], Grid.prototype, \"columnChooserSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableHeaderFocus\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"width\", void 0);\n    __decorate([\n        Property('Default')\n    ], Grid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"emptyRecordTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"childGrid\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"queryString\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], Grid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property('Expanded')\n    ], Grid.prototype, \"hierarchyPrintMode\", void 0);\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], Grid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"query\", void 0);\n    __decorate([\n        Property('USD')\n    ], Grid.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"exportGrids\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('')\n    ], Grid.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('All')\n    ], Grid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Property({})\n    ], Grid.prototype, \"currentAction\", void 0);\n    __decorate([\n        Property('')\n    ], Grid.prototype, \"ej2StatePersistenceVersion\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"recordClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfAggregateQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelAggregateQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportDetailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportDetailTemplate\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeOpenAdaptiveDialog\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"commandClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"keyPressed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"checkBoxChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeAutoFill\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportGroupCaption\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"lazyLoadGroupExpand\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"lazyLoadGroupCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeDetailTemplateDetach\", void 0);\n    Grid = Grid_1 = __decorate([\n        NotifyPropertyChanges\n    ], Grid);\n    return Grid;\n}(Component));\nexport { Grid };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}