{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { Row } from '../models/row';\nimport { isNullOrUndefined, extend, setValue } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupSummaryModelGenerator, CaptionSummaryModelGenerator } from '../services/summary-model-generator';\nimport { getForeignData, getUid } from '../../grid/base/util';\n/**\n * GroupModelGenerator is used to generate group caption rows and data rows.\n *\n * @hidden\n */\nvar GroupModelGenerator = /** @class */function (_super) {\n  __extends(GroupModelGenerator, _super);\n  function GroupModelGenerator(parent) {\n    var _this = _super.call(this, parent) || this;\n    _this.rows = [];\n    /** @hidden */\n    _this.index = 0;\n    _this.infiniteChildCount = 0;\n    _this.renderInfiniteAgg = true;\n    _this.parent = parent;\n    _this.summaryModelGen = new GroupSummaryModelGenerator(parent);\n    _this.captionModelGen = new CaptionSummaryModelGenerator(parent);\n    return _this;\n  }\n  GroupModelGenerator.prototype.generateRows = function (data, args) {\n    if (this.parent.groupSettings.columns.length === 0) {\n      return _super.prototype.generateRows.call(this, data, args);\n    }\n    this.isInfiniteScroll = args.requestType === 'infiniteScroll';\n    this.rows = [];\n    this.index = this.parent.enableVirtualization || this.isInfiniteScroll ? args.startIndex : 0;\n    for (var i = 0, len = data.length; i < len; i++) {\n      this.infiniteChildCount = 0;\n      this.renderInfiniteAgg = true;\n      this.getGroupedRecords(0, data[parseInt(i.toString(), 10)], data.level, i, undefined, this.rows.length);\n    }\n    this.index = 0;\n    if (this.parent.isCollapseStateEnabled()) {\n      this.ensureRowVisibility();\n    }\n    return this.rows;\n  };\n  GroupModelGenerator.prototype.getGroupedRecords = function (index, data, raw, parentid, childId, tIndex, parentUid) {\n    var _a;\n    var level = raw;\n    if (isNullOrUndefined(data.items)) {\n      if (isNullOrUndefined(data.GroupGuid)) {\n        this.rows = this.rows.concat(this.generateDataRows(data, index, parentid, this.rows.length, parentUid));\n      } else {\n        for (var j = 0, len = data.length; j < len; j++) {\n          this.getGroupedRecords(index, data[parseInt(j.toString(), 10)], data.level, parentid, index, this.rows.length, parentUid);\n        }\n      }\n    } else {\n      var preCaption = void 0;\n      var captionRow = this.generateCaptionRow(data, index, parentid, childId, tIndex, parentUid);\n      if (this.isInfiniteScroll) {\n        preCaption = this.getPreCaption(index, captionRow.data.key);\n      }\n      if (!preCaption) {\n        this.rows = this.rows.concat(captionRow);\n      } else {\n        captionRow.uid = preCaption.uid;\n      }\n      if (data.items && data.items.length) {\n        this.getGroupedRecords(index + 1, data.items, data.items.level, parentid, index + 1, this.rows.length, captionRow.uid);\n      }\n      if (this.parent.aggregates.length && this.isRenderAggregate(captionRow)) {\n        var rowCnt = this.rows.length;\n        (_a = this.rows).push.apply(_a, this.summaryModelGen.generateRows(data, {\n          level: level,\n          parentUid: captionRow.uid\n        }));\n        for (var i = rowCnt - 1; i >= 0; i--) {\n          if (this.rows[parseInt(i.toString(), 10)].isCaptionRow) {\n            this.rows[parseInt(i.toString(), 10)].aggregatesCount = this.rows.length - rowCnt;\n          } else if (!this.rows[parseInt(i.toString(), 10)].isCaptionRow && !this.rows[parseInt(i.toString(), 10)].isDataRow) {\n            break;\n          }\n        }\n      }\n      if (preCaption) {\n        this.setInfiniteRowVisibility(preCaption);\n      }\n    }\n  };\n  GroupModelGenerator.prototype.isRenderAggregate = function (data) {\n    if (this.parent.enableInfiniteScrolling) {\n      if (!this.renderInfiniteAgg) {\n        return false;\n      }\n      this.getPreCaption(data.indent, data.data.key);\n      this.renderInfiniteAgg = data.data.count === this.infiniteChildCount;\n      return this.renderInfiniteAgg;\n    }\n    return !this.parent.enableInfiniteScrolling;\n  };\n  GroupModelGenerator.prototype.getPreCaption = function (indent, key) {\n    var rowObj = this.parent.getRowsObject().concat(this.rows);\n    var preCap;\n    this.infiniteChildCount = 0;\n    var i = rowObj.length;\n    while (i--) {\n      if (rowObj[parseInt(i.toString(), 10)].isCaptionRow && rowObj[parseInt(i.toString(), 10)].indent === indent) {\n        var groupKey = rowObj[parseInt(i.toString(), 10)].data.key;\n        if (groupKey && groupKey.toString() === key.toString() && groupKey instanceof Date || groupKey === key) {\n          preCap = rowObj[parseInt(i.toString(), 10)];\n        }\n      }\n      if (rowObj[parseInt(i.toString(), 10)].indent === indent || rowObj[parseInt(i.toString(), 10)].indent < indent) {\n        break;\n      }\n      if (rowObj[parseInt(i.toString(), 10)].indent === indent + 1) {\n        this.infiniteChildCount++;\n      }\n    }\n    return preCap;\n  };\n  GroupModelGenerator.prototype.getCaptionRowCells = function (field, indent, data) {\n    var cells = [];\n    var visibles = [];\n    var column = this.parent.getColumnByField(field);\n    var indexes = this.parent.getColumnIndexesInView();\n    if (this.parent.enableColumnVirtualization) {\n      column = this.parent.columns.filter(function (c) {\n        return c.field === field;\n      })[0];\n    }\n    var groupedLen = this.parent.groupSettings.columns.length;\n    var gObj = this.parent;\n    if (!this.parent.enableColumnVirtualization || indexes.indexOf(indent) !== -1) {\n      for (var i = 0; i < indent; i++) {\n        cells.push(this.generateIndentCell());\n      }\n      cells.push(this.generateCell({}, null, CellType.Expand));\n    }\n    indent = this.parent.enableColumnVirtualization ? 1 : this.parent.getVisibleColumns().length + groupedLen + (gObj.detailTemplate || gObj.childGrid ? 1 : 0) - indent + (this.parent.getVisibleColumns().length ? -1 : 0);\n    //Captionsummary cells will be added here.\n    if (this.parent.aggregates.length && !this.captionModelGen.isEmpty()) {\n      var captionCells = this.captionModelGen.generateRows(data)[0];\n      extend(data, captionCells.data);\n      var cIndex_1 = 0;\n      captionCells.cells.some(function (cell, index) {\n        cIndex_1 = index;\n        return cell.visible && cell.isDataCell;\n      });\n      visibles = captionCells.cells.slice(cIndex_1).filter(function (cell) {\n        return cell.visible;\n      });\n      if (captionCells.visible && visibles[0].column.field === this.parent.getVisibleColumns()[0].field) {\n        visibles = visibles.slice(1);\n      }\n      if (this.parent.getVisibleColumns().length === 1) {\n        visibles = [];\n      }\n      indent = indent - visibles.length;\n    }\n    var cols = !this.parent.enableColumnVirtualization ? [column] : this.parent.getColumns();\n    var wFlag = true;\n    for (var j = 0; j < cols.length; j++) {\n      var tmpFlag = wFlag && indexes.indexOf(indent) !== -1;\n      if (tmpFlag) {\n        wFlag = false;\n      }\n      var cellType = !this.parent.enableColumnVirtualization || tmpFlag ? CellType.GroupCaption : CellType.GroupCaptionEmpty;\n      indent = this.parent.enableColumnVirtualization && cellType === CellType.GroupCaption ? indent + groupedLen : indent;\n      if (gObj.isRowDragable()) {\n        indent++;\n      }\n      cells.push(this.generateCell(column, null, cellType, indent));\n    }\n    cells.push.apply(cells, visibles);\n    return cells;\n  };\n  /**\n   * @param {GroupedData} data - specifies the data\n   * @param {number} indent - specifies the indent\n   * @param {number} parentID - specifies the parentID\n   * @param {number} childID - specifies the childID\n   * @param {number} tIndex - specifies the TIndex\n   * @param {string} parentUid - specifies the ParentUid\n   * @returns {Row<Column>} returns the Row object\n   * @hidden\n   */\n  GroupModelGenerator.prototype.generateCaptionRow = function (data, indent, parentID, childID, tIndex, parentUid) {\n    var options = {};\n    var records = 'records';\n    var col = this.parent.getColumnByField(data.field);\n    options.data = extend({}, data);\n    if (col) {\n      options.data.field = data.field;\n    }\n    options.isDataRow = false;\n    options.isExpand = !this.parent.groupSettings.enableLazyLoading && !this.parent.isCollapseStateEnabled();\n    options.parentGid = parentID;\n    options.childGid = childID;\n    options.tIndex = tIndex;\n    options.isCaptionRow = true;\n    options.parentUid = parentUid;\n    options.gSummary = !isNullOrUndefined(data.items[\"\" + records]) ? data.items[\"\" + records].length : data.items.length;\n    options.uid = getUid('grid-row');\n    var row = new Row(options);\n    row.indent = indent;\n    this.getForeignKeyData(row);\n    row.cells = this.getCaptionRowCells(data.field, indent, row.data);\n    return row;\n  };\n  GroupModelGenerator.prototype.getForeignKeyData = function (row) {\n    var data = row.data;\n    var col = this.parent.getColumnByField(data.field);\n    if (col && col.isForeignColumn && col.isForeignColumn()) {\n      var fkValue = isNullOrUndefined(data.key) ? '' : col.valueAccessor(col.foreignKeyValue, getForeignData(col, {}, data.key)[0], col);\n      setValue('foreignKey', fkValue, row.data);\n    }\n  };\n  /**\n   * @param {Object[]} data - specifies the data\n   * @param {number} indent - specifies the indent\n   * @param {number} childID - specifies the childID\n   * @param {number} tIndex - specifies the tIndex\n   * @param {string} parentUid - specifies the ParentUid\n   * @returns {Row<Column>[]} returns the row object\n   * @hidden\n   */\n  GroupModelGenerator.prototype.generateDataRows = function (data, indent, childID, tIndex, parentUid) {\n    var rows = [];\n    var indexes = this.parent.getColumnIndexesInView();\n    for (var i = 0, len = data.length; i < len; i++, tIndex++) {\n      rows[parseInt(i.toString(), 10)] = this.generateRow(data[parseInt(i.toString(), 10)], this.index, i ? undefined : 'e-firstchildrow', indent, childID, tIndex, parentUid);\n      for (var j = 0; j < indent; j++) {\n        if (this.parent.enableColumnVirtualization && indexes.indexOf(indent) === -1) {\n          continue;\n        }\n        rows[parseInt(i.toString(), 10)].cells.unshift(this.generateIndentCell());\n      }\n      this.index++;\n    }\n    return rows;\n  };\n  GroupModelGenerator.prototype.generateIndentCell = function () {\n    return this.generateCell({}, null, CellType.Indent);\n  };\n  GroupModelGenerator.prototype.refreshRows = function (input) {\n    var indexes = this.parent.getColumnIndexesInView();\n    for (var i = 0; i < input.length; i++) {\n      if (input[parseInt(i.toString(), 10)].isDataRow) {\n        input[parseInt(i.toString(), 10)].cells = this.generateCells(input[parseInt(i.toString(), 10)]);\n        for (var j = 0; j < input[parseInt(i.toString(), 10)].indent; j++) {\n          if (this.parent.enableColumnVirtualization && indexes.indexOf(input[parseInt(i.toString(), 10)].indent) === -1) {\n            continue;\n          }\n          input[parseInt(i.toString(), 10)].cells.unshift(this.generateIndentCell());\n        }\n      } else {\n        var cRow = this.generateCaptionRow(input[parseInt(i.toString(), 10)].data, input[parseInt(i.toString(), 10)].indent);\n        input[parseInt(i.toString(), 10)].cells = cRow.cells;\n      }\n    }\n    return input;\n  };\n  GroupModelGenerator.prototype.setInfiniteRowVisibility = function (caption) {\n    if (!caption.isExpand || caption.visible === false) {\n      for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n        var row = _a[_i];\n        if (row.parentUid === caption.uid) {\n          row.visible = false;\n          if (row.isCaptionRow) {\n            this.setInfiniteRowVisibility(row);\n          }\n        }\n      }\n    }\n  };\n  GroupModelGenerator.prototype.ensureRowVisibility = function () {\n    for (var i = 0; i < this.rows.length; i++) {\n      var row = this.rows[parseInt(i.toString(), 10)];\n      if (!row.isCaptionRow) {\n        continue;\n      }\n      for (var j = i + 1; j < this.rows.length; j++) {\n        var childRow = this.rows[parseInt(j.toString(), 10)];\n        if (row.uid === childRow.parentUid) {\n          this.rows[parseInt(j.toString(), 10)].visible = row.isExpand;\n        }\n      }\n    }\n  };\n  return GroupModelGenerator;\n}(RowModelGenerator);\nexport { GroupModelGenerator };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Row","isNullOrUndefined","extend","setValue","CellType","RowModelGenerator","GroupSummaryModelGenerator","CaptionSummaryModelGenerator","getForeignData","getUid","GroupModelGenerator","_super","parent","_this","call","rows","index","infiniteChildCount","renderInfiniteAgg","summaryModelGen","captionModelGen","generateRows","data","args","groupSettings","columns","length","isInfiniteScroll","requestType","enableVirtualization","startIndex","i","len","getGroupedRecords","parseInt","toString","level","undefined","isCollapseStateEnabled","ensureRowVisibility","raw","parentid","childId","tIndex","parentUid","_a","items","GroupGuid","concat","generateDataRows","j","preCaption","captionRow","generateCaptionRow","getPreCaption","key","uid","aggregates","isRenderAggregate","rowCnt","push","apply","isCaptionRow","aggregatesCount","isDataRow","setInfiniteRowVisibility","enableInfiniteScrolling","indent","count","rowObj","getRowsObject","preCap","groupKey","Date","getCaptionRowCells","field","cells","visibles","column","getColumnByField","indexes","getColumnIndexesInView","enableColumnVirtualization","filter","c","groupedLen","gObj","indexOf","generateIndentCell","generateCell","Expand","getVisibleColumns","detailTemplate","childGrid","isEmpty","captionCells","cIndex_1","some","cell","visible","isDataCell","slice","cols","getColumns","wFlag","tmpFlag","cellType","GroupCaption","GroupCaptionEmpty","isRowDragable","parentID","childID","options","records","col","isExpand","enableLazyLoading","parentGid","childGid","gSummary","row","getForeignKeyData","isForeignColumn","fkValue","valueAccessor","foreignKeyValue","generateRow","unshift","Indent","refreshRows","input","generateCells","cRow","caption","_i","childRow"],"sources":["D:/weektable/frontend/node_modules/@syncfusion/ej2-grids/src/grid/services/group-model-generator.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Row } from '../models/row';\nimport { isNullOrUndefined, extend, setValue } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupSummaryModelGenerator, CaptionSummaryModelGenerator } from '../services/summary-model-generator';\nimport { getForeignData, getUid } from '../../grid/base/util';\n/**\n * GroupModelGenerator is used to generate group caption rows and data rows.\n *\n * @hidden\n */\nvar GroupModelGenerator = /** @class */ (function (_super) {\n    __extends(GroupModelGenerator, _super);\n    function GroupModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.rows = [];\n        /** @hidden */\n        _this.index = 0;\n        _this.infiniteChildCount = 0;\n        _this.renderInfiniteAgg = true;\n        _this.parent = parent;\n        _this.summaryModelGen = new GroupSummaryModelGenerator(parent);\n        _this.captionModelGen = new CaptionSummaryModelGenerator(parent);\n        return _this;\n    }\n    GroupModelGenerator.prototype.generateRows = function (data, args) {\n        if (this.parent.groupSettings.columns.length === 0) {\n            return _super.prototype.generateRows.call(this, data, args);\n        }\n        this.isInfiniteScroll = (args.requestType === 'infiniteScroll');\n        this.rows = [];\n        this.index = this.parent.enableVirtualization || this.isInfiniteScroll ? args.startIndex : 0;\n        for (var i = 0, len = data.length; i < len; i++) {\n            this.infiniteChildCount = 0;\n            this.renderInfiniteAgg = true;\n            this.getGroupedRecords(0, data[parseInt(i.toString(), 10)], data.level, i, undefined, this.rows.length);\n        }\n        this.index = 0;\n        if (this.parent.isCollapseStateEnabled()) {\n            this.ensureRowVisibility();\n        }\n        return this.rows;\n    };\n    GroupModelGenerator.prototype.getGroupedRecords = function (index, data, raw, parentid, childId, tIndex, parentUid) {\n        var _a;\n        var level = raw;\n        if (isNullOrUndefined(data.items)) {\n            if (isNullOrUndefined(data.GroupGuid)) {\n                this.rows = this.rows.concat(this.generateDataRows(data, index, parentid, this.rows.length, parentUid));\n            }\n            else {\n                for (var j = 0, len = data.length; j < len; j++) {\n                    this.getGroupedRecords(index, data[parseInt(j.toString(), 10)], data.level, parentid, index, this.rows.length, parentUid);\n                }\n            }\n        }\n        else {\n            var preCaption = void 0;\n            var captionRow = this.generateCaptionRow(data, index, parentid, childId, tIndex, parentUid);\n            if (this.isInfiniteScroll) {\n                preCaption = this.getPreCaption(index, captionRow.data.key);\n            }\n            if (!preCaption) {\n                this.rows = this.rows.concat(captionRow);\n            }\n            else {\n                captionRow.uid = preCaption.uid;\n            }\n            if (data.items && data.items.length) {\n                this.getGroupedRecords(index + 1, data.items, data.items.level, parentid, index + 1, this.rows.length, captionRow.uid);\n            }\n            if (this.parent.aggregates.length && this.isRenderAggregate(captionRow)) {\n                var rowCnt = this.rows.length;\n                (_a = this.rows).push.apply(_a, this.summaryModelGen.generateRows(data, { level: level, parentUid: captionRow.uid }));\n                for (var i = rowCnt - 1; i >= 0; i--) {\n                    if (this.rows[parseInt(i.toString(), 10)].isCaptionRow) {\n                        this.rows[parseInt(i.toString(), 10)].aggregatesCount = this.rows.length - rowCnt;\n                    }\n                    else if (!this.rows[parseInt(i.toString(), 10)].isCaptionRow && !this.rows[parseInt(i.toString(), 10)].isDataRow) {\n                        break;\n                    }\n                }\n            }\n            if (preCaption) {\n                this.setInfiniteRowVisibility(preCaption);\n            }\n        }\n    };\n    GroupModelGenerator.prototype.isRenderAggregate = function (data) {\n        if (this.parent.enableInfiniteScrolling) {\n            if (!this.renderInfiniteAgg) {\n                return false;\n            }\n            this.getPreCaption(data.indent, data.data.key);\n            this.renderInfiniteAgg = data.data.count === this.infiniteChildCount;\n            return this.renderInfiniteAgg;\n        }\n        return !this.parent.enableInfiniteScrolling;\n    };\n    GroupModelGenerator.prototype.getPreCaption = function (indent, key) {\n        var rowObj = this.parent.getRowsObject().concat(this.rows);\n        var preCap;\n        this.infiniteChildCount = 0;\n        var i = rowObj.length;\n        while (i--) {\n            if (rowObj[parseInt(i.toString(), 10)].isCaptionRow && rowObj[parseInt(i.toString(), 10)].indent === indent) {\n                var groupKey = rowObj[parseInt(i.toString(), 10)].data.key;\n                if ((groupKey && groupKey.toString() === key.toString() && groupKey instanceof Date) || groupKey === key) {\n                    preCap = rowObj[parseInt(i.toString(), 10)];\n                }\n            }\n            if (rowObj[parseInt(i.toString(), 10)].indent === indent || rowObj[parseInt(i.toString(), 10)].indent < indent) {\n                break;\n            }\n            if (rowObj[parseInt(i.toString(), 10)].indent === indent + 1) {\n                this.infiniteChildCount++;\n            }\n        }\n        return preCap;\n    };\n    GroupModelGenerator.prototype.getCaptionRowCells = function (field, indent, data) {\n        var cells = [];\n        var visibles = [];\n        var column = this.parent.getColumnByField(field);\n        var indexes = this.parent.getColumnIndexesInView();\n        if (this.parent.enableColumnVirtualization) {\n            column = this.parent.columns.filter(function (c) { return c.field === field; })[0];\n        }\n        var groupedLen = this.parent.groupSettings.columns.length;\n        var gObj = this.parent;\n        if (!this.parent.enableColumnVirtualization || indexes.indexOf(indent) !== -1) {\n            for (var i = 0; i < indent; i++) {\n                cells.push(this.generateIndentCell());\n            }\n            cells.push(this.generateCell({}, null, CellType.Expand));\n        }\n        indent = this.parent.enableColumnVirtualization ? 1 :\n            (this.parent.getVisibleColumns().length + groupedLen + (gObj.detailTemplate || gObj.childGrid ? 1 : 0) -\n                indent + (this.parent.getVisibleColumns().length ? -1 : 0));\n        //Captionsummary cells will be added here.\n        if (this.parent.aggregates.length && !this.captionModelGen.isEmpty()) {\n            var captionCells = this.captionModelGen.generateRows(data)[0];\n            extend(data, captionCells.data);\n            var cIndex_1 = 0;\n            captionCells.cells.some(function (cell, index) { cIndex_1 = index; return cell.visible && cell.isDataCell; });\n            visibles = captionCells.cells.slice(cIndex_1).filter(function (cell) { return cell.visible; });\n            if (captionCells.visible && visibles[0].column.field === this.parent.getVisibleColumns()[0].field) {\n                visibles = visibles.slice(1);\n            }\n            if (this.parent.getVisibleColumns().length === 1) {\n                visibles = [];\n            }\n            indent = indent - visibles.length;\n        }\n        var cols = (!this.parent.enableColumnVirtualization ? [column] : this.parent.getColumns());\n        var wFlag = true;\n        for (var j = 0; j < cols.length; j++) {\n            var tmpFlag = wFlag && indexes.indexOf(indent) !== -1;\n            if (tmpFlag) {\n                wFlag = false;\n            }\n            var cellType = !this.parent.enableColumnVirtualization || tmpFlag ?\n                CellType.GroupCaption : CellType.GroupCaptionEmpty;\n            indent = this.parent.enableColumnVirtualization && cellType === CellType.GroupCaption ? indent + groupedLen : indent;\n            if (gObj.isRowDragable()) {\n                indent++;\n            }\n            cells.push(this.generateCell(column, null, cellType, indent));\n        }\n        cells.push.apply(cells, visibles);\n        return cells;\n    };\n    /**\n     * @param {GroupedData} data - specifies the data\n     * @param {number} indent - specifies the indent\n     * @param {number} parentID - specifies the parentID\n     * @param {number} childID - specifies the childID\n     * @param {number} tIndex - specifies the TIndex\n     * @param {string} parentUid - specifies the ParentUid\n     * @returns {Row<Column>} returns the Row object\n     * @hidden\n     */\n    GroupModelGenerator.prototype.generateCaptionRow = function (data, indent, parentID, childID, tIndex, parentUid) {\n        var options = {};\n        var records = 'records';\n        var col = this.parent.getColumnByField(data.field);\n        options.data = extend({}, data);\n        if (col) {\n            options.data.field = data.field;\n        }\n        options.isDataRow = false;\n        options.isExpand = !this.parent.groupSettings.enableLazyLoading && !this.parent.isCollapseStateEnabled();\n        options.parentGid = parentID;\n        options.childGid = childID;\n        options.tIndex = tIndex;\n        options.isCaptionRow = true;\n        options.parentUid = parentUid;\n        options.gSummary = !isNullOrUndefined(data.items[\"\" + records]) ? data.items[\"\" + records].length : data.items.length;\n        options.uid = getUid('grid-row');\n        var row = new Row(options);\n        row.indent = indent;\n        this.getForeignKeyData(row);\n        row.cells = this.getCaptionRowCells(data.field, indent, row.data);\n        return row;\n    };\n    GroupModelGenerator.prototype.getForeignKeyData = function (row) {\n        var data = row.data;\n        var col = this.parent.getColumnByField(data.field);\n        if (col && col.isForeignColumn && col.isForeignColumn()) {\n            var fkValue = (isNullOrUndefined(data.key) ? '' : col.valueAccessor(col.foreignKeyValue, getForeignData(col, {}, data.key)[0], col));\n            setValue('foreignKey', fkValue, row.data);\n        }\n    };\n    /**\n     * @param {Object[]} data - specifies the data\n     * @param {number} indent - specifies the indent\n     * @param {number} childID - specifies the childID\n     * @param {number} tIndex - specifies the tIndex\n     * @param {string} parentUid - specifies the ParentUid\n     * @returns {Row<Column>[]} returns the row object\n     * @hidden\n     */\n    GroupModelGenerator.prototype.generateDataRows = function (data, indent, childID, tIndex, parentUid) {\n        var rows = [];\n        var indexes = this.parent.getColumnIndexesInView();\n        for (var i = 0, len = data.length; i < len; i++, tIndex++) {\n            rows[parseInt(i.toString(), 10)] = this.generateRow(data[parseInt(i.toString(), 10)], this.index, i ? undefined : 'e-firstchildrow', indent, childID, tIndex, parentUid);\n            for (var j = 0; j < indent; j++) {\n                if (this.parent.enableColumnVirtualization && indexes.indexOf(indent) === -1) {\n                    continue;\n                }\n                rows[parseInt(i.toString(), 10)].cells.unshift(this.generateIndentCell());\n            }\n            this.index++;\n        }\n        return rows;\n    };\n    GroupModelGenerator.prototype.generateIndentCell = function () {\n        return this.generateCell({}, null, CellType.Indent);\n    };\n    GroupModelGenerator.prototype.refreshRows = function (input) {\n        var indexes = this.parent.getColumnIndexesInView();\n        for (var i = 0; i < input.length; i++) {\n            if (input[parseInt(i.toString(), 10)].isDataRow) {\n                input[parseInt(i.toString(), 10)].cells = this.generateCells(input[parseInt(i.toString(), 10)]);\n                for (var j = 0; j < input[parseInt(i.toString(), 10)].indent; j++) {\n                    if (this.parent.enableColumnVirtualization\n                        && indexes.indexOf(input[parseInt(i.toString(), 10)].indent) === -1) {\n                        continue;\n                    }\n                    input[parseInt(i.toString(), 10)].cells.unshift(this.generateIndentCell());\n                }\n            }\n            else {\n                var cRow = this.generateCaptionRow(input[parseInt(i.toString(), 10)].data, input[parseInt(i.toString(), 10)].indent);\n                input[parseInt(i.toString(), 10)].cells = cRow.cells;\n            }\n        }\n        return input;\n    };\n    GroupModelGenerator.prototype.setInfiniteRowVisibility = function (caption) {\n        if (!caption.isExpand || caption.visible === false) {\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                if (row.parentUid === caption.uid) {\n                    row.visible = false;\n                    if (row.isCaptionRow) {\n                        this.setInfiniteRowVisibility(row);\n                    }\n                }\n            }\n        }\n    };\n    GroupModelGenerator.prototype.ensureRowVisibility = function () {\n        for (var i = 0; i < this.rows.length; i++) {\n            var row = this.rows[parseInt(i.toString(), 10)];\n            if (!row.isCaptionRow) {\n                continue;\n            }\n            for (var j = i + 1; j < this.rows.length; j++) {\n                var childRow = this.rows[parseInt(j.toString(), 10)];\n                if (row.uid === childRow.parentUid) {\n                    this.rows[parseInt(j.toString(), 10)].visible = row.isExpand;\n                }\n            }\n        }\n    };\n    return GroupModelGenerator;\n}(RowModelGenerator));\nexport { GroupModelGenerator };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}