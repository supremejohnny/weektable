{"ast":null,"code":"import { Droppable } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { setStyleAttribute, remove, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { getUpdateUsingRaf, appendChildren, setDisplayValue, clearReactVueTemplates, getScrollBarWidth, getScrollWidth, getTransformValues } from '../base/util';\nimport * as events from '../base/constant';\nimport { RowRenderer } from './row-renderer';\nimport { CellMergeRender } from './cell-merge-renderer';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport { isGroupAdaptive, addFixedColumnBorder } from '../base/util';\nimport * as literals from '../base/string-literals';\n// eslint-disable-next-line valid-jsdoc, jsdoc/require-param, jsdoc/require-returns\n/**\n * Content module is used to render grid content\n *\n * @hidden\n */\nvar ContentRender = /** @class */function () {\n  /**\n   * Constructor for content renderer module\n   *\n   * @param {IGrid} parent - specifies the Igrid\n   * @param {ServiceLocator} serviceLocator - specifies the service locator\n   */\n  function ContentRender(parent, serviceLocator) {\n    var _this = this;\n    this.rows = [];\n    this.freezeRows = [];\n    this.movableRows = [];\n    this.freezeRowElements = [];\n    /** @hidden */\n    this.currentInfo = {};\n    /** @hidden */\n    this.prevCurrentView = [];\n    this.isLoaded = true;\n    this.drop = function (e) {\n      _this.parent.notify(events.columnDrop, {\n        target: e.target,\n        droppedElement: e.droppedElement\n      });\n      remove(e.droppedElement);\n    };\n    /** @hidden */\n    this.infiniteCache = {};\n    /** @hidden */\n    this.visibleRows = [];\n    this.visibleFrozenRows = [];\n    this.rightFreezeRows = [];\n    this.isAddRows = false;\n    this.isInfiniteFreeze = false;\n    this.useGroupCache = false;\n    /** @hidden */\n    this.tempFreezeRows = [];\n    this.rafCallback = function (args) {\n      var arg = args;\n      return function () {\n        _this.ariaService.setBusy(_this.getPanel().querySelector('.' + literals.content), false);\n        if (_this.parent.isDestroyed) {\n          return;\n        }\n        var rows = _this.rows.slice(0);\n        if (_this.parent.enableInfiniteScrolling) {\n          if (_this.parent.groupSettings.enableLazyLoading) {\n            for (var i = 0; i < _this.visibleRows.length; i++) {\n              _this.setRowsInLazyGroup(_this.visibleRows[parseInt(i.toString(), 10)], i);\n            }\n          }\n          rows = _this.parent.getRowsObject();\n          var prevPage = arg.prevPage;\n          if (_this.parent.infiniteScrollSettings.enableCache && prevPage) {\n            var maxBlock = _this.parent.infiniteScrollSettings.maxBlocks;\n            rows = [];\n            var rowIdx = parseInt(_this.rowElements[0].getAttribute('aria-rowindex'), 10);\n            var startIdx = Math.ceil(rowIdx / _this.parent.pageSettings.pageSize);\n            for (var i = 0, count = startIdx; i < maxBlock; i++, count++) {\n              if (_this.infiniteCache[parseInt(count.toString(), 10)]) {\n                rows = rows.concat(_this.infiniteCache[parseInt(count.toString(), 10)]);\n              }\n            }\n          }\n        }\n        _this.parent.notify(events.contentReady, {\n          rows: rows,\n          args: arg\n        });\n        if (_this.parent.editSettings.showAddNewRow && _this.parent.addNewRowFocus) {\n          _this.parent.notify(events.showAddNewRowFocus, {});\n          _this.parent.addNewRowFocus = false;\n        }\n        if (_this.parent.autoFit) {\n          _this.parent.preventAdjustColumns();\n        }\n        if (!_this.parent.isInitialLoad) {\n          _this.parent.focusModule.setFirstFocusableTabIndex();\n        }\n        if (_this.isLoaded) {\n          _this.parent.isManualRefresh = false;\n          if (_this.parent.enableInfiniteScrolling && _this.parent.groupSettings.enableLazyLoading && args.requestType === 'sorting') {\n            _this.parent.infiniteScrollModule['groupCaptionAction'] = undefined;\n          }\n          var isReactChild = _this.parent.parentDetails && _this.parent.parentDetails.parentInstObj && _this.parent.parentDetails.parentInstObj.isReact;\n          if ((_this.parent.isReact || isReactChild) && _this.parent.element.querySelectorAll('.e-templatecell').length) {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var thisRef_1 = _this;\n            thisRef_1.parent.renderTemplates(function () {\n              thisRef_1.parent.trigger(events.dataBound, {}, function () {\n                if (thisRef_1.parent.allowTextWrap) {\n                  thisRef_1.parent.notify(events.freezeRender, {\n                    case: 'textwrap'\n                  });\n                }\n              });\n            });\n          } else {\n            _this.parent.trigger(events.dataBound, {}, function () {\n              if (_this.parent.allowTextWrap) {\n                _this.parent.notify(events.freezeRender, {\n                  case: 'textwrap'\n                });\n              }\n            });\n          }\n          if (_this.parent.allowTextWrap && _this.parent.height === 'auto') {\n            if (_this.parent.getContentTable().scrollHeight > _this.parent.getContent().clientHeight) {\n              _this.parent.scrollModule.setPadding();\n            } else {\n              _this.parent.scrollModule.removePadding();\n            }\n          }\n        }\n        if (arg) {\n          var action = (arg.requestType || '').toLowerCase() + '-complete';\n          _this.parent.notify(action, arg);\n          if (args.requestType === 'batchsave') {\n            args.cancel = false;\n            _this.parent.trigger(events.actionComplete, args);\n          }\n        }\n        if (_this.isLoaded) {\n          _this.parent.hideSpinner();\n        }\n      };\n    };\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.widthService = serviceLocator.getService('widthService');\n    this.ariaService = this.serviceLocator.getService('ariaService');\n    this.parent.enableDeepCompare = this.parent.getDataModule().isRemote();\n    this.generator = this.getModelGenerator();\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    if (!this.parent.enableColumnVirtualization && !this.parent.enableVirtualization && !this.parent.groupSettings.enableLazyLoading) {\n      this.parent.on(events.columnVisibilityChanged, this.setVisible, this);\n    }\n    this.parent.on(events.colGroupRefresh, this.colGroupRefresh, this);\n    this.parent.on(events.uiUpdate, this.enableAfterRender, this);\n    this.parent.on(events.refreshInfiniteModeBlocks, this.refreshContentRows, this);\n    this.parent.on(events.beforeCellFocused, this.beforeCellFocused, this);\n    this.parent.on(events.destroy, this.droppableDestroy, this);\n  }\n  ContentRender.prototype.beforeCellFocused = function (e) {\n    if (e.byKey && (e.keyArgs.action === 'upArrow' || e.keyArgs.action === 'downArrow')) {\n      this.pressedKey = e.keyArgs.action;\n    } else {\n      this.pressedKey = undefined;\n    }\n  };\n  /**\n   * The function is used to render grid content div\n   *\n   * @returns {void}\n   */\n  ContentRender.prototype.renderPanel = function () {\n    var gObj = this.parent;\n    var div = this.parent.element.querySelector('.' + literals.gridContent);\n    if (div) {\n      this.ariaService.setOptions(this.parent.element.querySelector('.' + literals.content), {\n        busy: false\n      });\n      this.setPanel(div);\n      return;\n    }\n    div = this.parent.createElement('div', {\n      className: literals.gridContent\n    });\n    var innerDiv = this.parent.createElement('div', {\n      className: literals.content\n    });\n    this.ariaService.setOptions(innerDiv, {\n      busy: false\n    });\n    if (this.parent.enableColumnVirtualization && this.parent.isFrozenGrid()) {\n      this.renderHorizontalScrollbar(div);\n      innerDiv.classList.add('e-virtual-content');\n    }\n    div.appendChild(innerDiv);\n    this.setPanel(div);\n    gObj.element.appendChild(div);\n  };\n  ContentRender.prototype.renderHorizontalScrollbar = function (element) {\n    var parent = this.parent.createElement('div', {\n      className: 'e-movablescrollbar'\n    });\n    var child = this.parent.createElement('div', {\n      className: 'e-movablechild'\n    });\n    var scrollbarHeight = getScrollBarWidth().toString();\n    this.setScrollbarHeight(child, scrollbarHeight);\n    this.setScrollbarHeight(parent, scrollbarHeight);\n    parent.appendChild(child);\n    element.appendChild(parent);\n  };\n  ContentRender.prototype.setScrollbarHeight = function (ele, height) {\n    ele.style.minHeight = height + 'px';\n    ele.style.maxHeight = height + 'px';\n  };\n  /**\n   * The function is used to render grid content table\n   *\n   * @returns {void}\n   */\n  ContentRender.prototype.renderTable = function () {\n    var contentDiv = this.getPanel();\n    var virtualTable = contentDiv.querySelector('.e-virtualtable');\n    var virtualTrack = contentDiv.querySelector('.e-virtualtrack');\n    if (this.parent.enableVirtualization && !isNullOrUndefined(virtualTable) && !isNullOrUndefined(virtualTrack)) {\n      remove(virtualTable);\n      remove(virtualTrack);\n    }\n    contentDiv.appendChild(this.createContentTable('_content_table'));\n    this.setTable(contentDiv.querySelector('.' + literals.table));\n    if (this.parent.selectionSettings.type === 'Multiple') {\n      this.ariaService.setOptions(this.parent.element, {\n        multiselectable: true\n      });\n    }\n    this.initializeContentDrop();\n    if (this.parent.frozenRows) {\n      this.parent.getHeaderContent().classList.add('e-frozenhdr');\n    }\n  };\n  /**\n   * The function is used to create content table elements\n   *\n   * @param {string} id - specifies the id\n   * @returns {Element} returns the element\n   * @hidden\n   */\n  ContentRender.prototype.createContentTable = function (id) {\n    var innerDiv = this.getPanel().firstElementChild;\n    if (this.getTable()) {\n      remove(this.getTable());\n    }\n    var table = innerDiv.querySelector('.' + literals.table) ? innerDiv.querySelector('.' + literals.table) : this.parent.createElement('table', {\n      className: literals.table,\n      attrs: {\n        role: 'presentation',\n        id: this.parent.element.id + id\n      }\n    });\n    table.style.cssText = 'border-collapse: separate; border-spacing: .25px;';\n    this.setColGroup(this.parent.getHeaderTable().querySelector(literals.colGroup).cloneNode(true));\n    table.appendChild(this.getColGroup());\n    table.appendChild(this.parent.createElement(literals.tbody, {\n      attrs: {\n        role: 'rowgroup'\n      }\n    }));\n    innerDiv.appendChild(table);\n    return innerDiv;\n  };\n  /**\n   * Refresh the content of the Grid.\n   *\n   * @param {NotifyArgs} args - specifies the args\n   * @returns {void}\n   */\n  // tslint:disable-next-line:max-func-body-length\n  ContentRender.prototype.refreshContentRows = function (args) {\n    var _this = this;\n    if (args === void 0) {\n      args = {};\n    }\n    var gObj = this.parent;\n    if (gObj.currentViewData.length === 0) {\n      return;\n    }\n    if (gObj.editSettings && gObj.editModule && gObj.editSettings.mode === 'Batch' && gObj.editModule.formObj && gObj.editSettings.showConfirmDialog === false) {\n      gObj.editModule.destroyForm();\n    }\n    var dataSource = this.currentMovableRows || gObj.currentViewData;\n    var isReact = gObj.isReact && !isNullOrUndefined(gObj.rowTemplate);\n    var isReactPrintGrid = this.parent.printGridParent && this.parent.printGridParent.isReact;\n    var frag = isReact || isReactPrintGrid ? gObj.createElement(literals.tbody, {\n      attrs: {\n        role: 'rowgroup'\n      }\n    }) : document.createDocumentFragment();\n    if (!this.initialPageRecords) {\n      this.initialPageRecords = extend([], dataSource);\n    }\n    var hdrfrag = isReact ? gObj.createElement(literals.tbody, {\n      attrs: {\n        role: 'rowgroup'\n      }\n    }) : document.createDocumentFragment();\n    var refFrag;\n    var refHdrfrag;\n    if ((gObj.isReact || isReactPrintGrid) && gObj.rowTemplate) {\n      refFrag = frag;\n      refHdrfrag = hdrfrag;\n    }\n    var columns = gObj.getColumns();\n    var tr;\n    var hdrTbody;\n    var trElement;\n    var row = new RowRenderer(this.serviceLocator, null, this.parent);\n    var isInfiniteScroll = this.parent.enableInfiniteScrolling && args.requestType === 'infiniteScroll';\n    var isColumnVirtualInfiniteProcess = this.isInfiniteColumnvirtualization() && args.requestType !== 'virtualscroll';\n    var infiniteDetail = gObj.enableInfiniteScrolling && (gObj.childGrid || gObj.detailTemplate) ? true : false;\n    var infiniteDetailModified = infiniteDetail && (args.action === 'add' && args.requestType === 'save' || args.requestType === 'delete');\n    if (infiniteDetailModified) {\n      args.startIndex = 0;\n      gObj.notify(events.detachDetailTemplate, {});\n    }\n    if (!(isInfiniteScroll && (gObj.childGrid || gObj.detailTemplate) && !gObj.infiniteScrollSettings.enableCache)) {\n      if (infiniteDetail) {\n        this.parent.infiniteScrollModule.infiniteDetailDestroy = true;\n      }\n      gObj.notify(events.destroyChildGrid, isInfiniteScroll && (gObj.childGrid || gObj.detailTemplate) && gObj.infiniteScrollSettings.enableCache ? args : {});\n    }\n    this.rowElements = [];\n    this.rows = [];\n    this.tempFreezeRows = [];\n    var tbdy;\n    var tableName;\n    var isGroupFrozenHdr = this.parent.frozenRows && this.parent.groupSettings.columns.length ? true : false;\n    if (isGroupAdaptive(gObj)) {\n      if (['sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder', 'save', 'delete'].some(function (value) {\n        return args.requestType === value;\n      })) {\n        this.emptyVcRows();\n      }\n    }\n    var modelData;\n    modelData = this.checkCache(modelData, args);\n    if (!this.isAddRows && !this.useGroupCache) {\n      modelData = this.generator.generateRows(dataSource, args);\n    }\n    this.setGroupCache(modelData, args);\n    this.parent.notify(events.setInfiniteCache, {\n      isInfiniteScroll: isInfiniteScroll,\n      modelData: modelData,\n      args: args\n    });\n    var isFrozenLeft = false;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var registeredTemplates = this.parent.registeredTemplate;\n    if (!(args.requestType === 'infiniteScroll' && !this.parent.infiniteScrollSettings.enableCache) && registeredTemplates && registeredTemplates.template && !args.isFrozen && !isFrozenLeft) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var templatetoclear = [];\n      for (var i = 0; i < registeredTemplates.template.length; i++) {\n        for (var j = 0; j < registeredTemplates.template[parseInt(i.toString(), 10)].rootNodes.length; j++) {\n          if (isNullOrUndefined(registeredTemplates.template[parseInt(i.toString(), 10)].rootNodes[parseInt(j.toString(), 10)].parentNode)) {\n            templatetoclear.push(registeredTemplates.template[parseInt(i.toString(), 10)]);\n          }\n        }\n      }\n      this.parent.destroyTemplate(['template'], templatetoclear);\n    }\n    if ((this.parent.isReact || this.parent.isVue) && !(args.requestType === 'infiniteScroll' && !this.parent.infiniteScrollSettings.enableCache) && !args.isFrozen) {\n      var templates = [this.parent.isVue ? 'template' : 'columnTemplate', 'rowTemplate', 'detailTemplate', 'captionTemplate', 'commandsTemplate', 'groupFooterTemplate', 'groupCaptionTemplate'];\n      if (args.requestType === 'infiniteScroll' && this.parent.infiniteScrollSettings.enableCache) {\n        templates = [this.parent.isVue ? 'template' : 'columnTemplate', 'commandsTemplate'];\n      }\n      clearReactVueTemplates(this.parent, templates);\n    }\n    if (this.parent.enableColumnVirtualization) {\n      var cellMerge = new CellMergeRender(this.serviceLocator, this.parent);\n      cellMerge.updateVirtualCells(modelData);\n    }\n    this.tbody = this.getTable().querySelector(literals.tbody);\n    var startIndex = 0;\n    var blockLoad = true;\n    if (isGroupAdaptive(gObj) && gObj.vcRows.length) {\n      var top_1 = 'top';\n      var scrollTop = !isNullOrUndefined(args.virtualInfo.offsets) ? args.virtualInfo.offsets.top : !isNullOrUndefined(args.scrollTop) ? args.scrollTop[\"\" + top_1] : 0;\n      if (scrollTop !== 0) {\n        var offsets_1 = gObj.vGroupOffsets;\n        var bSize = gObj.pageSettings.pageSize / 2;\n        var values = Object.keys(offsets_1).map(function (key) {\n          return offsets_1[\"\" + key];\n        });\n        for (var m = 0; m < values.length; m++) {\n          if (scrollTop < values[parseInt(m.toString(), 10)]) {\n            if (!isNullOrUndefined(args.virtualInfo) && args.virtualInfo.direction === 'up') {\n              startIndex = m > 0 ? (m - 1) * bSize : m * bSize;\n              break;\n            } else {\n              startIndex = m * bSize;\n              if (this.parent.contentModule.isEndBlock(m) || this.parent.contentModule.isEndBlock(m + 1)) {\n                args.virtualInfo.blockIndexes = [m, m + 1];\n              }\n              break;\n            }\n          }\n        }\n        if (Math.round(scrollTop + this.contentPanel.firstElementChild.offsetHeight) >= this.contentPanel.firstElementChild.scrollHeight && !args.rowObject) {\n          blockLoad = false;\n        }\n      }\n    }\n    var isVFFrozenOnly = gObj.frozenRows && this.parent.enableVirtualization && args.requestType === 'reorder';\n    if (gObj.frozenRows && args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo.axis === 'X' || isVFFrozenOnly) {\n      var bIndex = args.virtualInfo.blockIndexes;\n      var page = args.virtualInfo.page;\n      args.virtualInfo.blockIndexes = [1, 2];\n      if (isVFFrozenOnly) {\n        args.virtualInfo.page = 1;\n      }\n      var data = isVFFrozenOnly ? this.initialPageRecords : dataSource;\n      var mhdrData = this.vgenerator.generateRows(data, args);\n      mhdrData.splice(this.parent.frozenRows);\n      for (var i = 0; i < this.parent.frozenRows; i++) {\n        // mhdrData[parseInt(i.toString(), 10)].cells.splice(0, this.parent.getFrozenColumns());\n        tr = row.render(mhdrData[parseInt(i.toString(), 10)], columns);\n        addFixedColumnBorder(tr);\n        hdrfrag.appendChild(tr);\n      }\n      args.virtualInfo.blockIndexes = bIndex;\n      args.virtualInfo.page = page;\n      if (isVFFrozenOnly && args.virtualInfo.page === 1) {\n        modelData.splice(0, this.parent.frozenRows);\n      }\n    }\n    this.virtualFrozenHdrRefresh(hdrfrag, modelData, row, args, dataSource, columns);\n    if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n      (this.parent.enableVirtualization ? this.parent.lazyLoadRender : this.parent.contentModule).refRowsObj[this.parent.pageSettings.currentPage] = [];\n    }\n    if (this.parent.enableInfiniteScrolling && this.parent.groupSettings.enableLazyLoading && args.requestType === 'delete' || infiniteDetailModified) {\n      //  || (this.parent.infiniteScrollSettings && this.parent.infiniteScrollSettings.enableCache))\n      this.visibleRows = [];\n    }\n    var _loop_1 = function (i, len) {\n      this_1.rows.push(modelData[parseInt(i.toString(), 10)]);\n      if (this_1.parent.groupSettings.enableLazyLoading && !this_1.useGroupCache && this_1.parent.groupSettings.columns.length) {\n        (this_1.parent.enableVirtualization ? this_1.parent.lazyLoadRender : this_1.parent.contentModule).refRowsObj[this_1.parent.pageSettings.currentPage].push(modelData[parseInt(i.toString(), 10)]);\n        this_1.setRowsInLazyGroup(modelData[parseInt(i.toString(), 10)], i);\n        if (isNullOrUndefined(modelData[parseInt(i.toString(), 10)].indent)) {\n          return \"continue\";\n        }\n      }\n      this_1.setInfiniteVisibleRows(args, modelData[parseInt(i.toString(), 10)]);\n      if (isGroupAdaptive(gObj) && args.virtualInfo && args.virtualInfo.blockIndexes && this_1.rowElements.length >= args.virtualInfo.blockIndexes.length * this_1.parent.contentModule.getBlockSize() && blockLoad) {\n        this_1.parent.currentViewData['records'] = this_1.rows.map(function (m) {\n          return m.data;\n        });\n        return \"break\";\n      }\n      if (!gObj.rowTemplate) {\n        tr = row.render(modelData[parseInt(i.toString(), 10)], columns);\n        addFixedColumnBorder(tr);\n        var isVFreorder = this_1.ensureFrozenHeaderRender(args);\n        if (gObj.frozenRows && (i < gObj.frozenRows || isGroupFrozenHdr) && !isInfiniteScroll && args.requestType !== 'virtualscroll' && isVFreorder && this_1.ensureVirtualFrozenHeaderRender(args)) {\n          hdrfrag.appendChild(tr);\n        } else {\n          frag.appendChild(tr);\n        }\n        var rowIdx = parseInt(tr.getAttribute('aria-rowindex'), 10) - 1;\n        if (rowIdx + 1 === gObj.frozenRows) {\n          isGroupFrozenHdr = false;\n        }\n        if (modelData[parseInt(i.toString(), 10)].isExpand) {\n          gObj.notify(events.expandChildGrid, tr.cells[gObj.groupSettings.columns.length]);\n        }\n      } else {\n        var rowTemplateID = gObj.element.id + 'rowTemplate';\n        var elements = void 0;\n        if (gObj.isReact || isReactPrintGrid) {\n          var isHeader = gObj.frozenRows && i < gObj.frozenRows;\n          var copied = extend({\n            index: i\n          }, dataSource[parseInt(i.toString(), 10)]);\n          gObj.getRowTemplate()(copied, gObj, 'rowTemplate', rowTemplateID, null, null, isHeader ? hdrfrag : frag);\n          if (gObj.requireTemplateRef) {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var thisRef_2 = this_1;\n            thisRef_2.parent.renderTemplates(function () {\n              if (gObj.frozenRows && i < gObj.frozenRows) {\n                tr = refHdrfrag.childNodes[parseInt(i.toString(), 10)];\n              } else {\n                trElement = refFrag.childNodes[parseInt(i.toString(), 10)];\n              }\n              var arg = {\n                data: modelData[parseInt(i.toString(), 10)].data,\n                row: trElement ? trElement : tr\n              };\n              thisRef_2.parent.trigger(events.rowDataBound, arg);\n              if (modelData[parseInt(i.toString(), 10)].isDataRow || thisRef_2.parent.enableVirtualization && thisRef_2.parent.groupSettings.enableLazyLoading) {\n                thisRef_2.rowElements.push(arg.row);\n              }\n              thisRef_2.ariaService.setOptions(thisRef_2.parent.element, {\n                colcount: gObj.getColumns().length.toString()\n              });\n              if (i === modelData.length - 1) {\n                refFrag = null;\n                refHdrfrag = null;\n              }\n            });\n            return \"continue\";\n          }\n        } else {\n          elements = gObj.getRowTemplate()(extend({\n            index: i\n          }, dataSource[parseInt(i.toString(), 10)]), gObj, 'rowTemplate', rowTemplateID, undefined, undefined, undefined, this_1.parent['root']);\n        }\n        if (!gObj.isReact && elements[0].tagName === 'TBODY') {\n          for (var j = 0; j < elements.length; j++) {\n            var isTR = elements[parseInt(j.toString(), 10)].nodeName.toLowerCase() === 'tr';\n            if (isTR || elements[parseInt(j.toString(), 10)].querySelectorAll && elements[parseInt(j.toString(), 10)].querySelectorAll('tr').length) {\n              tr = isTR ? elements[parseInt(j.toString(), 10)] : elements[parseInt(j.toString(), 10)].querySelector('tr');\n            }\n          }\n          if (gObj.frozenRows && i < gObj.frozenRows) {\n            hdrfrag.appendChild(tr);\n          } else {\n            frag.appendChild(tr);\n          }\n        } else {\n          if (gObj.frozenRows && i < gObj.frozenRows) {\n            tr = !gObj.isReact ? appendChildren(hdrfrag, elements) : hdrfrag.lastElementChild;\n          } else {\n            // frag.appendChild(tr);\n            if (!gObj.isReact) {\n              tr = appendChildren(frag, elements);\n            }\n            trElement = gObj.isReact ? frag.lastElementChild : tr.lastElementChild;\n          }\n        }\n        var arg = {\n          data: modelData[parseInt(i.toString(), 10)].data,\n          row: trElement ? trElement : tr\n        };\n        this_1.parent.trigger(events.rowDataBound, arg);\n      }\n      if (modelData[parseInt(i.toString(), 10)].isDataRow || this_1.parent.enableVirtualization && this_1.parent.groupSettings.enableLazyLoading) {\n        if (!isNullOrUndefined(gObj.rowTemplate) && (gObj.isAngular || gObj.isVue3 || gObj.isVue)) {\n          this_1.rowElements.push(trElement ? trElement : tr);\n        } else {\n          this_1.rowElements.push(tr);\n        }\n      }\n      this_1.ariaService.setOptions(this_1.parent.element, {\n        colcount: gObj.getColumns().length.toString()\n      });\n    };\n    var this_1 = this;\n    for (var i = startIndex, len = modelData.length; i < len; i++) {\n      var state_1 = _loop_1(i, len);\n      if (state_1 === \"break\") break;\n    }\n    var isReactChild = gObj.parentDetails && gObj.parentDetails.parentInstObj && gObj.parentDetails.parentInstObj.isReact;\n    if ((gObj.isReact || isReactChild) && !gObj.requireTemplateRef) {\n      gObj.renderTemplates();\n    }\n    if (this.parent.enableInfiniteScrolling && this.parent.groupSettings.enableLazyLoading) {\n      this.parent.contentModule.refRowsObj[this.parent.pageSettings.currentPage] = this.parent.contentModule['groupCache'][this.parent.pageSettings.currentPage];\n    }\n    if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n      this.parent.notify(events.refreshExpandandCollapse, {\n        rows: (this.parent.enableVirtualization ? this.parent.lazyLoadRender : this.parent.contentModule).refRowsObj[this.parent.pageSettings.currentPage]\n      });\n    }\n    gObj.removeMaskRow();\n    this.parent.notify('removeGanttShimmer', {\n      requestType: 'hideShimmer'\n    });\n    if (gObj.frozenRows && args.requestType !== 'virtualscroll' && !isInfiniteScroll && this.ensureVirtualFrozenHeaderRender(args) || args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo && args.virtualInfo.sentinelInfo.axis === 'X') {\n      hdrTbody = gObj.getHeaderTable().querySelector(literals.tbody);\n      if (isReact) {\n        var parentTable = hdrTbody.parentElement;\n        remove(hdrTbody);\n        parentTable.appendChild(hdrfrag);\n      } else {\n        hdrTbody.innerHTML = '';\n        hdrTbody.appendChild(hdrfrag);\n      }\n      if (!gObj.isInitialLoad) {\n        gObj.scrollModule.setHeight();\n      }\n    }\n    // if (!gObj.enableVirtualization && hdrTbody && gObj.frozenRows && idx === 0 && cont.offsetHeight === Number(gObj.height)) {\n    //     cont.style.height = (cont.offsetHeight - hdrTbody.offsetHeight) + 'px';\n    // }\n    args.rows = this.rows.slice(0);\n    getUpdateUsingRaf(function () {\n      _this.parent.notify(events.beforeFragAppend, args);\n      if (!_this.parent.enableVirtualization && (!_this.parent.enableColumnVirtualization || isColumnVirtualInfiniteProcess) && !isInfiniteScroll) {\n        if (!gObj.isReact) {\n          _this.tbody.innerHTML = '';\n        }\n        if (!isNullOrUndefined(_this.tbody.parentElement)) {\n          remove(_this.tbody);\n        } else {\n          remove(gObj.getContentTable().querySelector(literals.tbody));\n        }\n        _this.tbody = _this.parent.createElement(literals.tbody, {\n          attrs: {\n            role: 'rowgroup'\n          }\n        });\n      }\n      if (gObj.rowTemplate) {\n        updateBlazorTemplate(gObj.element.id + 'rowTemplate', 'RowTemplate', gObj);\n      }\n      if (!isNullOrUndefined(_this.parent.infiniteScrollModule) && (_this.parent.enableInfiniteScrolling && !_this.isInfiniteColumnvirtualization() || isColumnVirtualInfiniteProcess)) {\n        _this.isAddRows = false;\n        _this.parent.notify(events.removeInfiniteRows, {\n          args: args\n        });\n        _this.parent.notify(events.appendInfiniteContent, {\n          tbody: tbdy ? tbdy : _this.tbody,\n          frag: frag,\n          args: args,\n          rows: _this.rows,\n          rowElements: _this.rowElements,\n          visibleRows: _this.visibleRows,\n          tableName: tableName\n        });\n        if (_this.isInfiniteColumnvirtualization() && _this.parent.isFrozenGrid()) {\n          var virtualTable = _this.parent.getContent().querySelector('.e-virtualtable');\n          var transform = getTransformValues(virtualTable);\n          _this.parent.contentModule.resetStickyLeftPos(transform.width);\n          _this.widthService.refreshFrozenScrollbar();\n        }\n      } else {\n        _this.useGroupCache = false;\n        _this.appendContent(_this.tbody, frag, args);\n      }\n      if (_this.parent.editSettings.showAddNewRow && (_this.parent.enableVirtualization || _this.parent.enableInfiniteScrolling)) {\n        var newRow = _this.parent.element.querySelector('.e-addrow-removed');\n        if (newRow) {\n          remove(newRow);\n        }\n      }\n      var startAdd = !_this.parent.element.querySelector('.' + literals.addedRow);\n      if (_this.parent.editSettings.showAddNewRow && _this.parent.editSettings.mode === 'Normal') {\n        if (startAdd) {\n          if (_this.parent.enableVirtualization || _this.parent.enableInfiniteScrolling) {\n            _this.parent.isAddNewRow = true;\n          }\n          _this.parent.isEdit = false;\n          _this.parent.addRecord();\n        }\n        if (startAdd || (_this.parent.enableVirtualization || _this.parent.enableInfiniteScrolling) && ['sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder'].some(function (value) {\n          return args.requestType === value;\n        })) {\n          _this.parent.notify(events.showAddNewRowFocus, {});\n        }\n      }\n      if (_this.parent.getVisibleFrozenRightCount() && _this.parent.getContent() && getScrollWidth(_this.parent) > 0) {\n        _this.parent.element.classList.add('e-right-shadow');\n      }\n      frag = null;\n    }, this.rafCallback(extend({}, args)));\n  };\n  ContentRender.prototype.isInfiniteColumnvirtualization = function () {\n    return this.parent.enableColumnVirtualization && this.parent.enableInfiniteScrolling;\n  };\n  ContentRender.prototype.enableCacheOnInfiniteColumnVirtual = function () {\n    return this.isInfiniteColumnvirtualization() && this.parent.infiniteScrollSettings.enableCache;\n  };\n  ContentRender.prototype.emptyVcRows = function () {\n    this.parent.vcRows = [];\n    this.parent.vRows = [];\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ContentRender.prototype.appendContent = function (tbody, frag, args, tableName) {\n    var isReact = this.parent.isReact && !isNullOrUndefined(this.parent.rowTemplate);\n    if (isReact) {\n      this.getTable().appendChild(frag);\n    } else {\n      tbody.appendChild(frag);\n      this.getTable().appendChild(tbody);\n    }\n    if (this.parent.rowRenderingMode === 'Vertical' && this.parent.allowTextWrap && (this.parent.textWrapSettings.wrapMode === 'Header' || this.parent.textWrapSettings.wrapMode === 'Both')) {\n      var cells = tbody.querySelectorAll('td');\n      for (var i = 0; i < cells.length; i++) {\n        var headerCellHeight = parseFloat(document.defaultView.getComputedStyle(cells[parseInt(i.toString(), 10)], '::before').getPropertyValue('height'));\n        var cellHeight = cells[parseInt(i.toString(), 10)].offsetHeight;\n        if (headerCellHeight > cellHeight) {\n          cells[parseInt(i.toString(), 10)].style.height = headerCellHeight + 'px';\n          cells[parseInt(i.toString(), 10)].style.boxSizing = 'content-box';\n        }\n      }\n    }\n    if (this.parent.getVisibleFrozenLeftCount() && this.parent.enableColumnVirtualization) {\n      this.widthService.refreshFrozenScrollbar();\n    }\n  };\n  ContentRender.prototype.setRowsInLazyGroup = function (row, index) {\n    if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n      (this.parent.enableVirtualization ? this.parent.lazyLoadRender : this.parent.contentModule).maintainRows(row, index);\n    }\n  };\n  ContentRender.prototype.setGroupCache = function (data, args) {\n    if (!this.useGroupCache && this.parent.groupSettings.enableLazyLoading) {\n      this.parent.notify(events.setGroupCache, {\n        args: args,\n        data: data\n      });\n    }\n  };\n  ContentRender.prototype.ensureFrozenHeaderRender = function (args) {\n    return !(this.parent.enableVirtualization && (args.requestType === 'reorder' || args.requestType === 'refresh') || this.parent.infiniteScrollSettings.enableCache && this.parent.frozenRows && this.parent.infiniteScrollModule.requestType === 'delete' && this.parent.pageSettings.currentPage !== 1);\n  };\n  ContentRender.prototype.ensureVirtualFrozenHeaderRender = function (args) {\n    return !(this.parent.enableVirtualization && args.requestType === 'delete');\n  };\n  ContentRender.prototype.checkCache = function (modelData, args) {\n    if (this.parent.infiniteScrollSettings.enableCache && args.requestType === 'infiniteScroll') {\n      this.isAddRows = !isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage]);\n      if (this.isAddRows) {\n        var data = this.infiniteCache[this.parent.pageSettings.currentPage];\n        modelData = this.parent.pageSettings.currentPage === 1 ? data.slice(this.parent.frozenRows) : data;\n      }\n      return modelData;\n    }\n    if (this.parent.groupSettings.enableLazyLoading && this.parent.groupSettings.columns.length && (args.requestType === 'paging' || args.requestType === 'columnstate' || args.requestType === 'reorder' || args.requestType === 'virtualscroll') && (this.parent.enableVirtualization ? this.parent.lazyLoadRender : this.parent.contentModule).getGroupCache()[this.parent.pageSettings.currentPage]) {\n      if (!this.parent.enableVirtualization) {\n        this.useGroupCache = true;\n      }\n      return this.parent.enableVirtualization ? this.parent.getRowsObject() : this.parent.contentModule.initialGroupRows(args.requestType === 'reorder');\n    }\n    return null;\n  };\n  ContentRender.prototype.setInfiniteVisibleRows = function (args, data) {\n    if (this.parent.enableInfiniteScrolling && !this.parent.infiniteScrollSettings.enableCache && !(this.isInfiniteColumnvirtualization() && args.requestType === 'virtualscroll')) {\n      this.visibleRows.push(data);\n    }\n  };\n  ContentRender.prototype.getCurrentBlockInfiniteRecords = function () {\n    var data = [];\n    if (this.parent.infiniteScrollSettings.enableCache) {\n      if (!Object.keys(this.infiniteCache).length) {\n        return [];\n      }\n      var rows = this.parent.getRows();\n      var index = parseInt(rows[this.parent.frozenRows].getAttribute(literals.ariaRowIndex), 10) - 1;\n      var first = Math.ceil((index + 1) / this.parent.pageSettings.pageSize);\n      index = parseInt(rows[rows.length - 1].getAttribute(literals.ariaRowIndex), 10) - 1;\n      var last = Math.ceil((index + (rows.length ? 1 : 0)) / this.parent.pageSettings.pageSize);\n      for (var i = first; i <= last; i++) {\n        data = !data.length ? this.infiniteCache[parseInt(i.toString(), 10)] : data.concat(this.infiniteCache[parseInt(i.toString(), 10)]);\n      }\n      if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n        data = this.infiniteCache[1].slice(0, this.parent.frozenRows).concat(data);\n      }\n    }\n    return data;\n  };\n  ContentRender.prototype.getReorderedRows = function (args) {\n    return this.parent.contentModule.getReorderedFrozenRows(args);\n  };\n  ContentRender.prototype.virtualFrozenHdrRefresh = function (hdrfrag, modelData, row, args, dataSource, columns) {\n    if (this.parent.frozenRows && this.parent.enableVirtualization && (args.requestType === 'reorder' || args.requestType === 'refresh')) {\n      var tr = void 0;\n      var fhdrData = this.getReorderedRows(args);\n      for (var i = 0; i < fhdrData.length; i++) {\n        tr = row.render(fhdrData[parseInt(i.toString(), 10)], columns);\n        hdrfrag.appendChild(tr);\n      }\n      if (args.virtualInfo.page === 1) {\n        modelData.splice(0, this.parent.frozenRows);\n      }\n    }\n  };\n  ContentRender.prototype.getInfiniteRows = function () {\n    var rows = [];\n    if (this.parent.enableInfiniteScrolling) {\n      if (this.parent.infiniteScrollSettings.enableCache) {\n        var keys = Object.keys(this.infiniteCache);\n        for (var i = 0; i < keys.length; i++) {\n          rows = rows.concat(this.infiniteCache[keys[parseInt(i.toString(), 10)]]);\n        }\n      } else {\n        rows = this.visibleRows;\n      }\n    }\n    return rows;\n  };\n  ContentRender.prototype.getInfiniteMovableRows = function () {\n    var infiniteCacheRows = this.getCurrentBlockInfiniteRecords();\n    var infiniteRows = this.parent.enableInfiniteScrolling ? infiniteCacheRows.length ? infiniteCacheRows : this.visibleRows : [];\n    return infiniteRows;\n  };\n  /**\n   * Get the content div element of grid\n   *\n   * @returns {Element} returns the element\n   */\n  ContentRender.prototype.getPanel = function () {\n    return this.contentPanel;\n  };\n  /**\n   * Set the content div element of grid\n   *\n   * @param  {Element} panel - specifies the panel\n   * @returns {void}\n   */\n  ContentRender.prototype.setPanel = function (panel) {\n    this.contentPanel = panel;\n  };\n  /**\n   * Get the content table element of grid\n   *\n   * @returns {Element} returns the element\n   */\n  ContentRender.prototype.getTable = function () {\n    return this.contentTable;\n  };\n  /**\n   * Set the content table element of grid\n   *\n   * @param  {Element} table - specifies the table\n   * @returns {void}\n   */\n  ContentRender.prototype.setTable = function (table) {\n    this.contentTable = table;\n  };\n  /**\n   * Get the Movable Row collection in the Freeze pane Grid.\n   *\n   * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>} returns the row\n   */\n  ContentRender.prototype.getRows = function () {\n    var infiniteRows = this.getInfiniteRows();\n    return infiniteRows.length ? infiniteRows : this.rows;\n  };\n  /**\n   * Get the content table data row elements\n   *\n   * @returns {Element} returns the element\n   */\n  ContentRender.prototype.getRowElements = function () {\n    return this.rowElements;\n  };\n  /**\n   * Get the content table data row elements\n   *\n   * @param {Element[]} elements - specifies the elements\n   * @returns {void}\n   */\n  ContentRender.prototype.setRowElements = function (elements) {\n    this.rowElements = elements;\n  };\n  /**\n   * Get the header colgroup element\n   *\n   * @returns {Element} returns the element\n   */\n  ContentRender.prototype.getColGroup = function () {\n    return this.colgroup;\n  };\n  /**\n   * Set the header colgroup element\n   *\n   * @param {Element} colGroup - specifies the colgroup\n   * @returns {Element} returns the element\n   */\n  ContentRender.prototype.setColGroup = function (colGroup) {\n    if (!isNullOrUndefined(colGroup)) {\n      colGroup.id = 'content-' + colGroup.id;\n    }\n    return this.colgroup = colGroup;\n  };\n  /**\n   * Function to hide content table column based on visible property\n   *\n   * @param {Column[]} columns - specifies the column\n   * @returns {void}\n   */\n  ContentRender.prototype.setVisible = function (columns) {\n    var gObj = this.parent;\n    var rows = this.getRows();\n    var testRow;\n    rows.some(function (r) {\n      if (r.isDataRow) {\n        testRow = r;\n      }\n      return r.isDataRow;\n    });\n    var needFullRefresh = true;\n    if (!gObj.groupSettings.columns.length && testRow) {\n      needFullRefresh = false;\n    }\n    var tr = gObj.getDataRows();\n    var args = {};\n    var infiniteData = this.infiniteRowVisibility();\n    var contentrows = infiniteData ? infiniteData : this.rows.filter(function (row) {\n      return !row.isDetailRow;\n    });\n    for (var c = 0, clen = columns.length; c < clen; c++) {\n      var column = columns[parseInt(c.toString(), 10)];\n      var idx = this.parent.getNormalizedColumnIndex(column.uid);\n      var colIdx = this.parent.getColumnIndexByUid(column.uid);\n      var displayVal = column.visible === true ? '' : 'none';\n      if (idx !== -1 && testRow && idx < testRow.cells.length) {\n        setStyleAttribute(this.getColGroup().childNodes[parseInt(idx.toString(), 10)], {\n          'display': displayVal\n        });\n      }\n      if (!needFullRefresh) {\n        this.setDisplayNone(tr, colIdx, displayVal, contentrows);\n      }\n      if (!this.parent.invokedFromMedia && column.hideAtMedia) {\n        this.parent.updateMediaColumns(column);\n      }\n      this.parent.invokedFromMedia = false;\n    }\n    if (needFullRefresh) {\n      this.refreshContentRows({\n        requestType: 'refresh'\n      });\n    } else {\n      this.parent.notify(events.partialRefresh, {\n        rows: contentrows,\n        args: args\n      });\n      if (this.parent.editSettings.showAddNewRow && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n        this.parent.notify(events.showAddNewRowFocus, {});\n      }\n    }\n  };\n  /**\n   * @param {Object} tr - specifies the trr\n   * @param {number} idx - specifies the idx\n   * @param {string} displayVal - specifies the displayval\n   * @param {Row<Column>} rows - specifies the rows\n   * @returns {void}\n   * @hidden\n   */\n  ContentRender.prototype.setDisplayNone = function (tr, idx, displayVal, rows) {\n    setDisplayValue(tr, idx, displayVal, rows, this.parent, this.parent.isRowDragable());\n    this.parent.notify(events.infiniteShowHide, {\n      visible: displayVal,\n      index: idx,\n      isFreeze: this.isInfiniteFreeze\n    });\n  };\n  ContentRender.prototype.infiniteRowVisibility = function (isFreeze) {\n    var infiniteData;\n    if (this.parent.enableInfiniteScrolling) {\n      this.isInfiniteFreeze = isFreeze;\n      if (this.parent.infiniteScrollSettings.enableCache) {\n        infiniteData = this.getCurrentBlockInfiniteRecords();\n      } else {\n        infiniteData = isFreeze ? this.visibleFrozenRows : this.visibleRows;\n      }\n    }\n    return infiniteData;\n  };\n  ContentRender.prototype.colGroupRefresh = function () {\n    if (this.getColGroup()) {\n      var colGroup = this.getHeaderColGroup();\n      this.getTable().replaceChild(colGroup, this.getColGroup());\n      this.setColGroup(colGroup);\n    }\n  };\n  ContentRender.prototype.getHeaderColGroup = function () {\n    return this.parent.element.querySelector('.' + literals.gridHeader).querySelector(literals.colGroup + ':not(.e-masked-colgroup)').cloneNode(true);\n  };\n  ContentRender.prototype.initializeContentDrop = function () {\n    var gObj = this.parent;\n    this.droppable = new Droppable(gObj.element, {\n      accept: '.e-dragclone',\n      drop: this.drop\n    });\n  };\n  ContentRender.prototype.droppableDestroy = function () {\n    if (this.droppable && !this.droppable.isDestroyed) {\n      this.droppable.destroy();\n    }\n  };\n  ContentRender.prototype.canSkip = function (column, row, index) {\n    /**\n     * Skip the toggle visiblity operation when one of the following success\n     * 1. Grid has empty records\n     * 2. column visible property is unchanged\n     * 3. cell`s isVisible property is same as column`s visible property.\n     */\n    return isNullOrUndefined(row) ||\n    //(1)\n    isNullOrUndefined(column.visible) ||\n    //(2)\n    row.cells[parseInt(index.toString(), 10)].visible === column.visible; //(3)\n  };\n  ContentRender.prototype.getModelGenerator = function () {\n    return this.generator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n  };\n  ContentRender.prototype.renderEmpty = function (tbody) {\n    this.getTable().appendChild(tbody);\n    if (this.parent.frozenRows) {\n      this.parent.getHeaderContent().querySelector(literals.tbody).innerHTML = '';\n    }\n  };\n  ContentRender.prototype.setSelection = function (uid, set, clearAll) {\n    this.parent.notify(events.setFreezeSelection, {\n      uid: uid,\n      set: set,\n      clearAll: clearAll\n    });\n    var row = this.getRows().filter(function (row) {\n      return clearAll || uid === row.uid;\n    });\n    for (var j = 0; j < row.length; j++) {\n      row[parseInt(j.toString(), 10)].isSelected = set;\n      var cells = row[parseInt(j.toString(), 10)].cells;\n      for (var k = 0; k < cells.length; k++) {\n        cells[parseInt(k.toString(), 10)].isSelected = set;\n      }\n    }\n  };\n  ContentRender.prototype.getRowByIndex = function (index) {\n    index = this.getInfiniteRowIndex(index);\n    return !isNullOrUndefined(index) ? this.parent.getDataRows()[parseInt(index.toString(), 10)] : undefined;\n  };\n  ContentRender.prototype.getInfiniteRowIndex = function (index) {\n    if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(index)) {\n      var fRows = this.parent.frozenRows;\n      var idx = fRows > index ? 0 : fRows;\n      var firstRowIndex = parseInt(this.parent.getRows()[parseInt(idx.toString(), 10)].getAttribute(literals.ariaRowIndex), 10) - 1;\n      index = fRows > index ? index : index - firstRowIndex + fRows;\n    }\n    return index;\n  };\n  ContentRender.prototype.getVirtualRowIndex = function (index) {\n    return index;\n  };\n  ContentRender.prototype.enableAfterRender = function (e) {\n    if (e.module === 'group' && e.enable) {\n      this.generator = this.getModelGenerator();\n    }\n  };\n  ContentRender.prototype.setRowObjects = function (rows) {\n    this.rows = rows;\n  };\n  /**\n   * @param {NotifyArgs} args - specifies the args\n   * @returns {void}\n   * @hidden\n   */\n  ContentRender.prototype.immutableModeRendering = function (args) {\n    var _this = this;\n    if (args === void 0) {\n      args = {};\n    }\n    var gObj = this.parent;\n    gObj.hideSpinner();\n    var key = gObj.getPrimaryKeyFieldNames()[0];\n    var oldKeys = {};\n    var newKeys = {};\n    var newRowObjs = [];\n    var oldIndexes = {};\n    var oldRowObjs = gObj.getRowsObject().slice();\n    var batchChangeKeys = this.getBatchEditedRecords(key, oldRowObjs);\n    var newIndexes = {};\n    var hasBatch = Object.keys(batchChangeKeys).length !== 0;\n    if (gObj.getContent().querySelector('.e-emptyrow') || args.requestType === 'reorder' || this.parent.groupSettings.columns.length) {\n      this.refreshContentRows(args);\n    } else {\n      if (gObj.currentViewData.length === 0) {\n        return;\n      }\n      var oldRowElements = {};\n      var tbody = gObj.createElement(literals.tbody, {\n        attrs: {\n          role: 'rowgroup'\n        }\n      });\n      var dataSource = gObj.currentViewData;\n      var trs = [].slice.call(this.getTable().querySelector(literals.tbody).children);\n      if (this.prevCurrentView.length) {\n        var prevLen = this.prevCurrentView.length;\n        var currentLen = dataSource.length;\n        if (prevLen === currentLen) {\n          for (var i = 0; i < currentLen; i++) {\n            if (this.parent.editSettings.mode === 'Batch' && trs[parseInt(i.toString(), 10)].classList.contains('e-insertedrow')) {\n              trs.splice(i, 1);\n              --i;\n              continue;\n            }\n            newKeys[dataSource[parseInt(i.toString(), 10)][\"\" + key]] = oldKeys[this.prevCurrentView[parseInt(i.toString(), 10)][\"\" + key]] = i;\n            newIndexes[parseInt(i.toString(), 10)] = dataSource[parseInt(i.toString(), 10)][\"\" + key];\n            oldRowElements[oldRowObjs[parseInt(i.toString(), 10)].uid] = trs[parseInt(i.toString(), 10)];\n            oldIndexes[parseInt(i.toString(), 10)] = this.prevCurrentView[parseInt(i.toString(), 10)][\"\" + key];\n          }\n        } else {\n          for (var i = 0; i < currentLen; i++) {\n            newKeys[dataSource[parseInt(i.toString(), 10)][\"\" + key]] = i;\n            newIndexes[parseInt(i.toString(), 10)] = dataSource[parseInt(i.toString(), 10)][\"\" + key];\n          }\n          for (var i = 0; i < prevLen; i++) {\n            if (this.parent.editSettings.mode === 'Batch' && trs[parseInt(i.toString(), 10)].classList.contains('e-insertedrow')) {\n              trs.splice(i, 1);\n              --i;\n              continue;\n            }\n            oldRowElements[oldRowObjs[parseInt(i.toString(), 10)].uid] = trs[parseInt(i.toString(), 10)];\n            oldKeys[this.prevCurrentView[parseInt(i.toString(), 10)][\"\" + key]] = i;\n            oldIndexes[parseInt(i.toString(), 10)] = this.prevCurrentView[parseInt(i.toString(), 10)][\"\" + key];\n          }\n        }\n      }\n      for (var i = 0; i < dataSource.length; i++) {\n        var oldIndex = oldKeys[dataSource[parseInt(i.toString(), 10)][\"\" + key]];\n        if (!isNullOrUndefined(oldIndex)) {\n          var isEqual = false;\n          if (this.parent.enableDeepCompare) {\n            isEqual = this.objectEqualityChecker(this.prevCurrentView[parseInt(oldIndex.toString(), 10)], dataSource[parseInt(i.toString(), 10)]);\n          }\n          var tr = oldRowElements[oldRowObjs[parseInt(oldIndex.toString(), 10)].uid];\n          newRowObjs.push(oldRowObjs[parseInt(oldIndex.toString(), 10)]);\n          if (this.rowElements[parseInt(oldIndex.toString(), 10)] && this.rowElements[parseInt(oldIndex.toString(), 10)].getAttribute('data-uid') === newRowObjs[parseInt(i.toString(), 10)].uid && (hasBatch && isNullOrUndefined(batchChangeKeys[newIndexes[parseInt(i.toString(), 10)]]) || !hasBatch && (isEqual || this.prevCurrentView[parseInt(oldIndex.toString(), 10)] === dataSource[parseInt(i.toString(), 10)]))) {\n            if (oldIndex !== i) {\n              this.refreshImmutableContent(i, tr, newRowObjs[parseInt(i.toString(), 10)]);\n            }\n            tbody.appendChild(tr);\n            continue;\n          }\n          if (hasBatch && !isNullOrUndefined(batchChangeKeys[newIndexes[parseInt(i.toString(), 10)]]) || !this.parent.enableDeepCompare && dataSource[parseInt(i.toString(), 10)] !== this.prevCurrentView[parseInt(oldIndex.toString(), 10)] || this.parent.enableDeepCompare && !isEqual) {\n            oldRowObjs[parseInt(oldIndex.toString(), 10)].setRowValue(dataSource[parseInt(i.toString(), 10)]);\n          }\n          tbody.appendChild(tr);\n          this.refreshImmutableContent(i, tr, newRowObjs[parseInt(i.toString(), 10)]);\n        } else {\n          var row = new RowRenderer(this.serviceLocator, null, gObj);\n          var args_1 = {\n            startIndex: i\n          };\n          var modelData = this.generator.generateRows([dataSource[parseInt(i.toString(), 10)]], args_1);\n          newRowObjs.push(modelData[0]);\n          var tr = row.render(modelData[0], gObj.getColumns());\n          tbody.appendChild(tr);\n          this.refreshImmutableContent(i, tr, newRowObjs[parseInt(i.toString(), 10)]);\n        }\n      }\n      this.rows = newRowObjs;\n      this.rowElements = [].slice.call(tbody.children);\n      remove(this.getTable().querySelector(literals.tbody));\n      this.getTable().appendChild(tbody);\n      this.parent.trigger(events.dataBound, {}, function () {\n        if (_this.parent.allowTextWrap) {\n          _this.parent.notify(events.freezeRender, {\n            case: 'textwrap'\n          });\n        }\n      });\n      if (args) {\n        var action = (args.requestType || '').toLowerCase() + '-complete';\n        this.parent.notify(action, args);\n      }\n    }\n  };\n  ContentRender.prototype.objectEqualityChecker = function (old, next) {\n    var keys = Object.keys(old);\n    var isEqual = true;\n    for (var i = 0; i < keys.length; i++) {\n      if (old[keys[parseInt(i.toString(), 10)]] !== next[keys[parseInt(i.toString(), 10)]]) {\n        var isDate = old[keys[parseInt(i.toString(), 10)]] instanceof Date && next[keys[parseInt(i.toString(), 10)]] instanceof Date;\n        if (!isDate || old[keys[parseInt(i.toString(), 10)]].getTime() !== next[keys[parseInt(i.toString(), 10)]].getTime()) {\n          isEqual = false;\n          break;\n        }\n      }\n    }\n    return isEqual;\n  };\n  ContentRender.prototype.getBatchEditedRecords = function (primaryKey, rows) {\n    var keys = {};\n    var changes = this.parent.getBatchChanges();\n    var changedRecords = [];\n    var addedRecords = [];\n    if (Object.keys(changes).length) {\n      changedRecords = changes.changedRecords;\n      addedRecords = changes.addedRecords;\n    }\n    var args = {\n      cancel: false\n    };\n    this.parent.notify(events.immutableBatchCancel, {\n      rows: rows,\n      args: args\n    });\n    if (addedRecords.length) {\n      if (this.parent.editSettings.newRowPosition === 'Bottom') {\n        rows.splice(rows.length - 1, addedRecords.length);\n      } else {\n        if (!args.cancel) {\n          rows.splice(0, addedRecords.length);\n        }\n      }\n    }\n    for (var i = 0; i < changedRecords.length; i++) {\n      keys[changedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]] = i;\n    }\n    return keys;\n  };\n  ContentRender.prototype.refreshImmutableContent = function (index, tr, row) {\n    row.isAltRow = this.parent.enableAltRow ? index % 2 !== 0 : false;\n    if (row.isAltRow) {\n      tr.classList.add('e-altrow');\n    } else {\n      tr.classList.remove('e-altrow');\n    }\n    row.index = index;\n    row.edit = undefined;\n    row.isDirty = false;\n    tr.setAttribute(literals.ariaRowIndex, (index + 1).toString());\n    this.updateCellIndex(tr, index);\n  };\n  ContentRender.prototype.updateCellIndex = function (rowEle, index) {\n    for (var i = 0; i < rowEle.cells.length; i++) {\n      rowEle.cells[parseInt(i.toString(), 10)].setAttribute('index', index.toString());\n    }\n  };\n  return ContentRender;\n}();\nexport { ContentRender };","map":{"version":3,"names":["Droppable","isNullOrUndefined","extend","setStyleAttribute","remove","updateBlazorTemplate","getUpdateUsingRaf","appendChildren","setDisplayValue","clearReactVueTemplates","getScrollBarWidth","getScrollWidth","getTransformValues","events","RowRenderer","CellMergeRender","RowModelGenerator","GroupModelGenerator","isGroupAdaptive","addFixedColumnBorder","literals","ContentRender","parent","serviceLocator","_this","rows","freezeRows","movableRows","freezeRowElements","currentInfo","prevCurrentView","isLoaded","drop","e","notify","columnDrop","target","droppedElement","infiniteCache","visibleRows","visibleFrozenRows","rightFreezeRows","isAddRows","isInfiniteFreeze","useGroupCache","tempFreezeRows","rafCallback","args","arg","ariaService","setBusy","getPanel","querySelector","content","isDestroyed","slice","enableInfiniteScrolling","groupSettings","enableLazyLoading","i","length","setRowsInLazyGroup","parseInt","toString","getRowsObject","prevPage","infiniteScrollSettings","enableCache","maxBlock","maxBlocks","rowIdx","rowElements","getAttribute","startIdx","Math","ceil","pageSettings","pageSize","count","concat","contentReady","editSettings","showAddNewRow","addNewRowFocus","showAddNewRowFocus","autoFit","preventAdjustColumns","isInitialLoad","focusModule","setFirstFocusableTabIndex","isManualRefresh","requestType","infiniteScrollModule","undefined","isReactChild","parentDetails","parentInstObj","isReact","element","querySelectorAll","thisRef_1","renderTemplates","trigger","dataBound","allowTextWrap","freezeRender","case","height","getContentTable","scrollHeight","getContent","clientHeight","scrollModule","setPadding","removePadding","action","toLowerCase","cancel","actionComplete","hideSpinner","widthService","getService","enableDeepCompare","getDataModule","isRemote","generator","getModelGenerator","enableColumnVirtualization","enableVirtualization","on","columnVisibilityChanged","setVisible","colGroupRefresh","uiUpdate","enableAfterRender","refreshInfiniteModeBlocks","refreshContentRows","beforeCellFocused","destroy","droppableDestroy","prototype","byKey","keyArgs","pressedKey","renderPanel","gObj","div","gridContent","setOptions","busy","setPanel","createElement","className","innerDiv","isFrozenGrid","renderHorizontalScrollbar","classList","add","appendChild","child","scrollbarHeight","setScrollbarHeight","ele","style","minHeight","maxHeight","renderTable","contentDiv","virtualTable","virtualTrack","createContentTable","setTable","table","selectionSettings","type","multiselectable","initializeContentDrop","frozenRows","getHeaderContent","id","firstElementChild","getTable","attrs","role","cssText","setColGroup","getHeaderTable","colGroup","cloneNode","getColGroup","tbody","currentViewData","editModule","mode","formObj","showConfirmDialog","destroyForm","dataSource","currentMovableRows","rowTemplate","isReactPrintGrid","printGridParent","frag","document","createDocumentFragment","initialPageRecords","hdrfrag","refFrag","refHdrfrag","columns","getColumns","tr","hdrTbody","trElement","row","isInfiniteScroll","isColumnVirtualInfiniteProcess","isInfiniteColumnvirtualization","infiniteDetail","childGrid","detailTemplate","infiniteDetailModified","startIndex","detachDetailTemplate","infiniteDetailDestroy","destroyChildGrid","tbdy","tableName","isGroupFrozenHdr","some","value","emptyVcRows","modelData","checkCache","generateRows","setGroupCache","setInfiniteCache","isFrozenLeft","registeredTemplates","registeredTemplate","template","isFrozen","templatetoclear","j","rootNodes","parentNode","push","destroyTemplate","isVue","templates","cellMerge","updateVirtualCells","blockLoad","vcRows","top_1","scrollTop","virtualInfo","offsets","top","offsets_1","vGroupOffsets","bSize","values","Object","keys","map","key","m","direction","contentModule","isEndBlock","blockIndexes","round","contentPanel","offsetHeight","rowObject","isVFFrozenOnly","sentinelInfo","axis","bIndex","page","data","mhdrData","vgenerator","splice","render","virtualFrozenHdrRefresh","lazyLoadRender","refRowsObj","currentPage","_loop_1","len","this_1","indent","setInfiniteVisibleRows","getBlockSize","isVFreorder","ensureFrozenHeaderRender","ensureVirtualFrozenHeaderRender","isExpand","expandChildGrid","cells","rowTemplateID","elements","isHeader","copied","index","getRowTemplate","requireTemplateRef","thisRef_2","childNodes","rowDataBound","isDataRow","colcount","tagName","isTR","nodeName","lastElementChild","isAngular","isVue3","state_1","refreshExpandandCollapse","removeMaskRow","parentTable","parentElement","innerHTML","setHeight","beforeFragAppend","removeInfiniteRows","appendInfiniteContent","transform","resetStickyLeftPos","width","refreshFrozenScrollbar","appendContent","newRow","startAdd","addedRow","isAddNewRow","isEdit","addRecord","getVisibleFrozenRightCount","enableCacheOnInfiniteColumnVirtual","vRows","rowRenderingMode","textWrapSettings","wrapMode","headerCellHeight","parseFloat","defaultView","getComputedStyle","getPropertyValue","cellHeight","boxSizing","getVisibleFrozenLeftCount","maintainRows","getGroupCache","initialGroupRows","getCurrentBlockInfiniteRecords","getRows","ariaRowIndex","first","last","getReorderedRows","getReorderedFrozenRows","fhdrData","getInfiniteRows","getInfiniteMovableRows","infiniteCacheRows","infiniteRows","panel","contentTable","getRowElements","setRowElements","colgroup","testRow","r","needFullRefresh","getDataRows","infiniteData","infiniteRowVisibility","contentrows","filter","isDetailRow","c","clen","column","idx","getNormalizedColumnIndex","uid","colIdx","getColumnIndexByUid","displayVal","visible","setDisplayNone","invokedFromMedia","hideAtMedia","updateMediaColumns","partialRefresh","isRowDragable","infiniteShowHide","isFreeze","getHeaderColGroup","replaceChild","gridHeader","droppable","accept","canSkip","allowGrouping","renderEmpty","setSelection","set","clearAll","setFreezeSelection","isSelected","k","getRowByIndex","getInfiniteRowIndex","fRows","firstRowIndex","getVirtualRowIndex","module","enable","setRowObjects","immutableModeRendering","getPrimaryKeyFieldNames","oldKeys","newKeys","newRowObjs","oldIndexes","oldRowObjs","batchChangeKeys","getBatchEditedRecords","newIndexes","hasBatch","oldRowElements","trs","call","children","prevLen","currentLen","contains","oldIndex","isEqual","objectEqualityChecker","refreshImmutableContent","setRowValue","args_1","old","next","isDate","Date","getTime","primaryKey","changes","getBatchChanges","changedRecords","addedRecords","immutableBatchCancel","newRowPosition","isAltRow","enableAltRow","edit","isDirty","setAttribute","updateCellIndex","rowEle"],"sources":["D:/weektable/frontend/node_modules/@syncfusion/ej2-grids/src/grid/renderer/content-renderer.js"],"sourcesContent":["import { Droppable } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { setStyleAttribute, remove, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { getUpdateUsingRaf, appendChildren, setDisplayValue, clearReactVueTemplates, getScrollBarWidth, getScrollWidth, getTransformValues } from '../base/util';\nimport * as events from '../base/constant';\nimport { RowRenderer } from './row-renderer';\nimport { CellMergeRender } from './cell-merge-renderer';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport { isGroupAdaptive, addFixedColumnBorder } from '../base/util';\nimport * as literals from '../base/string-literals';\n// eslint-disable-next-line valid-jsdoc, jsdoc/require-param, jsdoc/require-returns\n/**\n * Content module is used to render grid content\n *\n * @hidden\n */\nvar ContentRender = /** @class */ (function () {\n    /**\n     * Constructor for content renderer module\n     *\n     * @param {IGrid} parent - specifies the Igrid\n     * @param {ServiceLocator} serviceLocator - specifies the service locator\n     */\n    function ContentRender(parent, serviceLocator) {\n        var _this = this;\n        this.rows = [];\n        this.freezeRows = [];\n        this.movableRows = [];\n        this.freezeRowElements = [];\n        /** @hidden */\n        this.currentInfo = {};\n        /** @hidden */\n        this.prevCurrentView = [];\n        this.isLoaded = true;\n        this.drop = function (e) {\n            _this.parent.notify(events.columnDrop, { target: e.target, droppedElement: e.droppedElement });\n            remove(e.droppedElement);\n        };\n        /** @hidden */\n        this.infiniteCache = {};\n        /** @hidden */\n        this.visibleRows = [];\n        this.visibleFrozenRows = [];\n        this.rightFreezeRows = [];\n        this.isAddRows = false;\n        this.isInfiniteFreeze = false;\n        this.useGroupCache = false;\n        /** @hidden */\n        this.tempFreezeRows = [];\n        this.rafCallback = function (args) {\n            var arg = args;\n            return function () {\n                _this.ariaService.setBusy(_this.getPanel().querySelector('.' + literals.content), false);\n                if (_this.parent.isDestroyed) {\n                    return;\n                }\n                var rows = _this.rows.slice(0);\n                if (_this.parent.enableInfiniteScrolling) {\n                    if (_this.parent.groupSettings.enableLazyLoading) {\n                        for (var i = 0; i < _this.visibleRows.length; i++) {\n                            _this.setRowsInLazyGroup(_this.visibleRows[parseInt(i.toString(), 10)], i);\n                        }\n                    }\n                    rows = _this.parent.getRowsObject();\n                    var prevPage = arg.prevPage;\n                    if (_this.parent.infiniteScrollSettings.enableCache && prevPage) {\n                        var maxBlock = _this.parent.infiniteScrollSettings.maxBlocks;\n                        rows = [];\n                        var rowIdx = (parseInt(_this.rowElements[0].getAttribute('aria-rowindex'), 10));\n                        var startIdx = Math.ceil(rowIdx / _this.parent.pageSettings.pageSize);\n                        for (var i = 0, count = startIdx; i < maxBlock; i++, count++) {\n                            if (_this.infiniteCache[parseInt(count.toString(), 10)]) {\n                                rows = rows.concat(_this.infiniteCache[parseInt(count.toString(), 10)]);\n                            }\n                        }\n                    }\n                }\n                _this.parent.notify(events.contentReady, { rows: rows, args: arg });\n                if (_this.parent.editSettings.showAddNewRow && _this.parent.addNewRowFocus) {\n                    _this.parent.notify(events.showAddNewRowFocus, {});\n                    _this.parent.addNewRowFocus = false;\n                }\n                if (_this.parent.autoFit) {\n                    _this.parent.preventAdjustColumns();\n                }\n                if (!_this.parent.isInitialLoad) {\n                    _this.parent.focusModule.setFirstFocusableTabIndex();\n                }\n                if (_this.isLoaded) {\n                    _this.parent.isManualRefresh = false;\n                    if (_this.parent.enableInfiniteScrolling && _this.parent.groupSettings.enableLazyLoading && args.requestType === 'sorting') {\n                        _this.parent.infiniteScrollModule['groupCaptionAction'] = undefined;\n                    }\n                    var isReactChild = _this.parent.parentDetails && _this.parent.parentDetails.parentInstObj &&\n                        _this.parent.parentDetails.parentInstObj.isReact;\n                    if ((_this.parent.isReact || isReactChild) && _this.parent.element.querySelectorAll('.e-templatecell').length) {\n                        // eslint-disable-next-line @typescript-eslint/no-this-alias\n                        var thisRef_1 = _this;\n                        thisRef_1.parent.renderTemplates(function () {\n                            thisRef_1.parent.trigger(events.dataBound, {}, function () {\n                                if (thisRef_1.parent.allowTextWrap) {\n                                    thisRef_1.parent.notify(events.freezeRender, { case: 'textwrap' });\n                                }\n                            });\n                        });\n                    }\n                    else {\n                        _this.parent.trigger(events.dataBound, {}, function () {\n                            if (_this.parent.allowTextWrap) {\n                                _this.parent.notify(events.freezeRender, { case: 'textwrap' });\n                            }\n                        });\n                    }\n                    if (_this.parent.allowTextWrap && _this.parent.height === 'auto') {\n                        if (_this.parent.getContentTable().scrollHeight > _this.parent.getContent().clientHeight) {\n                            _this.parent.scrollModule.setPadding();\n                        }\n                        else {\n                            _this.parent.scrollModule.removePadding();\n                        }\n                    }\n                }\n                if (arg) {\n                    var action = (arg.requestType || '').toLowerCase() + '-complete';\n                    _this.parent.notify(action, arg);\n                    if (args.requestType === 'batchsave') {\n                        args.cancel = false;\n                        _this.parent.trigger(events.actionComplete, args);\n                    }\n                }\n                if (_this.isLoaded) {\n                    _this.parent.hideSpinner();\n                }\n            };\n        };\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.widthService = serviceLocator.getService('widthService');\n        this.ariaService = this.serviceLocator.getService('ariaService');\n        this.parent.enableDeepCompare = this.parent.getDataModule().isRemote();\n        this.generator = this.getModelGenerator();\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (!this.parent.enableColumnVirtualization && !this.parent.enableVirtualization\n            && !this.parent.groupSettings.enableLazyLoading) {\n            this.parent.on(events.columnVisibilityChanged, this.setVisible, this);\n        }\n        this.parent.on(events.colGroupRefresh, this.colGroupRefresh, this);\n        this.parent.on(events.uiUpdate, this.enableAfterRender, this);\n        this.parent.on(events.refreshInfiniteModeBlocks, this.refreshContentRows, this);\n        this.parent.on(events.beforeCellFocused, this.beforeCellFocused, this);\n        this.parent.on(events.destroy, this.droppableDestroy, this);\n    }\n    ContentRender.prototype.beforeCellFocused = function (e) {\n        if (e.byKey && (e.keyArgs.action === 'upArrow' || e.keyArgs.action === 'downArrow')) {\n            this.pressedKey = e.keyArgs.action;\n        }\n        else {\n            this.pressedKey = undefined;\n        }\n    };\n    /**\n     * The function is used to render grid content div\n     *\n     * @returns {void}\n     */\n    ContentRender.prototype.renderPanel = function () {\n        var gObj = this.parent;\n        var div = this.parent.element.querySelector('.' + literals.gridContent);\n        if (div) {\n            this.ariaService.setOptions(this.parent.element.querySelector('.' + literals.content), { busy: false });\n            this.setPanel(div);\n            return;\n        }\n        div = this.parent.createElement('div', { className: literals.gridContent });\n        var innerDiv = this.parent.createElement('div', {\n            className: literals.content\n        });\n        this.ariaService.setOptions(innerDiv, { busy: false });\n        if (this.parent.enableColumnVirtualization && this.parent.isFrozenGrid()) {\n            this.renderHorizontalScrollbar(div);\n            innerDiv.classList.add('e-virtual-content');\n        }\n        div.appendChild(innerDiv);\n        this.setPanel(div);\n        gObj.element.appendChild(div);\n    };\n    ContentRender.prototype.renderHorizontalScrollbar = function (element) {\n        var parent = this.parent.createElement('div', { className: 'e-movablescrollbar' });\n        var child = this.parent.createElement('div', { className: 'e-movablechild' });\n        var scrollbarHeight = getScrollBarWidth().toString();\n        this.setScrollbarHeight(child, scrollbarHeight);\n        this.setScrollbarHeight(parent, scrollbarHeight);\n        parent.appendChild(child);\n        element.appendChild(parent);\n    };\n    ContentRender.prototype.setScrollbarHeight = function (ele, height) {\n        ele.style.minHeight = height + 'px';\n        ele.style.maxHeight = height + 'px';\n    };\n    /**\n     * The function is used to render grid content table\n     *\n     * @returns {void}\n     */\n    ContentRender.prototype.renderTable = function () {\n        var contentDiv = this.getPanel();\n        var virtualTable = contentDiv.querySelector('.e-virtualtable');\n        var virtualTrack = contentDiv.querySelector('.e-virtualtrack');\n        if (this.parent.enableVirtualization && !isNullOrUndefined(virtualTable) && !isNullOrUndefined(virtualTrack)) {\n            remove(virtualTable);\n            remove(virtualTrack);\n        }\n        contentDiv.appendChild(this.createContentTable('_content_table'));\n        this.setTable(contentDiv.querySelector('.' + literals.table));\n        if (this.parent.selectionSettings.type === 'Multiple') {\n            this.ariaService.setOptions(this.parent.element, {\n                multiselectable: true\n            });\n        }\n        this.initializeContentDrop();\n        if (this.parent.frozenRows) {\n            this.parent.getHeaderContent().classList.add('e-frozenhdr');\n        }\n    };\n    /**\n     * The function is used to create content table elements\n     *\n     * @param {string} id - specifies the id\n     * @returns {Element} returns the element\n     * @hidden\n     */\n    ContentRender.prototype.createContentTable = function (id) {\n        var innerDiv = this.getPanel().firstElementChild;\n        if (this.getTable()) {\n            remove(this.getTable());\n        }\n        var table = innerDiv.querySelector('.' + literals.table) ? innerDiv.querySelector('.' + literals.table) :\n            this.parent.createElement('table', {\n                className: literals.table, attrs: {\n                    role: 'presentation',\n                    id: this.parent.element.id + id\n                }\n            });\n        table.style.cssText = 'border-collapse: separate; border-spacing: .25px;';\n        this.setColGroup(this.parent.getHeaderTable().querySelector(literals.colGroup).cloneNode(true));\n        table.appendChild(this.getColGroup());\n        table.appendChild(this.parent.createElement(literals.tbody, { attrs: { role: 'rowgroup' } }));\n        innerDiv.appendChild(table);\n        return innerDiv;\n    };\n    /**\n     * Refresh the content of the Grid.\n     *\n     * @param {NotifyArgs} args - specifies the args\n     * @returns {void}\n     */\n    // tslint:disable-next-line:max-func-body-length\n    ContentRender.prototype.refreshContentRows = function (args) {\n        var _this = this;\n        if (args === void 0) { args = {}; }\n        var gObj = this.parent;\n        if (gObj.currentViewData.length === 0) {\n            return;\n        }\n        if (gObj.editSettings && gObj.editModule && gObj.editSettings.mode === 'Batch' && gObj.editModule.formObj\n            && gObj.editSettings.showConfirmDialog === false) {\n            gObj.editModule.destroyForm();\n        }\n        var dataSource = this.currentMovableRows || gObj.currentViewData;\n        var isReact = gObj.isReact && !isNullOrUndefined(gObj.rowTemplate);\n        var isReactPrintGrid = this.parent.printGridParent && this.parent.printGridParent.isReact;\n        var frag = isReact || isReactPrintGrid ? gObj.createElement(literals.tbody, { attrs: { role: 'rowgroup' } }) : document.createDocumentFragment();\n        if (!this.initialPageRecords) {\n            this.initialPageRecords = extend([], dataSource);\n        }\n        var hdrfrag = isReact ? gObj.createElement(literals.tbody, { attrs: { role: 'rowgroup' } }) : document.createDocumentFragment();\n        var refFrag;\n        var refHdrfrag;\n        if ((gObj.isReact || isReactPrintGrid) && gObj.rowTemplate) {\n            refFrag = frag;\n            refHdrfrag = hdrfrag;\n        }\n        var columns = gObj.getColumns();\n        var tr;\n        var hdrTbody;\n        var trElement;\n        var row = new RowRenderer(this.serviceLocator, null, this.parent);\n        var isInfiniteScroll = this.parent.enableInfiniteScrolling\n            && args.requestType === 'infiniteScroll';\n        var isColumnVirtualInfiniteProcess = this.isInfiniteColumnvirtualization() && args.requestType !== 'virtualscroll';\n        var infiniteDetail = gObj.enableInfiniteScrolling && (gObj.childGrid || gObj.detailTemplate) ? true : false;\n        var infiniteDetailModified = infiniteDetail && ((args.action === 'add' && args.requestType === 'save')\n            || args.requestType === 'delete');\n        if (infiniteDetailModified) {\n            args.startIndex = 0;\n            gObj.notify(events.detachDetailTemplate, {});\n        }\n        if (!(isInfiniteScroll && (gObj.childGrid || gObj.detailTemplate) && !gObj.infiniteScrollSettings.enableCache)) {\n            if (infiniteDetail) {\n                this.parent.infiniteScrollModule.infiniteDetailDestroy = true;\n            }\n            gObj.notify(events.destroyChildGrid, isInfiniteScroll && (gObj.childGrid || gObj.detailTemplate)\n                && gObj.infiniteScrollSettings.enableCache ? args : {});\n        }\n        this.rowElements = [];\n        this.rows = [];\n        this.tempFreezeRows = [];\n        var tbdy;\n        var tableName;\n        var isGroupFrozenHdr = this.parent.frozenRows && this.parent.groupSettings.columns.length ? true : false;\n        if (isGroupAdaptive(gObj)) {\n            if (['sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder', 'save', 'delete']\n                .some(function (value) { return args.requestType === value; })) {\n                this.emptyVcRows();\n            }\n        }\n        var modelData;\n        modelData = this.checkCache(modelData, args);\n        if (!this.isAddRows && !this.useGroupCache) {\n            modelData = this.generator.generateRows(dataSource, args);\n        }\n        this.setGroupCache(modelData, args);\n        this.parent.notify(events.setInfiniteCache, { isInfiniteScroll: isInfiniteScroll, modelData: modelData, args: args });\n        var isFrozenLeft = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var registeredTemplates = this.parent.registeredTemplate;\n        if (!(args.requestType === 'infiniteScroll' && !this.parent.infiniteScrollSettings.enableCache) && registeredTemplates\n            && registeredTemplates.template && !args.isFrozen && !isFrozenLeft) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templatetoclear = [];\n            for (var i = 0; i < registeredTemplates.template.length; i++) {\n                for (var j = 0; j < registeredTemplates.template[parseInt(i.toString(), 10)].rootNodes.length; j++) {\n                    if (isNullOrUndefined(registeredTemplates.template[parseInt(i.toString(), 10)]\n                        .rootNodes[parseInt(j.toString(), 10)].parentNode)) {\n                        templatetoclear.push(registeredTemplates.template[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            this.parent.destroyTemplate(['template'], templatetoclear);\n        }\n        if ((this.parent.isReact || this.parent.isVue) && !(args.requestType === 'infiniteScroll' && !this.parent.infiniteScrollSettings.enableCache) && !args.isFrozen) {\n            var templates = [\n                this.parent.isVue ? 'template' : 'columnTemplate', 'rowTemplate', 'detailTemplate',\n                'captionTemplate', 'commandsTemplate', 'groupFooterTemplate', 'groupCaptionTemplate'\n            ];\n            if (args.requestType === 'infiniteScroll' && this.parent.infiniteScrollSettings.enableCache) {\n                templates = [\n                    this.parent.isVue ? 'template' : 'columnTemplate', 'commandsTemplate'\n                ];\n            }\n            clearReactVueTemplates(this.parent, templates);\n        }\n        if (this.parent.enableColumnVirtualization) {\n            var cellMerge = new CellMergeRender(this.serviceLocator, this.parent);\n            cellMerge.updateVirtualCells(modelData);\n        }\n        this.tbody = this.getTable().querySelector(literals.tbody);\n        var startIndex = 0;\n        var blockLoad = true;\n        if (isGroupAdaptive(gObj) && gObj.vcRows.length) {\n            var top_1 = 'top';\n            var scrollTop = !isNullOrUndefined(args.virtualInfo.offsets) ? args.virtualInfo.offsets.top :\n                (!isNullOrUndefined(args.scrollTop) ? args.scrollTop[\"\" + top_1] : 0);\n            if (scrollTop !== 0) {\n                var offsets_1 = gObj.vGroupOffsets;\n                var bSize = gObj.pageSettings.pageSize / 2;\n                var values = Object.keys(offsets_1).map(function (key) { return offsets_1[\"\" + key]; });\n                for (var m = 0; m < values.length; m++) {\n                    if (scrollTop < values[parseInt(m.toString(), 10)]) {\n                        if (!isNullOrUndefined(args.virtualInfo) && args.virtualInfo.direction === 'up') {\n                            startIndex = m > 0 ? ((m - 1) * bSize) : (m * bSize);\n                            break;\n                        }\n                        else {\n                            startIndex = m * bSize;\n                            if (this.parent.contentModule.isEndBlock(m) || this.parent.contentModule.isEndBlock(m + 1)) {\n                                args.virtualInfo.blockIndexes = [m, m + 1];\n                            }\n                            break;\n                        }\n                    }\n                }\n                if (Math.round(scrollTop + this.contentPanel.firstElementChild.offsetHeight) >=\n                    this.contentPanel.firstElementChild.scrollHeight && !args.rowObject) {\n                    blockLoad = false;\n                }\n            }\n        }\n        var isVFFrozenOnly = gObj.frozenRows && this.parent.enableVirtualization\n            && args.requestType === 'reorder';\n        if ((gObj.frozenRows && args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo.axis === 'X') || isVFFrozenOnly) {\n            var bIndex = args.virtualInfo.blockIndexes;\n            var page = args.virtualInfo.page;\n            args.virtualInfo.blockIndexes = [1, 2];\n            if (isVFFrozenOnly) {\n                args.virtualInfo.page = 1;\n            }\n            var data = isVFFrozenOnly ? this.initialPageRecords : dataSource;\n            var mhdrData = this.vgenerator\n                .generateRows(data, args);\n            mhdrData.splice(this.parent.frozenRows);\n            for (var i = 0; i < this.parent.frozenRows; i++) {\n                // mhdrData[parseInt(i.toString(), 10)].cells.splice(0, this.parent.getFrozenColumns());\n                tr = row.render(mhdrData[parseInt(i.toString(), 10)], columns);\n                addFixedColumnBorder(tr);\n                hdrfrag.appendChild(tr);\n            }\n            args.virtualInfo.blockIndexes = bIndex;\n            args.virtualInfo.page = page;\n            if (isVFFrozenOnly && args.virtualInfo.page === 1) {\n                modelData.splice(0, this.parent.frozenRows);\n            }\n        }\n        this.virtualFrozenHdrRefresh(hdrfrag, modelData, row, args, dataSource, columns);\n        if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n            (this.parent.enableVirtualization ? this.parent.lazyLoadRender :\n                this.parent.contentModule).refRowsObj[this.parent.pageSettings.currentPage] = [];\n        }\n        if ((this.parent.enableInfiniteScrolling && this.parent.groupSettings.enableLazyLoading && args.requestType === 'delete')\n            || infiniteDetailModified) { //  || (this.parent.infiniteScrollSettings && this.parent.infiniteScrollSettings.enableCache))\n            this.visibleRows = [];\n        }\n        var _loop_1 = function (i, len) {\n            this_1.rows.push(modelData[parseInt(i.toString(), 10)]);\n            if (this_1.parent.groupSettings.enableLazyLoading && !this_1.useGroupCache && this_1.parent.groupSettings.columns.length) {\n                (this_1.parent.enableVirtualization ? this_1.parent.lazyLoadRender :\n                    this_1.parent.contentModule).refRowsObj[this_1.parent.pageSettings.currentPage].push(modelData[parseInt(i.toString(), 10)]);\n                this_1.setRowsInLazyGroup(modelData[parseInt(i.toString(), 10)], i);\n                if (isNullOrUndefined(modelData[parseInt(i.toString(), 10)].indent)) {\n                    return \"continue\";\n                }\n            }\n            this_1.setInfiniteVisibleRows(args, modelData[parseInt(i.toString(), 10)]);\n            if (isGroupAdaptive(gObj) && args.virtualInfo && args.virtualInfo.blockIndexes\n                && (this_1.rowElements.length >= (args.virtualInfo.blockIndexes.length * this_1.parent.contentModule.getBlockSize()))\n                && blockLoad) {\n                this_1.parent.currentViewData['records'] = this_1.rows.map(function (m) { return m.data; });\n                return \"break\";\n            }\n            if (!gObj.rowTemplate) {\n                tr = row.render(modelData[parseInt(i.toString(), 10)], columns);\n                addFixedColumnBorder(tr);\n                var isVFreorder = this_1.ensureFrozenHeaderRender(args);\n                if (gObj.frozenRows && (i < gObj.frozenRows || isGroupFrozenHdr) && !isInfiniteScroll && args.requestType !== 'virtualscroll' && isVFreorder\n                    && this_1.ensureVirtualFrozenHeaderRender(args)) {\n                    hdrfrag.appendChild(tr);\n                }\n                else {\n                    frag.appendChild(tr);\n                }\n                var rowIdx = parseInt(tr.getAttribute('aria-rowindex'), 10) - 1;\n                if (rowIdx + 1 === gObj.frozenRows) {\n                    isGroupFrozenHdr = false;\n                }\n                if (modelData[parseInt(i.toString(), 10)].isExpand) {\n                    gObj.notify(events.expandChildGrid, tr.cells[gObj.groupSettings.columns.length]);\n                }\n            }\n            else {\n                var rowTemplateID = gObj.element.id + 'rowTemplate';\n                var elements = void 0;\n                if (gObj.isReact || isReactPrintGrid) {\n                    var isHeader = gObj.frozenRows && i < gObj.frozenRows;\n                    var copied = extend({ index: i }, dataSource[parseInt(i.toString(), 10)]);\n                    gObj.getRowTemplate()(copied, gObj, 'rowTemplate', rowTemplateID, null, null, isHeader ? hdrfrag : frag);\n                    if (gObj.requireTemplateRef) {\n                        // eslint-disable-next-line @typescript-eslint/no-this-alias\n                        var thisRef_2 = this_1;\n                        thisRef_2.parent.renderTemplates(function () {\n                            if (gObj.frozenRows && i < gObj.frozenRows) {\n                                tr = refHdrfrag.childNodes[parseInt(i.toString(), 10)];\n                            }\n                            else {\n                                trElement = refFrag.childNodes[parseInt(i.toString(), 10)];\n                            }\n                            var arg = { data: modelData[parseInt(i.toString(), 10)].data,\n                                row: trElement ? trElement : tr };\n                            thisRef_2.parent.trigger(events.rowDataBound, arg);\n                            if (modelData[parseInt(i.toString(), 10)].isDataRow || (thisRef_2.parent.enableVirtualization &&\n                                thisRef_2.parent.groupSettings.enableLazyLoading)) {\n                                thisRef_2.rowElements.push(arg.row);\n                            }\n                            thisRef_2.ariaService.setOptions(thisRef_2.parent.element, {\n                                colcount: gObj.getColumns().length.toString()\n                            });\n                            if (i === modelData.length - 1) {\n                                refFrag = null;\n                                refHdrfrag = null;\n                            }\n                        });\n                        return \"continue\";\n                    }\n                }\n                else {\n                    elements = gObj.getRowTemplate()(extend({ index: i }, dataSource[parseInt(i.toString(), 10)]), gObj, 'rowTemplate', rowTemplateID, undefined, undefined, undefined, this_1.parent['root']);\n                }\n                if (!gObj.isReact && elements[0].tagName === 'TBODY') {\n                    for (var j = 0; j < elements.length; j++) {\n                        var isTR = elements[parseInt(j.toString(), 10)].nodeName.toLowerCase() === 'tr';\n                        if (isTR || (elements[parseInt(j.toString(), 10)].querySelectorAll && elements[parseInt(j.toString(), 10)].querySelectorAll('tr').length)) {\n                            tr = isTR ? elements[parseInt(j.toString(), 10)] : elements[parseInt(j.toString(), 10)].querySelector('tr');\n                        }\n                    }\n                    if (gObj.frozenRows && i < gObj.frozenRows) {\n                        hdrfrag.appendChild(tr);\n                    }\n                    else {\n                        frag.appendChild(tr);\n                    }\n                }\n                else {\n                    if (gObj.frozenRows && i < gObj.frozenRows) {\n                        tr = !gObj.isReact ? appendChildren(hdrfrag, elements) : hdrfrag.lastElementChild;\n                    }\n                    else {\n                        // frag.appendChild(tr);\n                        if (!gObj.isReact) {\n                            tr = appendChildren(frag, elements);\n                        }\n                        trElement = gObj.isReact ? frag.lastElementChild : tr.lastElementChild;\n                    }\n                }\n                var arg = { data: modelData[parseInt(i.toString(), 10)].data, row: trElement ? trElement : tr };\n                this_1.parent.trigger(events.rowDataBound, arg);\n            }\n            if (modelData[parseInt(i.toString(), 10)].isDataRow || (this_1.parent.enableVirtualization &&\n                this_1.parent.groupSettings.enableLazyLoading)) {\n                if (!isNullOrUndefined(gObj.rowTemplate) && (gObj.isAngular || gObj.isVue3 || gObj.isVue)) {\n                    this_1.rowElements.push(trElement ? trElement : tr);\n                }\n                else {\n                    this_1.rowElements.push(tr);\n                }\n            }\n            this_1.ariaService.setOptions(this_1.parent.element, { colcount: gObj.getColumns().length.toString() });\n        };\n        var this_1 = this;\n        for (var i = startIndex, len = modelData.length; i < len; i++) {\n            var state_1 = _loop_1(i, len);\n            if (state_1 === \"break\")\n                break;\n        }\n        var isReactChild = gObj.parentDetails && gObj.parentDetails.parentInstObj && gObj.parentDetails.parentInstObj.isReact;\n        if ((gObj.isReact || isReactChild) && !gObj.requireTemplateRef) {\n            gObj.renderTemplates();\n        }\n        if (this.parent.enableInfiniteScrolling && this.parent.groupSettings.enableLazyLoading) {\n            this.parent.contentModule.refRowsObj[this.parent.pageSettings.currentPage] =\n                this.parent.contentModule['groupCache'][this.parent.pageSettings.currentPage];\n        }\n        if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n            this.parent.notify(events.refreshExpandandCollapse, {\n                rows: (this.parent.enableVirtualization ? this.parent.lazyLoadRender :\n                    this.parent.contentModule).refRowsObj[this.parent.pageSettings.currentPage]\n            });\n        }\n        gObj.removeMaskRow();\n        this.parent.notify('removeGanttShimmer', { requestType: 'hideShimmer' });\n        if ((gObj.frozenRows && args.requestType !== 'virtualscroll' && !isInfiniteScroll && this.ensureVirtualFrozenHeaderRender(args))\n            || (args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo && args.virtualInfo.sentinelInfo.axis === 'X')) {\n            hdrTbody = gObj.getHeaderTable().querySelector(literals.tbody);\n            if (isReact) {\n                var parentTable = hdrTbody.parentElement;\n                remove(hdrTbody);\n                parentTable.appendChild(hdrfrag);\n            }\n            else {\n                hdrTbody.innerHTML = '';\n                hdrTbody.appendChild(hdrfrag);\n            }\n            if (!gObj.isInitialLoad) {\n                gObj.scrollModule.setHeight();\n            }\n        }\n        // if (!gObj.enableVirtualization && hdrTbody && gObj.frozenRows && idx === 0 && cont.offsetHeight === Number(gObj.height)) {\n        //     cont.style.height = (cont.offsetHeight - hdrTbody.offsetHeight) + 'px';\n        // }\n        args.rows = this.rows.slice(0);\n        getUpdateUsingRaf(function () {\n            _this.parent.notify(events.beforeFragAppend, args);\n            if (!_this.parent.enableVirtualization && (!_this.parent.enableColumnVirtualization || isColumnVirtualInfiniteProcess)\n                && !isInfiniteScroll) {\n                if (!gObj.isReact) {\n                    _this.tbody.innerHTML = '';\n                }\n                if (!isNullOrUndefined(_this.tbody.parentElement)) {\n                    remove(_this.tbody);\n                }\n                else {\n                    remove(gObj.getContentTable().querySelector(literals.tbody));\n                }\n                _this.tbody = _this.parent.createElement(literals.tbody, { attrs: { role: 'rowgroup' } });\n            }\n            if (gObj.rowTemplate) {\n                updateBlazorTemplate(gObj.element.id + 'rowTemplate', 'RowTemplate', gObj);\n            }\n            if (!isNullOrUndefined(_this.parent.infiniteScrollModule) && ((_this.parent.enableInfiniteScrolling\n                && !_this.isInfiniteColumnvirtualization()) || isColumnVirtualInfiniteProcess)) {\n                _this.isAddRows = false;\n                _this.parent.notify(events.removeInfiniteRows, { args: args });\n                _this.parent.notify(events.appendInfiniteContent, {\n                    tbody: tbdy ? tbdy : _this.tbody, frag: frag, args: args, rows: _this.rows,\n                    rowElements: _this.rowElements, visibleRows: _this.visibleRows,\n                    tableName: tableName\n                });\n                if (_this.isInfiniteColumnvirtualization() && _this.parent.isFrozenGrid()) {\n                    var virtualTable = _this.parent.getContent().querySelector('.e-virtualtable');\n                    var transform = getTransformValues(virtualTable);\n                    _this.parent.contentModule.resetStickyLeftPos(transform.width);\n                    _this.widthService.refreshFrozenScrollbar();\n                }\n            }\n            else {\n                _this.useGroupCache = false;\n                _this.appendContent(_this.tbody, frag, args);\n            }\n            if (_this.parent.editSettings.showAddNewRow && (_this.parent.enableVirtualization || _this.parent.enableInfiniteScrolling)) {\n                var newRow = _this.parent.element.querySelector('.e-addrow-removed');\n                if (newRow) {\n                    remove(newRow);\n                }\n            }\n            var startAdd = !_this.parent.element.querySelector('.' + literals.addedRow);\n            if (_this.parent.editSettings.showAddNewRow && _this.parent.editSettings.mode === 'Normal') {\n                if (startAdd) {\n                    if (_this.parent.enableVirtualization || _this.parent.enableInfiniteScrolling) {\n                        _this.parent.isAddNewRow = true;\n                    }\n                    _this.parent.isEdit = false;\n                    _this.parent.addRecord();\n                }\n                if (startAdd || ((_this.parent.enableVirtualization || _this.parent.enableInfiniteScrolling) &&\n                    ['sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder']\n                        .some(function (value) { return args.requestType === value; }))) {\n                    _this.parent.notify(events.showAddNewRowFocus, {});\n                }\n            }\n            if (_this.parent.getVisibleFrozenRightCount() && _this.parent.getContent() && getScrollWidth(_this.parent) > 0) {\n                _this.parent.element.classList.add('e-right-shadow');\n            }\n            frag = null;\n        }, this.rafCallback(extend({}, args)));\n    };\n    ContentRender.prototype.isInfiniteColumnvirtualization = function () {\n        return this.parent.enableColumnVirtualization && this.parent.enableInfiniteScrolling;\n    };\n    ContentRender.prototype.enableCacheOnInfiniteColumnVirtual = function () {\n        return this.isInfiniteColumnvirtualization() && this.parent.infiniteScrollSettings.enableCache;\n    };\n    ContentRender.prototype.emptyVcRows = function () {\n        this.parent.vcRows = [];\n        this.parent.vRows = [];\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ContentRender.prototype.appendContent = function (tbody, frag, args, tableName) {\n        var isReact = this.parent.isReact && !isNullOrUndefined(this.parent.rowTemplate);\n        if (isReact) {\n            this.getTable().appendChild(frag);\n        }\n        else {\n            tbody.appendChild(frag);\n            this.getTable().appendChild(tbody);\n        }\n        if (this.parent.rowRenderingMode === 'Vertical' && this.parent.allowTextWrap && (this.parent.textWrapSettings.wrapMode === 'Header'\n            || this.parent.textWrapSettings.wrapMode === 'Both')) {\n            var cells = tbody.querySelectorAll('td');\n            for (var i = 0; i < cells.length; i++) {\n                var headerCellHeight = parseFloat(document.defaultView.getComputedStyle(cells[parseInt(i.toString(), 10)], '::before').getPropertyValue('height'));\n                var cellHeight = cells[parseInt(i.toString(), 10)].offsetHeight;\n                if (headerCellHeight > cellHeight) {\n                    cells[parseInt(i.toString(), 10)].style.height = headerCellHeight + 'px';\n                    cells[parseInt(i.toString(), 10)].style.boxSizing = 'content-box';\n                }\n            }\n        }\n        if (this.parent.getVisibleFrozenLeftCount() && this.parent.enableColumnVirtualization) {\n            this.widthService.refreshFrozenScrollbar();\n        }\n    };\n    ContentRender.prototype.setRowsInLazyGroup = function (row, index) {\n        if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n            (this.parent.enableVirtualization ? this.parent.lazyLoadRender :\n                this.parent.contentModule).maintainRows(row, index);\n        }\n    };\n    ContentRender.prototype.setGroupCache = function (data, args) {\n        if (!this.useGroupCache && this.parent.groupSettings.enableLazyLoading) {\n            this.parent.notify(events.setGroupCache, { args: args, data: data });\n        }\n    };\n    ContentRender.prototype.ensureFrozenHeaderRender = function (args) {\n        return !((this.parent.enableVirtualization\n            && (args.requestType === 'reorder' || args.requestType === 'refresh')) || (this.parent.infiniteScrollSettings.enableCache\n            && this.parent.frozenRows && this.parent.infiniteScrollModule.requestType === 'delete'\n            && this.parent.pageSettings.currentPage !== 1));\n    };\n    ContentRender.prototype.ensureVirtualFrozenHeaderRender = function (args) {\n        return !(this.parent.enableVirtualization && args.requestType === 'delete');\n    };\n    ContentRender.prototype.checkCache = function (modelData, args) {\n        if (this.parent.infiniteScrollSettings.enableCache && args.requestType === 'infiniteScroll') {\n            this.isAddRows = !isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage]);\n            if (this.isAddRows) {\n                var data = this.infiniteCache[this.parent.pageSettings.currentPage];\n                modelData = this.parent.pageSettings.currentPage === 1 ? data.slice(this.parent.frozenRows) : data;\n            }\n            return modelData;\n        }\n        if (this.parent.groupSettings.enableLazyLoading && this.parent.groupSettings.columns.length && (args.requestType === 'paging'\n            || args.requestType === 'columnstate' || args.requestType === 'reorder' || args.requestType === 'virtualscroll')\n            && (this.parent.enableVirtualization ? this.parent.lazyLoadRender :\n                this.parent.contentModule).getGroupCache()[this.parent.pageSettings.currentPage]) {\n            if (!this.parent.enableVirtualization) {\n                this.useGroupCache = true;\n            }\n            return this.parent.enableVirtualization ? this.parent.getRowsObject() :\n                this.parent.contentModule.initialGroupRows(args.requestType === 'reorder');\n        }\n        return null;\n    };\n    ContentRender.prototype.setInfiniteVisibleRows = function (args, data) {\n        if (this.parent.enableInfiniteScrolling && !this.parent.infiniteScrollSettings.enableCache\n            && !(this.isInfiniteColumnvirtualization() && args.requestType === 'virtualscroll')) {\n            this.visibleRows.push(data);\n        }\n    };\n    ContentRender.prototype.getCurrentBlockInfiniteRecords = function () {\n        var data = [];\n        if (this.parent.infiniteScrollSettings.enableCache) {\n            if (!Object.keys(this.infiniteCache).length) {\n                return [];\n            }\n            var rows = this.parent.getRows();\n            var index = parseInt(rows[this.parent.frozenRows].getAttribute(literals.ariaRowIndex), 10) - 1;\n            var first = Math.ceil((index + 1) / this.parent.pageSettings.pageSize);\n            index = parseInt(rows[rows.length - 1].getAttribute(literals.ariaRowIndex), 10) - 1;\n            var last = Math.ceil((index + (rows.length ? 1 : 0)) / this.parent.pageSettings.pageSize);\n            for (var i = first; i <= last; i++) {\n                data = !data.length ? this.infiniteCache[parseInt(i.toString(), 10)]\n                    : data.concat(this.infiniteCache[parseInt(i.toString(), 10)]);\n            }\n            if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n                data = this.infiniteCache[1].slice(0, this.parent.frozenRows).concat(data);\n            }\n        }\n        return data;\n    };\n    ContentRender.prototype.getReorderedRows = function (args) {\n        return this.parent.contentModule.getReorderedFrozenRows(args);\n    };\n    ContentRender.prototype.virtualFrozenHdrRefresh = function (hdrfrag, modelData, row, args, dataSource, columns) {\n        if (this.parent.frozenRows && this.parent.enableVirtualization\n            && (args.requestType === 'reorder' || args.requestType === 'refresh')) {\n            var tr = void 0;\n            var fhdrData = this.getReorderedRows(args);\n            for (var i = 0; i < fhdrData.length; i++) {\n                tr = row.render(fhdrData[parseInt(i.toString(), 10)], columns);\n                hdrfrag.appendChild(tr);\n            }\n            if (args.virtualInfo.page === 1) {\n                modelData.splice(0, this.parent.frozenRows);\n            }\n        }\n    };\n    ContentRender.prototype.getInfiniteRows = function () {\n        var rows = [];\n        if (this.parent.enableInfiniteScrolling) {\n            if (this.parent.infiniteScrollSettings.enableCache) {\n                var keys = Object.keys(this.infiniteCache);\n                for (var i = 0; i < keys.length; i++) {\n                    rows = rows.concat(this.infiniteCache[keys[parseInt(i.toString(), 10)]]);\n                }\n            }\n            else {\n                rows = this.visibleRows;\n            }\n        }\n        return rows;\n    };\n    ContentRender.prototype.getInfiniteMovableRows = function () {\n        var infiniteCacheRows = this.getCurrentBlockInfiniteRecords();\n        var infiniteRows = this.parent.enableInfiniteScrolling ? infiniteCacheRows.length ? infiniteCacheRows\n            : this.visibleRows : [];\n        return infiniteRows;\n    };\n    /**\n     * Get the content div element of grid\n     *\n     * @returns {Element} returns the element\n     */\n    ContentRender.prototype.getPanel = function () {\n        return this.contentPanel;\n    };\n    /**\n     * Set the content div element of grid\n     *\n     * @param  {Element} panel - specifies the panel\n     * @returns {void}\n     */\n    ContentRender.prototype.setPanel = function (panel) {\n        this.contentPanel = panel;\n    };\n    /**\n     * Get the content table element of grid\n     *\n     * @returns {Element} returns the element\n     */\n    ContentRender.prototype.getTable = function () {\n        return this.contentTable;\n    };\n    /**\n     * Set the content table element of grid\n     *\n     * @param  {Element} table - specifies the table\n     * @returns {void}\n     */\n    ContentRender.prototype.setTable = function (table) {\n        this.contentTable = table;\n    };\n    /**\n     * Get the Movable Row collection in the Freeze pane Grid.\n     *\n     * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>} returns the row\n     */\n    ContentRender.prototype.getRows = function () {\n        var infiniteRows = this.getInfiniteRows();\n        return infiniteRows.length ? infiniteRows : this.rows;\n    };\n    /**\n     * Get the content table data row elements\n     *\n     * @returns {Element} returns the element\n     */\n    ContentRender.prototype.getRowElements = function () {\n        return this.rowElements;\n    };\n    /**\n     * Get the content table data row elements\n     *\n     * @param {Element[]} elements - specifies the elements\n     * @returns {void}\n     */\n    ContentRender.prototype.setRowElements = function (elements) {\n        this.rowElements = elements;\n    };\n    /**\n     * Get the header colgroup element\n     *\n     * @returns {Element} returns the element\n     */\n    ContentRender.prototype.getColGroup = function () {\n        return this.colgroup;\n    };\n    /**\n     * Set the header colgroup element\n     *\n     * @param {Element} colGroup - specifies the colgroup\n     * @returns {Element} returns the element\n     */\n    ContentRender.prototype.setColGroup = function (colGroup) {\n        if (!isNullOrUndefined(colGroup)) {\n            colGroup.id = 'content-' + colGroup.id;\n        }\n        return this.colgroup = colGroup;\n    };\n    /**\n     * Function to hide content table column based on visible property\n     *\n     * @param {Column[]} columns - specifies the column\n     * @returns {void}\n     */\n    ContentRender.prototype.setVisible = function (columns) {\n        var gObj = this.parent;\n        var rows = this.getRows();\n        var testRow;\n        rows.some(function (r) { if (r.isDataRow) {\n            testRow = r;\n        } return r.isDataRow; });\n        var needFullRefresh = true;\n        if (!gObj.groupSettings.columns.length && testRow) {\n            needFullRefresh = false;\n        }\n        var tr = gObj.getDataRows();\n        var args = {};\n        var infiniteData = this.infiniteRowVisibility();\n        var contentrows = infiniteData ? infiniteData\n            : this.rows.filter(function (row) { return !row.isDetailRow; });\n        for (var c = 0, clen = columns.length; c < clen; c++) {\n            var column = columns[parseInt(c.toString(), 10)];\n            var idx = this.parent.getNormalizedColumnIndex(column.uid);\n            var colIdx = this.parent.getColumnIndexByUid(column.uid);\n            var displayVal = column.visible === true ? '' : 'none';\n            if (idx !== -1 && testRow && idx < testRow.cells.length) {\n                setStyleAttribute(this.getColGroup().childNodes[parseInt(idx.toString(), 10)], { 'display': displayVal });\n            }\n            if (!needFullRefresh) {\n                this.setDisplayNone(tr, colIdx, displayVal, contentrows);\n            }\n            if (!this.parent.invokedFromMedia && column.hideAtMedia) {\n                this.parent.updateMediaColumns(column);\n            }\n            this.parent.invokedFromMedia = false;\n        }\n        if (needFullRefresh) {\n            this.refreshContentRows({ requestType: 'refresh' });\n        }\n        else {\n            this.parent.notify(events.partialRefresh, { rows: contentrows, args: args });\n            if (this.parent.editSettings.showAddNewRow && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.parent.notify(events.showAddNewRowFocus, {});\n            }\n        }\n    };\n    /**\n     * @param {Object} tr - specifies the trr\n     * @param {number} idx - specifies the idx\n     * @param {string} displayVal - specifies the displayval\n     * @param {Row<Column>} rows - specifies the rows\n     * @returns {void}\n     * @hidden\n     */\n    ContentRender.prototype.setDisplayNone = function (tr, idx, displayVal, rows) {\n        setDisplayValue(tr, idx, displayVal, rows, this.parent, this.parent.isRowDragable());\n        this.parent.notify(events.infiniteShowHide, { visible: displayVal, index: idx, isFreeze: this.isInfiniteFreeze });\n    };\n    ContentRender.prototype.infiniteRowVisibility = function (isFreeze) {\n        var infiniteData;\n        if (this.parent.enableInfiniteScrolling) {\n            this.isInfiniteFreeze = isFreeze;\n            if (this.parent.infiniteScrollSettings.enableCache) {\n                infiniteData = this.getCurrentBlockInfiniteRecords();\n            }\n            else {\n                infiniteData = isFreeze ? this.visibleFrozenRows : this.visibleRows;\n            }\n        }\n        return infiniteData;\n    };\n    ContentRender.prototype.colGroupRefresh = function () {\n        if (this.getColGroup()) {\n            var colGroup = this.getHeaderColGroup();\n            this.getTable().replaceChild(colGroup, this.getColGroup());\n            this.setColGroup(colGroup);\n        }\n    };\n    ContentRender.prototype.getHeaderColGroup = function () {\n        return this.parent.element.querySelector('.' + literals.gridHeader)\n            .querySelector(literals.colGroup + ':not(.e-masked-colgroup)').cloneNode(true);\n    };\n    ContentRender.prototype.initializeContentDrop = function () {\n        var gObj = this.parent;\n        this.droppable = new Droppable(gObj.element, {\n            accept: '.e-dragclone',\n            drop: this.drop\n        });\n    };\n    ContentRender.prototype.droppableDestroy = function () {\n        if (this.droppable && !this.droppable.isDestroyed) {\n            this.droppable.destroy();\n        }\n    };\n    ContentRender.prototype.canSkip = function (column, row, index) {\n        /**\n         * Skip the toggle visiblity operation when one of the following success\n         * 1. Grid has empty records\n         * 2. column visible property is unchanged\n         * 3. cell`s isVisible property is same as column`s visible property.\n         */\n        return isNullOrUndefined(row) || //(1)\n            isNullOrUndefined(column.visible) || //(2)\n            row.cells[parseInt(index.toString(), 10)].visible === column.visible; //(3)\n    };\n    ContentRender.prototype.getModelGenerator = function () {\n        return this.generator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n    };\n    ContentRender.prototype.renderEmpty = function (tbody) {\n        this.getTable().appendChild(tbody);\n        if (this.parent.frozenRows) {\n            this.parent.getHeaderContent().querySelector(literals.tbody).innerHTML = '';\n        }\n    };\n    ContentRender.prototype.setSelection = function (uid, set, clearAll) {\n        this.parent.notify(events.setFreezeSelection, { uid: uid, set: set, clearAll: clearAll });\n        var row = this.getRows().filter(function (row) { return clearAll || uid === row.uid; });\n        for (var j = 0; j < row.length; j++) {\n            row[parseInt(j.toString(), 10)].isSelected = set;\n            var cells = row[parseInt(j.toString(), 10)].cells;\n            for (var k = 0; k < cells.length; k++) {\n                cells[parseInt(k.toString(), 10)].isSelected = set;\n            }\n        }\n    };\n    ContentRender.prototype.getRowByIndex = function (index) {\n        index = this.getInfiniteRowIndex(index);\n        return !isNullOrUndefined(index) ? this.parent.getDataRows()[parseInt(index.toString(), 10)] : undefined;\n    };\n    ContentRender.prototype.getInfiniteRowIndex = function (index) {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(index)) {\n            var fRows = this.parent.frozenRows;\n            var idx = fRows > index ? 0 : fRows;\n            var firstRowIndex = parseInt(this.parent.getRows()[parseInt(idx.toString(), 10)]\n                .getAttribute(literals.ariaRowIndex), 10) - 1;\n            index = fRows > index ? index : (index - firstRowIndex) + fRows;\n        }\n        return index;\n    };\n    ContentRender.prototype.getVirtualRowIndex = function (index) {\n        return index;\n    };\n    ContentRender.prototype.enableAfterRender = function (e) {\n        if (e.module === 'group' && e.enable) {\n            this.generator = this.getModelGenerator();\n        }\n    };\n    ContentRender.prototype.setRowObjects = function (rows) {\n        this.rows = rows;\n    };\n    /**\n     * @param {NotifyArgs} args - specifies the args\n     * @returns {void}\n     * @hidden\n     */\n    ContentRender.prototype.immutableModeRendering = function (args) {\n        var _this = this;\n        if (args === void 0) { args = {}; }\n        var gObj = this.parent;\n        gObj.hideSpinner();\n        var key = gObj.getPrimaryKeyFieldNames()[0];\n        var oldKeys = {};\n        var newKeys = {};\n        var newRowObjs = [];\n        var oldIndexes = {};\n        var oldRowObjs = gObj.getRowsObject().slice();\n        var batchChangeKeys = this.getBatchEditedRecords(key, oldRowObjs);\n        var newIndexes = {};\n        var hasBatch = Object.keys(batchChangeKeys).length !== 0;\n        if (gObj.getContent().querySelector('.e-emptyrow') || args.requestType === 'reorder'\n            || this.parent.groupSettings.columns.length) {\n            this.refreshContentRows(args);\n        }\n        else {\n            if (gObj.currentViewData.length === 0) {\n                return;\n            }\n            var oldRowElements = {};\n            var tbody = gObj.createElement(literals.tbody, { attrs: { role: 'rowgroup' } });\n            var dataSource = gObj.currentViewData;\n            var trs = [].slice.call(this.getTable().querySelector(literals.tbody).children);\n            if (this.prevCurrentView.length) {\n                var prevLen = this.prevCurrentView.length;\n                var currentLen = dataSource.length;\n                if (prevLen === currentLen) {\n                    for (var i = 0; i < currentLen; i++) {\n                        if (this.parent.editSettings.mode === 'Batch'\n                            && trs[parseInt(i.toString(), 10)].classList.contains('e-insertedrow')) {\n                            trs.splice(i, 1);\n                            --i;\n                            continue;\n                        }\n                        newKeys[dataSource[parseInt(i.toString(), 10)][\"\" + key]] = oldKeys[this.prevCurrentView[parseInt(i.toString(), 10)][\"\" + key]] = i;\n                        newIndexes[parseInt(i.toString(), 10)] = dataSource[parseInt(i.toString(), 10)][\"\" + key];\n                        oldRowElements[oldRowObjs[parseInt(i.toString(), 10)].uid] = trs[parseInt(i.toString(), 10)];\n                        oldIndexes[parseInt(i.toString(), 10)] = this.prevCurrentView[parseInt(i.toString(), 10)][\"\" + key];\n                    }\n                }\n                else {\n                    for (var i = 0; i < currentLen; i++) {\n                        newKeys[dataSource[parseInt(i.toString(), 10)][\"\" + key]] = i;\n                        newIndexes[parseInt(i.toString(), 10)] = dataSource[parseInt(i.toString(), 10)][\"\" + key];\n                    }\n                    for (var i = 0; i < prevLen; i++) {\n                        if (this.parent.editSettings.mode === 'Batch'\n                            && trs[parseInt(i.toString(), 10)].classList.contains('e-insertedrow')) {\n                            trs.splice(i, 1);\n                            --i;\n                            continue;\n                        }\n                        oldRowElements[oldRowObjs[parseInt(i.toString(), 10)].uid] = trs[parseInt(i.toString(), 10)];\n                        oldKeys[this.prevCurrentView[parseInt(i.toString(), 10)][\"\" + key]] = i;\n                        oldIndexes[parseInt(i.toString(), 10)] = this.prevCurrentView[parseInt(i.toString(), 10)][\"\" + key];\n                    }\n                }\n            }\n            for (var i = 0; i < dataSource.length; i++) {\n                var oldIndex = oldKeys[dataSource[parseInt(i.toString(), 10)][\"\" + key]];\n                if (!isNullOrUndefined(oldIndex)) {\n                    var isEqual = false;\n                    if (this.parent.enableDeepCompare) {\n                        isEqual = this.objectEqualityChecker(this.prevCurrentView[parseInt(oldIndex.toString(), 10)], dataSource[parseInt(i.toString(), 10)]);\n                    }\n                    var tr = oldRowElements[oldRowObjs[parseInt(oldIndex.toString(), 10)]\n                        .uid];\n                    newRowObjs.push(oldRowObjs[parseInt(oldIndex.toString(), 10)]);\n                    if (this.rowElements[parseInt(oldIndex.toString(), 10)] && this.rowElements[parseInt(oldIndex.toString(), 10)].getAttribute('data-uid') === newRowObjs[parseInt(i.toString(), 10)].uid\n                        && ((hasBatch && isNullOrUndefined(batchChangeKeys[newIndexes[parseInt(i.toString(), 10)]]))\n                            || (!hasBatch && (isEqual\n                                || this.prevCurrentView[parseInt(oldIndex.toString(), 10)] === dataSource[parseInt(i.toString(), 10)])))) {\n                        if (oldIndex !== i) {\n                            this.refreshImmutableContent(i, tr, newRowObjs[parseInt(i.toString(), 10)]);\n                        }\n                        tbody.appendChild(tr);\n                        continue;\n                    }\n                    if ((hasBatch && !isNullOrUndefined(batchChangeKeys[newIndexes[parseInt(i.toString(), 10)]]))\n                        || (!this.parent.enableDeepCompare\n                            && dataSource[parseInt(i.toString(), 10)] !== this.prevCurrentView[parseInt(oldIndex.toString(), 10)])\n                        || (this.parent.enableDeepCompare && !isEqual)) {\n                        oldRowObjs[parseInt(oldIndex.toString(), 10)].setRowValue(dataSource[parseInt(i.toString(), 10)]);\n                    }\n                    tbody.appendChild(tr);\n                    this.refreshImmutableContent(i, tr, newRowObjs[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    var row = new RowRenderer(this.serviceLocator, null, gObj);\n                    var args_1 = { startIndex: i };\n                    var modelData = this.generator.generateRows([dataSource[parseInt(i.toString(), 10)]], args_1);\n                    newRowObjs.push(modelData[0]);\n                    var tr = row.render(modelData[0], gObj.getColumns());\n                    tbody.appendChild(tr);\n                    this.refreshImmutableContent(i, tr, newRowObjs[parseInt(i.toString(), 10)]);\n                }\n            }\n            this.rows = newRowObjs;\n            this.rowElements = [].slice.call(tbody.children);\n            remove(this.getTable().querySelector(literals.tbody));\n            this.getTable().appendChild(tbody);\n            this.parent.trigger(events.dataBound, {}, function () {\n                if (_this.parent.allowTextWrap) {\n                    _this.parent.notify(events.freezeRender, { case: 'textwrap' });\n                }\n            });\n            if (args) {\n                var action = (args.requestType || '').toLowerCase() + '-complete';\n                this.parent.notify(action, args);\n            }\n        }\n    };\n    ContentRender.prototype.objectEqualityChecker = function (old, next) {\n        var keys = Object.keys(old);\n        var isEqual = true;\n        for (var i = 0; i < keys.length; i++) {\n            if (old[keys[parseInt(i.toString(), 10)]] !== next[keys[parseInt(i.toString(), 10)]]) {\n                var isDate = old[keys[parseInt(i.toString(), 10)]] instanceof Date\n                    && next[keys[parseInt(i.toString(), 10)]] instanceof Date;\n                if (!isDate || (old[keys[parseInt(i.toString(), 10)]]\n                    .getTime() !== next[keys[parseInt(i.toString(), 10)]].getTime())) {\n                    isEqual = false;\n                    break;\n                }\n            }\n        }\n        return isEqual;\n    };\n    ContentRender.prototype.getBatchEditedRecords = function (primaryKey, rows) {\n        var keys = {};\n        var changes = this.parent.getBatchChanges();\n        var changedRecords = [];\n        var addedRecords = [];\n        if (Object.keys(changes).length) {\n            changedRecords = changes.changedRecords;\n            addedRecords = changes.addedRecords;\n        }\n        var args = { cancel: false };\n        this.parent.notify(events.immutableBatchCancel, { rows: rows, args: args });\n        if (addedRecords.length) {\n            if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                rows.splice(rows.length - 1, addedRecords.length);\n            }\n            else {\n                if (!args.cancel) {\n                    rows.splice(0, addedRecords.length);\n                }\n            }\n        }\n        for (var i = 0; i < changedRecords.length; i++) {\n            keys[changedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]] = i;\n        }\n        return keys;\n    };\n    ContentRender.prototype.refreshImmutableContent = function (index, tr, row) {\n        row.isAltRow = this.parent.enableAltRow ? index % 2 !== 0 : false;\n        if (row.isAltRow) {\n            tr.classList.add('e-altrow');\n        }\n        else {\n            tr.classList.remove('e-altrow');\n        }\n        row.index = index;\n        row.edit = undefined;\n        row.isDirty = false;\n        tr.setAttribute(literals.ariaRowIndex, (index + 1).toString());\n        this.updateCellIndex(tr, index);\n    };\n    ContentRender.prototype.updateCellIndex = function (rowEle, index) {\n        for (var i = 0; i < rowEle.cells.length; i++) {\n            rowEle.cells[parseInt(i.toString(), 10)].setAttribute('index', index.toString());\n        }\n    };\n    return ContentRender;\n}());\nexport { ContentRender };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}