{"ast":null,"code":"var _jsxFileName = \"D:\\\\weektable\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { TabComponent, TabItemDirective, TabItemsDirective } from '@syncfusion/ej2-react-navigations';\nimport DailyTasks from './components/DailyTasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 全局状态：任务列表、今日已完成任务、周汇总数据、当前日期信息\n  const [tasks, setTasks] = useState([]);\n  const [tasksDoneToday, setTasksDoneToday] = useState([]); // 存储今日已打卡的任务ID列表\n  const [weeklyData, setWeeklyData] = useState([]);\n  const [currentInfo, setCurrentInfo] = useState({\n    date: '',\n    lunar: '',\n    weather: '',\n    fortune: ''\n  });\n\n  // 从后端获取当前信息、任务列表、今日打卡和周汇总\n  const fetchAllData = async () => {\n    try {\n      // 获取当前日期、农历、天气、运势等\n      const resInfo = await axios.get('http://localhost:5000/api/current_info');\n      setCurrentInfo(resInfo.data);\n      // 获取任务列表\n      const resTasks = await axios.get('http://localhost:5000/api/tasks');\n      setTasks(resTasks.data.tasks);\n      // 获取今日已打卡任务\n      const today = resInfo.data.date; // 假定返回的 date 为 \"YYYY-MM-DD\" 格式\n      const resDaily = await axios.get(`http://localhost:5000/api/daily_records?date=${today}`);\n      setTasksDoneToday(resDaily.data.done_tasks);\n      // 获取周度汇总数据\n      const resWeekly = await axios.get('http://localhost:5000/api/weekly_records');\n      setWeeklyData(resWeekly.data.weekly);\n    } catch (error) {\n      console.error('数据获取失败:', error);\n    }\n  };\n  useEffect(() => {\n    // 组件初始化时加载数据\n    fetchAllData();\n  }, []);\n\n  // 定义Tab每项的头部文本\n  const headerText = [{\n    text: '每日任务打卡'\n  }, {\n    text: '添加任务'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      margin: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(TabComponent, {\n      heightAdjustMode: \"Auto\",\n      children: /*#__PURE__*/_jsxDEV(TabItemsDirective, {\n        children: [/*#__PURE__*/_jsxDEV(TabItemDirective, {\n          header: headerText[0],\n          content: () =>\n          /*#__PURE__*/\n          // DailyTasks组件：传入当前信息、任务列表、今日完成列表、周汇总等作为props\n          _jsxDEV(DailyTasks, {\n            currentInfo: currentInfo,\n            tasks: tasks,\n            tasksDoneToday: tasksDoneToday,\n            weeklyData: weeklyData,\n            onToggleTask: async (taskId, done) => {\n              // 用户勾选/取消勾选任务时的回调，调用后端API更新\n              try {\n                await axios.post('http://localhost:5000/api/daily_records', {\n                  date: currentInfo.date,\n                  task_id: taskId,\n                  done: done\n                });\n                // 更新本地状态：tasksDoneToday 和 weeklyData\n                if (done) {\n                  setTasksDoneToday(prev => [...prev, taskId]);\n                } else {\n                  setTasksDoneToday(prev => prev.filter(id => id !== taskId));\n                }\n                // 更新weeklyData对应当天的任务列\n                const newWeekly = weeklyData.map(dayRecord => {\n                  if (dayRecord.date === currentInfo.date) {\n                    // 找到当天对应的行（通过日期匹配）\n                    return {\n                      ...dayRecord,\n                      [`task_${taskId}`]: done\n                    };\n                  }\n                  return dayRecord;\n                });\n                setWeeklyData(newWeekly);\n              } catch (error) {\n                console.error('更新任务打卡状态失败:', error);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabItemDirective, {\n          header: headerText[1],\n          content: () =>\n          /*#__PURE__*/\n          // AddTask组件：传入添加任务回调\n          _jsxDEV(AddTask, {\n            onTaskAdded: async newTaskName => {\n              try {\n                await axios.post('http://localhost:5000/api/tasks', {\n                  name: newTaskName\n                });\n                // 重新获取任务列表和周汇总（包括新任务的情况）\n                const resTasks = await axios.get('http://localhost:5000/api/tasks');\n                setTasks(resTasks.data.tasks);\n                const resWeekly = await axios.get('http://localhost:5000/api/weekly_records');\n                setWeeklyData(resWeekly.data.weekly);\n                // 新任务默认未打卡，无需改变 tasksDoneToday\n              } catch (error) {\n                console.error('添加任务失败:', error);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qSS91ycqaGFFVN7E83f6GSiwBwM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","TabComponent","TabItemDirective","TabItemsDirective","DailyTasks","AddTask","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","tasksDoneToday","setTasksDoneToday","weeklyData","setWeeklyData","currentInfo","setCurrentInfo","date","lunar","weather","fortune","fetchAllData","resInfo","get","data","resTasks","today","resDaily","done_tasks","resWeekly","weekly","error","console","headerText","text","className","style","margin","children","heightAdjustMode","header","content","onToggleTask","taskId","done","post","task_id","prev","filter","id","newWeekly","map","dayRecord","fileName","_jsxFileName","lineNumber","columnNumber","onTaskAdded","newTaskName","name","_c","$RefreshReg$"],"sources":["D:/weektable/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { TabComponent, TabItemDirective, TabItemsDirective } from '@syncfusion/ej2-react-navigations';\nimport DailyTasks from './components/DailyTasks';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n  // 全局状态：任务列表、今日已完成任务、周汇总数据、当前日期信息\n  const [tasks, setTasks] = useState([]);\n  const [tasksDoneToday, setTasksDoneToday] = useState([]);  // 存储今日已打卡的任务ID列表\n  const [weeklyData, setWeeklyData] = useState([]);\n  const [currentInfo, setCurrentInfo] = useState({ date: '', lunar: '', weather: '', fortune: '' });\n\n  // 从后端获取当前信息、任务列表、今日打卡和周汇总\n  const fetchAllData = async () => {\n    try {\n      // 获取当前日期、农历、天气、运势等\n      const resInfo = await axios.get('http://localhost:5000/api/current_info');\n      setCurrentInfo(resInfo.data);\n      // 获取任务列表\n      const resTasks = await axios.get('http://localhost:5000/api/tasks');\n      setTasks(resTasks.data.tasks);\n      // 获取今日已打卡任务\n      const today = resInfo.data.date;  // 假定返回的 date 为 \"YYYY-MM-DD\" 格式\n      const resDaily = await axios.get(`http://localhost:5000/api/daily_records?date=${today}`);\n      setTasksDoneToday(resDaily.data.done_tasks);\n      // 获取周度汇总数据\n      const resWeekly = await axios.get('http://localhost:5000/api/weekly_records');\n      setWeeklyData(resWeekly.data.weekly);\n    } catch (error) {\n      console.error('数据获取失败:', error);\n    }\n  };\n\n  useEffect(() => {\n    // 组件初始化时加载数据\n    fetchAllData();\n  }, []);\n\n  // 定义Tab每项的头部文本\n  const headerText = [{ text: '每日任务打卡' }, { text: '添加任务' }];\n\n  return (\n    <div className=\"App\" style={{ margin: '20px' }}>\n      {/* 使用 Syncfusion Tab 组件切换 \"每日任务打卡\" 与 \"添加任务\" 两个视图 */}\n      <TabComponent heightAdjustMode=\"Auto\">\n        <TabItemsDirective>\n          <TabItemDirective header={headerText[0]} \n            content={() => (\n              // DailyTasks组件：传入当前信息、任务列表、今日完成列表、周汇总等作为props\n              <DailyTasks \n                currentInfo={currentInfo}\n                tasks={tasks}\n                tasksDoneToday={tasksDoneToday}\n                weeklyData={weeklyData}\n                onToggleTask={ async (taskId, done) => {\n                  // 用户勾选/取消勾选任务时的回调，调用后端API更新\n                  try {\n                    await axios.post('http://localhost:5000/api/daily_records', {\n                      date: currentInfo.date,\n                      task_id: taskId,\n                      done: done\n                    });\n                    // 更新本地状态：tasksDoneToday 和 weeklyData\n                    if (done) {\n                      setTasksDoneToday(prev => [...prev, taskId]);\n                    } else {\n                      setTasksDoneToday(prev => prev.filter(id => id !== taskId));\n                    }\n                    // 更新weeklyData对应当天的任务列\n                    const newWeekly = weeklyData.map(dayRecord => {\n                      if (dayRecord.date === currentInfo.date) {\n                        // 找到当天对应的行（通过日期匹配）\n                        return { ...dayRecord, [`task_${taskId}`]: done };\n                      }\n                      return dayRecord;\n                    });\n                    setWeeklyData(newWeekly);\n                  } catch (error) {\n                    console.error('更新任务打卡状态失败:', error);\n                  }\n                }}\n              />\n            )} \n          />\n          <TabItemDirective header={headerText[1]} \n            content={() => (\n              // AddTask组件：传入添加任务回调\n              <AddTask onTaskAdded={ async (newTaskName) => {\n                try {\n                  await axios.post('http://localhost:5000/api/tasks', { name: newTaskName });\n                  // 重新获取任务列表和周汇总（包括新任务的情况）\n                  const resTasks = await axios.get('http://localhost:5000/api/tasks');\n                  setTasks(resTasks.data.tasks);\n                  const resWeekly = await axios.get('http://localhost:5000/api/weekly_records');\n                  setWeeklyData(resWeekly.data.weekly);\n                  // 新任务默认未打卡，无需改变 tasksDoneToday\n                } catch (error) {\n                  console.error('添加任务失败:', error);\n                }\n              }} />\n            )} \n          />\n        </TabItemsDirective>\n      </TabComponent>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}