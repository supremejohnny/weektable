{"ast":null,"code":"import { Browser, EventHandler } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { closest, classList } from '@syncfusion/ej2-base';\nimport { ResponsiveDialogAction } from '../base/enum';\nimport { setCssInGridPopUp, getActualPropFromColl, isActionPrevent, iterateExtend, parentsUntil } from '../base/util';\nimport { addRemoveEventListener } from '../base/util';\nimport * as events from '../base/constant';\nimport { AriaService } from '../services/aria-service';\nimport * as literals from '../base/string-literals';\n/**\n *\n * The `Sort` module is used to handle sorting action.\n */\nvar Sort = /** @class */function () {\n  /**\n   * Constructor for Grid sorting module\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {SortSettings} sortSettings - specifies the SortSettings\n   * @param {string[]} sortedColumns - specifies the string\n   * @param {ServiceLocator} locator - specifies the ServiceLocator\n   * @hidden\n   */\n  function Sort(parent, sortSettings, sortedColumns, locator) {\n    this.contentRefresh = true;\n    this.isModelChanged = true;\n    this.aria = new AriaService();\n    this.currentTarget = null;\n    this.parent = parent;\n    this.sortSettings = sortSettings;\n    this.sortedColumns = sortedColumns;\n    this.serviceLocator = locator;\n    this.focus = locator.getService('focus');\n    this.addEventListener();\n    this.setFullScreenDialog();\n  }\n  /**\n   * The function used to update sortSettings\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Sort.prototype.updateModel = function () {\n    var sortedColumn = {\n      field: this.columnName,\n      direction: this.direction\n    };\n    var index;\n    var gCols = this.parent.groupSettings.columns;\n    var flag = false;\n    if (!this.isMultiSort) {\n      if (!gCols.length) {\n        this.sortSettings.columns = [sortedColumn];\n      } else {\n        var sortedCols = [];\n        for (var i = 0, len = gCols.length; i < len; i++) {\n          index = this.getSortedColsIndexByField(gCols[parseInt(i.toString(), 10)], sortedCols);\n          if (this.columnName === gCols[parseInt(i.toString(), 10)]) {\n            flag = true;\n            sortedCols.push(sortedColumn);\n          } else {\n            var sCol = this.getSortColumnFromField(gCols[parseInt(i.toString(), 10)]);\n            sortedCols.push({\n              field: sCol.field,\n              direction: sCol.direction,\n              isFromGroup: sCol.isFromGroup\n            });\n          }\n        }\n        if (!flag) {\n          sortedCols.push(sortedColumn);\n        }\n        this.sortSettings.columns = sortedCols;\n      }\n    } else {\n      index = this.getSortedColsIndexByField(this.columnName);\n      if (index > -1) {\n        this.sortSettings.columns.splice(index, 1);\n      }\n      this.sortSettings.columns.push(sortedColumn);\n      // eslint-disable-next-line no-self-assign\n      this.sortSettings.columns = this.sortSettings.columns;\n    }\n    this.parent.dataBind();\n    this.lastSortedCol = this.columnName;\n  };\n  /**\n   * The function used to trigger onActionComplete\n   *\n   * @param {NotifyArgs} e - specifies the NotifyArgs\n   * @returns {void}\n   * @hidden\n   */\n  Sort.prototype.onActionComplete = function (e) {\n    var args = !this.isRemove ? {\n      columnName: this.columnName,\n      direction: this.direction,\n      requestType: 'sorting',\n      type: events.actionComplete\n    } : {\n      requestType: 'sorting',\n      type: events.actionComplete\n    };\n    this.isRemove = false;\n    this.parent.trigger(events.actionComplete, extend(e, args));\n  };\n  /**\n   * Sorts a column with the given options.\n   *\n   * @param {string} columnName - Defines the column name to sort.\n   * @param {SortDirection} direction - Defines the direction of sorting field.\n   * @param {boolean} isMultiSort - Specifies whether the previously sorted columns are to be maintained.\n   * @returns {void}\n   */\n  Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n    var gObj = this.parent;\n    if (this.parent.getColumnByField(columnName).allowSorting === false || this.parent.isContextMenuOpen()) {\n      this.parent.log('action_disabled_column', {\n        moduleName: this.getModuleName(),\n        columnName: columnName\n      });\n      return;\n    }\n    if (!gObj.allowMultiSorting) {\n      isMultiSort = gObj.allowMultiSorting;\n    }\n    if (this.isActionPrevent()) {\n      gObj.notify(events.preventBatch, {\n        instance: this,\n        handler: this.sortColumn,\n        arg1: columnName,\n        arg2: direction,\n        arg3: isMultiSort\n      });\n      return;\n    }\n    this.backupSettings();\n    this.columnName = columnName;\n    this.direction = direction;\n    this.isMultiSort = isMultiSort;\n    this.removeSortIcons();\n    this.updateSortedCols(columnName, isMultiSort);\n    this.updateModel();\n  };\n  Sort.prototype.setFullScreenDialog = function () {\n    if (this.serviceLocator) {\n      this.serviceLocator.registerAdaptiveService(this, this.parent.enableAdaptiveUI, ResponsiveDialogAction.isSort);\n    }\n  };\n  Sort.prototype.backupSettings = function () {\n    this.lastSortedCols = iterateExtend(this.sortSettings.columns);\n    this.lastCols = this.sortedColumns;\n  };\n  Sort.prototype.restoreSettings = function () {\n    this.isModelChanged = false;\n    this.isMultiSort = true;\n    this.parent.setProperties({\n      sortSettings: {\n        columns: this.lastSortedCols\n      }\n    }, true);\n    //this.parent.sortSettings.columns =  this.lastSortedCols;\n    this.sortedColumns = this.lastCols;\n    this.isModelChanged = true;\n  };\n  Sort.prototype.updateSortedCols = function (columnName, isMultiSort) {\n    if (!isMultiSort) {\n      if (this.parent.allowGrouping) {\n        for (var i = 0, len = this.sortedColumns.length; i < len; i++) {\n          if (this.parent.groupSettings.columns.indexOf(this.sortedColumns[parseInt(i.toString(), 10)]) < 0) {\n            this.sortedColumns.splice(i, 1);\n            len--;\n            i--;\n          }\n        }\n      } else {\n        this.sortedColumns.splice(0, this.sortedColumns.length);\n      }\n    }\n    if (this.sortedColumns.indexOf(columnName) < 0) {\n      this.sortedColumns.push(columnName);\n    }\n  };\n  /**\n   * @param {NotifyArgs} e - specifies the NotifyArgs\n   * @returns {void}\n   * @hidden\n   */\n  Sort.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName()) {\n      return;\n    }\n    if (this.contentRefresh) {\n      var args = this.sortSettings.columns.length ? {\n        columnName: this.columnName,\n        direction: this.direction,\n        requestType: 'sorting',\n        type: events.actionBegin,\n        target: this.currentTarget,\n        cancel: false\n      } : {\n        requestType: 'sorting',\n        type: events.actionBegin,\n        cancel: false,\n        target: this.currentTarget\n      };\n      this.parent.notify(events.modelChanged, args);\n    }\n    this.refreshSortSettings();\n    this.removeSortIcons();\n    this.addSortIcons();\n  };\n  Sort.prototype.refreshSortSettings = function () {\n    this.sortedColumns.length = 0;\n    var sortColumns = this.sortSettings.columns;\n    for (var i = 0; i < sortColumns.length; i++) {\n      if (!sortColumns[parseInt(i.toString(), 10)].isFromGroup) {\n        this.sortedColumns.push(sortColumns[parseInt(i.toString(), 10)].field);\n      }\n    }\n  };\n  /**\n   * Clears all the sorted columns of the Grid.\n   *\n   * @returns {void}\n   */\n  Sort.prototype.clearSorting = function () {\n    var cols = getActualPropFromColl(this.sortSettings.columns);\n    if (this.isActionPrevent()) {\n      this.parent.notify(events.preventBatch, {\n        instance: this,\n        handler: this.clearSorting\n      });\n      return;\n    }\n    for (var i = 0, len = cols.length; i < len; i++) {\n      this.removeSortColumn(cols[parseInt(i.toString(), 10)].field);\n    }\n  };\n  Sort.prototype.isActionPrevent = function () {\n    return isActionPrevent(this.parent);\n  };\n  /**\n   * Remove sorted column by field name.\n   *\n   * @param {string} field - Defines the column field name to remove sort.\n   * @returns {void}\n   * @hidden\n   */\n  Sort.prototype.removeSortColumn = function (field) {\n    var gObj = this.parent;\n    var cols = this.sortSettings.columns;\n    if (cols.length === 0 && this.sortedColumns.indexOf(field) < 0) {\n      return;\n    }\n    if (this.isActionPrevent()) {\n      this.parent.notify(events.preventBatch, {\n        instance: this,\n        handler: this.removeSortColumn,\n        arg1: field\n      });\n      return;\n    }\n    this.backupSettings();\n    this.removeSortIcons();\n    var args = {\n      requestType: 'sorting',\n      type: events.actionBegin,\n      target: this.currentTarget\n    };\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[parseInt(i.toString(), 10)].field === field) {\n        if (gObj.allowGrouping && gObj.groupSettings.columns.indexOf(cols[parseInt(i.toString(), 10)].field) > -1) {\n          continue;\n        }\n        this.sortedColumns.splice(this.sortedColumns.indexOf(cols[parseInt(i.toString(), 10)].field), 1);\n        cols.splice(i, 1);\n        this.isRemove = true;\n        if (this.isModelChanged) {\n          this.parent.notify(events.modelChanged, args);\n        }\n        break;\n      }\n    }\n    if (!args.cancel) {\n      this.addSortIcons();\n    }\n  };\n  Sort.prototype.getSortedColsIndexByField = function (field, sortedColumns) {\n    var cols = sortedColumns ? sortedColumns : this.sortSettings.columns;\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[parseInt(i.toString(), 10)].field === field) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n  Sort.prototype.getModuleName = function () {\n    return 'sort';\n  };\n  Sort.prototype.initialEnd = function () {\n    this.parent.off(events.contentReady, this.initialEnd);\n    if (this.parent.getColumns().length && this.sortSettings.columns.length) {\n      var gObj = this.parent;\n      this.contentRefresh = false;\n      this.isMultiSort = this.sortSettings.columns.length > 1;\n      for (var _i = 0, _a = gObj.sortSettings.columns.slice(); _i < _a.length; _i++) {\n        var col = _a[_i];\n        if (this.sortedColumns.indexOf(col.field) > -1) {\n          this.sortColumn(col.field, col.direction, true);\n        }\n      }\n      this.isMultiSort = false;\n      this.contentRefresh = true;\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  Sort.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.evtHandlers = [{\n      event: events.setFullScreenDialog,\n      handler: this.setFullScreenDialog\n    }, {\n      event: events.renderResponsiveChangeAction,\n      handler: this.renderResponsiveChangeAction\n    }, {\n      event: events.contentReady,\n      handler: this.initialEnd\n    }, {\n      event: events.sortComplete,\n      handler: this.onActionComplete\n    }, {\n      event: events.inBoundModelChanged,\n      handler: this.onPropertyChanged\n    }, {\n      event: events.click,\n      handler: this.clickHandler\n    }, {\n      event: events.headerRefreshed,\n      handler: this.refreshSortIcons\n    }, {\n      event: events.keyPressed,\n      handler: this.keyPressed\n    }, {\n      event: events.cancelBegin,\n      handler: this.cancelBeginEvent\n    }, {\n      event: events.destroy,\n      handler: this.destroy\n    }];\n    addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n    EventHandler.add(document.body, 'click', this.excelFilterSortAction, this);\n    EventHandler.add(document.body, 'touchend', this.excelFilterSortAction, this);\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  Sort.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    addRemoveEventListener(this.parent, this.evtHandlers, false);\n    EventHandler.remove(document.body, 'click', this.excelFilterSortAction);\n    EventHandler.remove(document.body, 'touchend', this.excelFilterSortAction);\n  };\n  Sort.prototype.excelFilterSortAction = function (e) {\n    var popUp = parentsUntil(e.target, 'e-grid-popup');\n    var gridID = this.parent.element.id + '_e-popup';\n    if (popUp && popUp.id === gridID && parentsUntil(e.target, 'e-excelfilter')) {\n      this.excelFilterSortActionHandler(e);\n    }\n  };\n  /**\n   * To destroy the sorting\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Sort.prototype.destroy = function () {\n    this.isModelChanged = false;\n    var gridElement = this.parent.element;\n    if (!gridElement || !gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent)) {\n      return;\n    }\n    if (this.parent.element.querySelector('.e-gridpopup').getElementsByClassName('e-sortdirect').length) {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (!this.parent.refreshing && (this.parent.isDestroyed || !this.parent.allowSorting)) {\n      this.clearSorting();\n    }\n    this.isModelChanged = true;\n    this.removeEventListener();\n  };\n  Sort.prototype.cancelBeginEvent = function (e) {\n    if (e.requestType === 'sorting') {\n      this.restoreSettings();\n      this.refreshSortIcons();\n      this.isMultiSort = true;\n    }\n  };\n  Sort.prototype.clickHandler = function (e) {\n    var gObj = this.parent;\n    this.currentTarget = null;\n    this.popUpClickHandler(e);\n    var target = closest(e.target, '.e-headercell');\n    if (target && !e.target.classList.contains('e-grptogglebtn') && !target.classList.contains('e-resized') && !e.target.classList.contains('e-rhandler') && !e.target.classList.contains('e-columnmenu') && !e.target.classList.contains('e-filtermenudiv') && !parentsUntil(e.target, 'e-stackedheadercell') && !(gObj.allowSelection && gObj.selectionSettings.allowColumnSelection && e.target.classList.contains('e-headercell'))) {\n      var gObj_1 = this.parent;\n      var colObj = gObj_1.getColumnByUid(target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n      if (colObj.type !== 'checkbox') {\n        this.initiateSort(target, e, colObj);\n        if (Browser.isDevice) {\n          this.showPopUp(e);\n        }\n      }\n    }\n    if (target) {\n      target.classList.remove('e-resized');\n    }\n    this.excelFilterSortActionHandler(e);\n  };\n  Sort.prototype.excelFilterSortActionHandler = function (e) {\n    if (parentsUntil(e.target, 'e-excel-ascending') || parentsUntil(e.target, 'e-excel-descending')) {\n      var colUid = closest(e.target, '.e-filter-popup').getAttribute('uid');\n      var direction = isNullOrUndefined(parentsUntil(e.target, 'e-excel-descending')) ? 'Ascending' : 'Descending';\n      this.sortColumn(this.parent.getColumnByUid(colUid).field, direction, false);\n    }\n  };\n  Sort.prototype.keyPressed = function (e) {\n    var ele = e.target;\n    if (!this.parent.isEdit && (e.action === 'enter' || e.action === 'ctrlEnter' || e.action === 'shiftEnter') && closest(ele, '.e-headercell')) {\n      var target = this.focus.getFocusedElement();\n      if (isNullOrUndefined(target) || !target.classList.contains('e-headercell') || !target.querySelector('.e-headercelldiv')) {\n        return;\n      }\n      var col = this.parent.getColumnByUid(target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n      this.initiateSort(target, e, col);\n    }\n  };\n  Sort.prototype.initiateSort = function (target, e, column) {\n    var gObj = this.parent;\n    var field = column.field;\n    this.currentTarget = e.target;\n    var direction = !target.getElementsByClassName('e-ascending').length ? 'Ascending' : 'Descending';\n    this.isMultiSort = e.ctrlKey || this.enableSortMultiTouch || navigator.userAgent.indexOf('Mac OS') !== -1 && e.metaKey;\n    if (e.shiftKey || this.sortSettings.allowUnsort && target.getElementsByClassName('e-descending').length && !(gObj.groupSettings.columns.indexOf(field) > -1)) {\n      this.removeSortColumn(field);\n    } else {\n      this.sortColumn(field, direction, this.isMultiSort);\n    }\n  };\n  Sort.prototype.showPopUp = function (e) {\n    var target = closest(e.target, '.e-headercell');\n    if (this.parent.allowMultiSorting && (!isNullOrUndefined(target) || this.parent.isContextMenuOpen())) {\n      setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-sortdirect e-icons e-icon-sortdirect' + (this.sortedColumns.length > 1 ? ' e-spanclicked' : ''));\n    }\n  };\n  Sort.prototype.popUpClickHandler = function (e) {\n    var target = e.target;\n    if (closest(target, '.e-headercell') || e.target.classList.contains(literals.rowCell) || closest(target, '.e-gridpopup')) {\n      if (target.classList.contains('e-sortdirect')) {\n        if (!target.classList.contains('e-spanclicked')) {\n          target.classList.add('e-spanclicked');\n          this.enableSortMultiTouch = true;\n        } else {\n          target.classList.remove('e-spanclicked');\n          this.enableSortMultiTouch = false;\n          this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n      }\n    } else {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n  };\n  Sort.prototype.addSortIcons = function () {\n    var gObj = this.parent;\n    var header;\n    var filterElement;\n    var cols = this.sortSettings.columns;\n    var fieldNames = this.parent.getColumns().map(function (c) {\n      return c.field;\n    });\n    for (var i = 0, len = cols.length; i < len; i++) {\n      header = gObj.getColumnHeaderByField(cols[parseInt(i.toString(), 10)].field);\n      if (fieldNames.indexOf(cols[parseInt(i.toString(), 10)].field) === -1 || isNullOrUndefined(header)) {\n        continue;\n      }\n      this.aria.setSort(header, cols[parseInt(i.toString(), 10)].direction.toLowerCase());\n      if (cols.length > 1) {\n        header.querySelector('.e-headercelldiv').insertBefore(this.parent.createElement('span', {\n          className: 'e-sortnumber',\n          innerHTML: (i + 1).toString()\n        }), header.querySelector('.e-headertext'));\n      }\n      filterElement = header.querySelector('.e-sortfilterdiv');\n      if (cols[parseInt(i.toString(), 10)].direction === 'Ascending') {\n        classList(filterElement, ['e-ascending', 'e-icon-ascending'], []);\n      } else {\n        classList(filterElement, ['e-descending', 'e-icon-descending'], []);\n      }\n    }\n  };\n  Sort.prototype.removeSortIcons = function (position) {\n    var gObj = this.parent;\n    var header;\n    var cols = this.sortSettings.columns;\n    var fieldNames = this.parent.getColumns().map(function (c) {\n      return c.field;\n    });\n    for (var i = position ? position : 0, len = !isNullOrUndefined(position) ? position + 1 : cols.length; i < len; i++) {\n      header = gObj.getColumnHeaderByField(cols[parseInt(i.toString(), 10)].field);\n      if (isNullOrUndefined(header) || gObj.allowGrouping && gObj.groupSettings.columns.indexOf(cols[parseInt(i.toString(), 10)].field) > -1 && !header.querySelector('.e-sortfilterdiv')) {\n        continue;\n      }\n      if (fieldNames.indexOf(cols[parseInt(i.toString(), 10)].field) === -1) {\n        continue;\n      }\n      this.aria.setSort(header, 'none');\n      classList(header.querySelector('.e-sortfilterdiv'), [], ['e-descending', 'e-icon-descending', 'e-ascending', 'e-icon-ascending']);\n      if (header.querySelector('.e-sortnumber')) {\n        header.querySelector('.e-headercelldiv').removeChild(header.querySelector('.e-sortnumber'));\n      }\n    }\n  };\n  Sort.prototype.getSortColumnFromField = function (field) {\n    for (var i = 0, len = this.sortSettings.columns.length; i < len; i++) {\n      if (this.sortSettings.columns[parseInt(i.toString(), 10)].field === field) {\n        return this.sortSettings.columns[parseInt(i.toString(), 10)];\n      }\n    }\n    return false;\n  };\n  Sort.prototype.updateAriaAttr = function () {\n    var fieldNames = this.parent.getColumns().map(function (c) {\n      return c.field;\n    });\n    for (var _i = 0, _a = this.sortedColumns; _i < _a.length; _i++) {\n      var col = _a[_i];\n      if (fieldNames.indexOf(col) === -1) {\n        continue;\n      }\n      var header = this.parent.getColumnHeaderByField(col);\n      this.aria.setSort(header, this.getSortColumnFromField(col).direction);\n    }\n  };\n  Sort.prototype.refreshSortIcons = function () {\n    this.removeSortIcons();\n    this.isMultiSort = true;\n    this.removeSortIcons();\n    this.addSortIcons();\n    this.isMultiSort = false;\n    this.updateAriaAttr();\n  };\n  Sort.prototype.renderResponsiveChangeAction = function (args) {\n    this.responsiveDialogRenderer.action = args.action;\n  };\n  /**\n   * To show the responsive custom sort dialog\n   *\n   * @param {boolean} enable - specifes dialog open\n   * @returns {void}\n   * @hidden\n   */\n  Sort.prototype.showCustomSort = function (enable) {\n    this.responsiveDialogRenderer.isCustomDialog = enable;\n    this.responsiveDialogRenderer.showResponsiveDialog();\n  };\n  return Sort;\n}();\nexport { Sort };","map":{"version":3,"names":["Browser","EventHandler","extend","isNullOrUndefined","closest","classList","ResponsiveDialogAction","setCssInGridPopUp","getActualPropFromColl","isActionPrevent","iterateExtend","parentsUntil","addRemoveEventListener","events","AriaService","literals","Sort","parent","sortSettings","sortedColumns","locator","contentRefresh","isModelChanged","aria","currentTarget","serviceLocator","focus","getService","addEventListener","setFullScreenDialog","prototype","updateModel","sortedColumn","field","columnName","direction","index","gCols","groupSettings","columns","flag","isMultiSort","length","sortedCols","i","len","getSortedColsIndexByField","parseInt","toString","push","sCol","getSortColumnFromField","isFromGroup","splice","dataBind","lastSortedCol","onActionComplete","e","args","isRemove","requestType","type","actionComplete","trigger","sortColumn","gObj","getColumnByField","allowSorting","isContextMenuOpen","log","moduleName","getModuleName","allowMultiSorting","notify","preventBatch","instance","handler","arg1","arg2","arg3","backupSettings","removeSortIcons","updateSortedCols","registerAdaptiveService","enableAdaptiveUI","isSort","lastSortedCols","lastCols","restoreSettings","setProperties","allowGrouping","indexOf","onPropertyChanged","module","actionBegin","target","cancel","modelChanged","refreshSortSettings","addSortIcons","sortColumns","clearSorting","cols","removeSortColumn","initialEnd","off","contentReady","getColumns","_i","_a","slice","col","isDestroyed","evtHandlers","event","renderResponsiveChangeAction","sortComplete","inBoundModelChanged","click","clickHandler","headerRefreshed","refreshSortIcons","keyPressed","cancelBegin","cancelBeginEvent","destroy","add","document","body","excelFilterSortAction","removeEventListener","remove","popUp","gridID","element","id","excelFilterSortActionHandler","gridElement","querySelector","gridHeader","gridContent","getElementsByClassName","style","display","refreshing","popUpClickHandler","contains","allowSelection","selectionSettings","allowColumnSelection","gObj_1","colObj","getColumnByUid","getAttribute","initiateSort","isDevice","showPopUp","colUid","ele","isEdit","action","getFocusedElement","column","ctrlKey","enableSortMultiTouch","navigator","userAgent","metaKey","shiftKey","allowUnsort","rowCell","header","filterElement","fieldNames","map","c","getColumnHeaderByField","setSort","toLowerCase","insertBefore","createElement","className","innerHTML","position","removeChild","updateAriaAttr","responsiveDialogRenderer","showCustomSort","enable","isCustomDialog","showResponsiveDialog"],"sources":["D:/weektable/frontend/node_modules/@syncfusion/ej2-grids/src/grid/actions/sort.js"],"sourcesContent":["import { Browser, EventHandler } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { closest, classList } from '@syncfusion/ej2-base';\nimport { ResponsiveDialogAction } from '../base/enum';\nimport { setCssInGridPopUp, getActualPropFromColl, isActionPrevent, iterateExtend, parentsUntil } from '../base/util';\nimport { addRemoveEventListener } from '../base/util';\nimport * as events from '../base/constant';\nimport { AriaService } from '../services/aria-service';\nimport * as literals from '../base/string-literals';\n/**\n *\n * The `Sort` module is used to handle sorting action.\n */\nvar Sort = /** @class */ (function () {\n    /**\n     * Constructor for Grid sorting module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {SortSettings} sortSettings - specifies the SortSettings\n     * @param {string[]} sortedColumns - specifies the string\n     * @param {ServiceLocator} locator - specifies the ServiceLocator\n     * @hidden\n     */\n    function Sort(parent, sortSettings, sortedColumns, locator) {\n        this.contentRefresh = true;\n        this.isModelChanged = true;\n        this.aria = new AriaService();\n        this.currentTarget = null;\n        this.parent = parent;\n        this.sortSettings = sortSettings;\n        this.sortedColumns = sortedColumns;\n        this.serviceLocator = locator;\n        this.focus = locator.getService('focus');\n        this.addEventListener();\n        this.setFullScreenDialog();\n    }\n    /**\n     * The function used to update sortSettings\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        var sortedColumn = { field: this.columnName, direction: this.direction };\n        var index;\n        var gCols = this.parent.groupSettings.columns;\n        var flag = false;\n        if (!this.isMultiSort) {\n            if (!gCols.length) {\n                this.sortSettings.columns = [sortedColumn];\n            }\n            else {\n                var sortedCols = [];\n                for (var i = 0, len = gCols.length; i < len; i++) {\n                    index = this.getSortedColsIndexByField(gCols[parseInt(i.toString(), 10)], sortedCols);\n                    if (this.columnName === gCols[parseInt(i.toString(), 10)]) {\n                        flag = true;\n                        sortedCols.push(sortedColumn);\n                    }\n                    else {\n                        var sCol = this.getSortColumnFromField(gCols[parseInt(i.toString(), 10)]);\n                        sortedCols.push({ field: sCol.field, direction: sCol.direction, isFromGroup: sCol.isFromGroup });\n                    }\n                }\n                if (!flag) {\n                    sortedCols.push(sortedColumn);\n                }\n                this.sortSettings.columns = sortedCols;\n            }\n        }\n        else {\n            index = this.getSortedColsIndexByField(this.columnName);\n            if (index > -1) {\n                this.sortSettings.columns.splice(index, 1);\n            }\n            this.sortSettings.columns.push(sortedColumn);\n            // eslint-disable-next-line no-self-assign\n            this.sortSettings.columns = this.sortSettings.columns;\n        }\n        this.parent.dataBind();\n        this.lastSortedCol = this.columnName;\n    };\n    /**\n     * The function used to trigger onActionComplete\n     *\n     * @param {NotifyArgs} e - specifies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.onActionComplete = function (e) {\n        var args = !this.isRemove ? {\n            columnName: this.columnName, direction: this.direction, requestType: 'sorting', type: events.actionComplete\n        } : { requestType: 'sorting', type: events.actionComplete };\n        this.isRemove = false;\n        this.parent.trigger(events.actionComplete, extend(e, args));\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to sort.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previously sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        var gObj = this.parent;\n        if (this.parent.getColumnByField(columnName).allowSorting === false || this.parent.isContextMenuOpen()) {\n            this.parent.log('action_disabled_column', { moduleName: this.getModuleName(), columnName: columnName });\n            return;\n        }\n        if (!gObj.allowMultiSorting) {\n            isMultiSort = gObj.allowMultiSorting;\n        }\n        if (this.isActionPrevent()) {\n            gObj.notify(events.preventBatch, {\n                instance: this, handler: this.sortColumn,\n                arg1: columnName, arg2: direction, arg3: isMultiSort\n            });\n            return;\n        }\n        this.backupSettings();\n        this.columnName = columnName;\n        this.direction = direction;\n        this.isMultiSort = isMultiSort;\n        this.removeSortIcons();\n        this.updateSortedCols(columnName, isMultiSort);\n        this.updateModel();\n    };\n    Sort.prototype.setFullScreenDialog = function () {\n        if (this.serviceLocator) {\n            this.serviceLocator.registerAdaptiveService(this, this.parent.enableAdaptiveUI, ResponsiveDialogAction.isSort);\n        }\n    };\n    Sort.prototype.backupSettings = function () {\n        this.lastSortedCols = iterateExtend(this.sortSettings.columns);\n        this.lastCols = this.sortedColumns;\n    };\n    Sort.prototype.restoreSettings = function () {\n        this.isModelChanged = false;\n        this.isMultiSort = true;\n        this.parent.setProperties({ sortSettings: { columns: this.lastSortedCols } }, true);\n        //this.parent.sortSettings.columns =  this.lastSortedCols;\n        this.sortedColumns = this.lastCols;\n        this.isModelChanged = true;\n    };\n    Sort.prototype.updateSortedCols = function (columnName, isMultiSort) {\n        if (!isMultiSort) {\n            if (this.parent.allowGrouping) {\n                for (var i = 0, len = this.sortedColumns.length; i < len; i++) {\n                    if (this.parent.groupSettings.columns.indexOf(this.sortedColumns[parseInt(i.toString(), 10)]) < 0) {\n                        this.sortedColumns.splice(i, 1);\n                        len--;\n                        i--;\n                    }\n                }\n            }\n            else {\n                this.sortedColumns.splice(0, this.sortedColumns.length);\n            }\n        }\n        if (this.sortedColumns.indexOf(columnName) < 0) {\n            this.sortedColumns.push(columnName);\n        }\n    };\n    /**\n     * @param {NotifyArgs} e - specifies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        if (this.contentRefresh) {\n            var args = this.sortSettings.columns.length ? {\n                columnName: this.columnName, direction: this.direction, requestType: 'sorting',\n                type: events.actionBegin, target: this.currentTarget, cancel: false\n            } : {\n                requestType: 'sorting', type: events.actionBegin, cancel: false,\n                target: this.currentTarget\n            };\n            this.parent.notify(events.modelChanged, args);\n        }\n        this.refreshSortSettings();\n        this.removeSortIcons();\n        this.addSortIcons();\n    };\n    Sort.prototype.refreshSortSettings = function () {\n        this.sortedColumns.length = 0;\n        var sortColumns = this.sortSettings.columns;\n        for (var i = 0; i < sortColumns.length; i++) {\n            if (!sortColumns[parseInt(i.toString(), 10)].isFromGroup) {\n                this.sortedColumns.push(sortColumns[parseInt(i.toString(), 10)].field);\n            }\n        }\n    };\n    /**\n     * Clears all the sorted columns of the Grid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        var cols = getActualPropFromColl(this.sortSettings.columns);\n        if (this.isActionPrevent()) {\n            this.parent.notify(events.preventBatch, { instance: this, handler: this.clearSorting });\n            return;\n        }\n        for (var i = 0, len = cols.length; i < len; i++) {\n            this.removeSortColumn(cols[parseInt(i.toString(), 10)].field);\n        }\n    };\n    Sort.prototype.isActionPrevent = function () {\n        return isActionPrevent(this.parent);\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.removeSortColumn = function (field) {\n        var gObj = this.parent;\n        var cols = this.sortSettings.columns;\n        if (cols.length === 0 && this.sortedColumns.indexOf(field) < 0) {\n            return;\n        }\n        if (this.isActionPrevent()) {\n            this.parent.notify(events.preventBatch, { instance: this, handler: this.removeSortColumn, arg1: field });\n            return;\n        }\n        this.backupSettings();\n        this.removeSortIcons();\n        var args = { requestType: 'sorting', type: events.actionBegin, target: this.currentTarget };\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[parseInt(i.toString(), 10)].field === field) {\n                if (gObj.allowGrouping && gObj.groupSettings.columns.indexOf(cols[parseInt(i.toString(), 10)].field) > -1) {\n                    continue;\n                }\n                this.sortedColumns.splice(this.sortedColumns.indexOf(cols[parseInt(i.toString(), 10)].field), 1);\n                cols.splice(i, 1);\n                this.isRemove = true;\n                if (this.isModelChanged) {\n                    this.parent.notify(events.modelChanged, args);\n                }\n                break;\n            }\n        }\n        if (!args.cancel) {\n            this.addSortIcons();\n        }\n    };\n    Sort.prototype.getSortedColsIndexByField = function (field, sortedColumns) {\n        var cols = sortedColumns ? sortedColumns : this.sortSettings.columns;\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[parseInt(i.toString(), 10)].field === field) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    Sort.prototype.initialEnd = function () {\n        this.parent.off(events.contentReady, this.initialEnd);\n        if (this.parent.getColumns().length && this.sortSettings.columns.length) {\n            var gObj = this.parent;\n            this.contentRefresh = false;\n            this.isMultiSort = this.sortSettings.columns.length > 1;\n            for (var _i = 0, _a = gObj.sortSettings.columns.slice(); _i < _a.length; _i++) {\n                var col = _a[_i];\n                if (this.sortedColumns.indexOf(col.field) > -1) {\n                    this.sortColumn(col.field, col.direction, true);\n                }\n            }\n            this.isMultiSort = false;\n            this.contentRefresh = true;\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.evtHandlers = [{ event: events.setFullScreenDialog, handler: this.setFullScreenDialog },\n            { event: events.renderResponsiveChangeAction, handler: this.renderResponsiveChangeAction },\n            { event: events.contentReady, handler: this.initialEnd },\n            { event: events.sortComplete, handler: this.onActionComplete },\n            { event: events.inBoundModelChanged, handler: this.onPropertyChanged },\n            { event: events.click, handler: this.clickHandler },\n            { event: events.headerRefreshed, handler: this.refreshSortIcons },\n            { event: events.keyPressed, handler: this.keyPressed },\n            { event: events.cancelBegin, handler: this.cancelBeginEvent },\n            { event: events.destroy, handler: this.destroy }];\n        addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n        EventHandler.add(document.body, 'click', this.excelFilterSortAction, this);\n        EventHandler.add(document.body, 'touchend', this.excelFilterSortAction, this);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        addRemoveEventListener(this.parent, this.evtHandlers, false);\n        EventHandler.remove(document.body, 'click', this.excelFilterSortAction);\n        EventHandler.remove(document.body, 'touchend', this.excelFilterSortAction);\n    };\n    Sort.prototype.excelFilterSortAction = function (e) {\n        var popUp = parentsUntil(e.target, 'e-grid-popup');\n        var gridID = this.parent.element.id + '_e-popup';\n        if (popUp && popUp.id === gridID && parentsUntil(e.target, 'e-excelfilter')) {\n            this.excelFilterSortActionHandler(e);\n        }\n    };\n    /**\n     * To destroy the sorting\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.destroy = function () {\n        this.isModelChanged = false;\n        var gridElement = this.parent.element;\n        if (!gridElement || (!gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent))) {\n            return;\n        }\n        if (this.parent.element.querySelector('.e-gridpopup').getElementsByClassName('e-sortdirect').length) {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (!this.parent.refreshing && (this.parent.isDestroyed || !this.parent.allowSorting)) {\n            this.clearSorting();\n        }\n        this.isModelChanged = true;\n        this.removeEventListener();\n    };\n    Sort.prototype.cancelBeginEvent = function (e) {\n        if (e.requestType === 'sorting') {\n            this.restoreSettings();\n            this.refreshSortIcons();\n            this.isMultiSort = true;\n        }\n    };\n    Sort.prototype.clickHandler = function (e) {\n        var gObj = this.parent;\n        this.currentTarget = null;\n        this.popUpClickHandler(e);\n        var target = closest(e.target, '.e-headercell');\n        if (target && !e.target.classList.contains('e-grptogglebtn') &&\n            !(target.classList.contains('e-resized')) &&\n            !e.target.classList.contains('e-rhandler') &&\n            !e.target.classList.contains('e-columnmenu') &&\n            !e.target.classList.contains('e-filtermenudiv') &&\n            !parentsUntil(e.target, 'e-stackedheadercell') &&\n            !(gObj.allowSelection && gObj.selectionSettings.allowColumnSelection &&\n                e.target.classList.contains('e-headercell'))) {\n            var gObj_1 = this.parent;\n            var colObj = gObj_1.getColumnByUid(target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n            if (colObj.type !== 'checkbox') {\n                this.initiateSort(target, e, colObj);\n                if (Browser.isDevice) {\n                    this.showPopUp(e);\n                }\n            }\n        }\n        if (target) {\n            target.classList.remove('e-resized');\n        }\n        this.excelFilterSortActionHandler(e);\n    };\n    Sort.prototype.excelFilterSortActionHandler = function (e) {\n        if (parentsUntil(e.target, 'e-excel-ascending') || parentsUntil(e.target, 'e-excel-descending')) {\n            var colUid = closest(e.target, '.e-filter-popup').getAttribute('uid');\n            var direction = isNullOrUndefined(parentsUntil(e.target, 'e-excel-descending')) ?\n                'Ascending' : 'Descending';\n            this.sortColumn(this.parent.getColumnByUid(colUid).field, direction, false);\n        }\n    };\n    Sort.prototype.keyPressed = function (e) {\n        var ele = e.target;\n        if (!this.parent.isEdit && (e.action === 'enter' || e.action === 'ctrlEnter' || e.action === 'shiftEnter')\n            && closest(ele, '.e-headercell')) {\n            var target = this.focus.getFocusedElement();\n            if (isNullOrUndefined(target) || !target.classList.contains('e-headercell')\n                || !target.querySelector('.e-headercelldiv')) {\n                return;\n            }\n            var col = this.parent.getColumnByUid(target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n            this.initiateSort(target, e, col);\n        }\n    };\n    Sort.prototype.initiateSort = function (target, e, column) {\n        var gObj = this.parent;\n        var field = column.field;\n        this.currentTarget = e.target;\n        var direction = !target.getElementsByClassName('e-ascending').length ? 'Ascending' :\n            'Descending';\n        this.isMultiSort = e.ctrlKey || this.enableSortMultiTouch ||\n            (navigator.userAgent.indexOf('Mac OS') !== -1 && e.metaKey);\n        if (e.shiftKey || (this.sortSettings.allowUnsort && target.getElementsByClassName('e-descending').length)\n            && !(gObj.groupSettings.columns.indexOf(field) > -1)) {\n            this.removeSortColumn(field);\n        }\n        else {\n            this.sortColumn(field, direction, this.isMultiSort);\n        }\n    };\n    Sort.prototype.showPopUp = function (e) {\n        var target = closest(e.target, '.e-headercell');\n        if (this.parent.allowMultiSorting && (!isNullOrUndefined(target) || this.parent.isContextMenuOpen())) {\n            setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-sortdirect e-icons e-icon-sortdirect' + (this.sortedColumns.length > 1 ? ' e-spanclicked' : ''));\n        }\n    };\n    Sort.prototype.popUpClickHandler = function (e) {\n        var target = e.target;\n        if (closest(target, '.e-headercell') || e.target.classList.contains(literals.rowCell) ||\n            closest(target, '.e-gridpopup')) {\n            if (target.classList.contains('e-sortdirect')) {\n                if (!target.classList.contains('e-spanclicked')) {\n                    target.classList.add('e-spanclicked');\n                    this.enableSortMultiTouch = true;\n                }\n                else {\n                    target.classList.remove('e-spanclicked');\n                    this.enableSortMultiTouch = false;\n                    this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n                }\n            }\n        }\n        else {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Sort.prototype.addSortIcons = function () {\n        var gObj = this.parent;\n        var header;\n        var filterElement;\n        var cols = this.sortSettings.columns;\n        var fieldNames = this.parent.getColumns().map(function (c) { return c.field; });\n        for (var i = 0, len = cols.length; i < len; i++) {\n            header = gObj.getColumnHeaderByField(cols[parseInt(i.toString(), 10)].field);\n            if (fieldNames.indexOf(cols[parseInt(i.toString(), 10)].field) === -1 || isNullOrUndefined(header)) {\n                continue;\n            }\n            this.aria.setSort(header, (cols[parseInt(i.toString(), 10)].direction).toLowerCase());\n            if (cols.length > 1) {\n                header.querySelector('.e-headercelldiv').insertBefore(this.parent.createElement('span', { className: 'e-sortnumber', innerHTML: (i + 1).toString() }), header.querySelector('.e-headertext'));\n            }\n            filterElement = header.querySelector('.e-sortfilterdiv');\n            if (cols[parseInt(i.toString(), 10)].direction === 'Ascending') {\n                classList(filterElement, ['e-ascending', 'e-icon-ascending'], []);\n            }\n            else {\n                classList(filterElement, ['e-descending', 'e-icon-descending'], []);\n            }\n        }\n    };\n    Sort.prototype.removeSortIcons = function (position) {\n        var gObj = this.parent;\n        var header;\n        var cols = this.sortSettings.columns;\n        var fieldNames = this.parent.getColumns().map(function (c) { return c.field; });\n        for (var i = position ? position : 0, len = !isNullOrUndefined(position) ? position + 1 : cols.length; i < len; i++) {\n            header = gObj.getColumnHeaderByField(cols[parseInt(i.toString(), 10)].field);\n            if (isNullOrUndefined(header) || (gObj.allowGrouping\n                && gObj.groupSettings.columns.indexOf(cols[parseInt(i.toString(), 10)].field) > -1\n                && !header.querySelector('.e-sortfilterdiv'))) {\n                continue;\n            }\n            if (fieldNames.indexOf(cols[parseInt(i.toString(), 10)].field) === -1) {\n                continue;\n            }\n            this.aria.setSort(header, 'none');\n            classList(header.querySelector('.e-sortfilterdiv'), [], ['e-descending', 'e-icon-descending', 'e-ascending', 'e-icon-ascending']);\n            if (header.querySelector('.e-sortnumber')) {\n                header.querySelector('.e-headercelldiv').removeChild(header.querySelector('.e-sortnumber'));\n            }\n        }\n    };\n    Sort.prototype.getSortColumnFromField = function (field) {\n        for (var i = 0, len = this.sortSettings.columns.length; i < len; i++) {\n            if (this.sortSettings.columns[parseInt(i.toString(), 10)].field === field) {\n                return this.sortSettings.columns[parseInt(i.toString(), 10)];\n            }\n        }\n        return false;\n    };\n    Sort.prototype.updateAriaAttr = function () {\n        var fieldNames = this.parent.getColumns().map(function (c) { return c.field; });\n        for (var _i = 0, _a = this.sortedColumns; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (fieldNames.indexOf(col) === -1) {\n                continue;\n            }\n            var header = this.parent.getColumnHeaderByField(col);\n            this.aria.setSort(header, this.getSortColumnFromField(col).direction);\n        }\n    };\n    Sort.prototype.refreshSortIcons = function () {\n        this.removeSortIcons();\n        this.isMultiSort = true;\n        this.removeSortIcons();\n        this.addSortIcons();\n        this.isMultiSort = false;\n        this.updateAriaAttr();\n    };\n    Sort.prototype.renderResponsiveChangeAction = function (args) {\n        this.responsiveDialogRenderer.action = args.action;\n    };\n    /**\n     * To show the responsive custom sort dialog\n     *\n     * @param {boolean} enable - specifes dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.showCustomSort = function (enable) {\n        this.responsiveDialogRenderer.isCustomDialog = enable;\n        this.responsiveDialogRenderer.showResponsiveDialog();\n    };\n    return Sort;\n}());\nexport { Sort };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}