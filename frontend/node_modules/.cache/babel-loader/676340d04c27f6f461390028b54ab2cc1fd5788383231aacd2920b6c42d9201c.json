{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NotifyPropertyChanges, Component, getUniqueID, Property, isNullOrUndefined as isNOU, Event, EventHandler, ChildProperty, Complex, removeClass, addClass, L10n } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Configuration settings for the toggle button used in the SpeechToText component.\n */\nvar ButtonSettings = /** @class */function (_super) {\n  __extends(ButtonSettings, _super);\n  function ButtonSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('')], ButtonSettings.prototype, \"content\", void 0);\n  __decorate([Property('')], ButtonSettings.prototype, \"stopContent\", void 0);\n  __decorate([Property('')], ButtonSettings.prototype, \"iconCss\", void 0);\n  __decorate([Property('')], ButtonSettings.prototype, \"stopIconCss\", void 0);\n  __decorate([Property('Left')], ButtonSettings.prototype, \"iconPosition\", void 0);\n  __decorate([Property(false)], ButtonSettings.prototype, \"isPrimary\", void 0);\n  return ButtonSettings;\n}(ChildProperty);\nexport { ButtonSettings };\n/**\n * Configuration settings for tooltips in the SpeechToText component.\n * This allows customization of the tooltip content and its positioning.\n */\nvar TooltipSettings = /** @class */function (_super) {\n  __extends(TooltipSettings, _super);\n  function TooltipSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('Start listening')], TooltipSettings.prototype, \"content\", void 0);\n  __decorate([Property('Stop listening')], TooltipSettings.prototype, \"stopContent\", void 0);\n  __decorate([Property('TopCenter')], TooltipSettings.prototype, \"position\", void 0);\n  return TooltipSettings;\n}(ChildProperty);\nexport { TooltipSettings };\n/**\n * Enum representing the operational states of the SpeechToText component.\n */\nexport var SpeechToTextState;\n(function (SpeechToTextState) {\n  /**\n   * Specifies the state where the SpeechToText component is inactive and not processing spoken input.\n   */\n  SpeechToTextState[\"Inactive\"] = \"Inactive\";\n  /**\n   * Specifies the state where the SpeechToText component is actively listening to spoken input.\n   */\n  SpeechToTextState[\"Listening\"] = \"Listening\";\n  /**\n   * Specifies the state where the SpeechToText component has stopped processing spoken input.\n   */\n  SpeechToTextState[\"Stopped\"] = \"Stopped\";\n})(SpeechToTextState || (SpeechToTextState = {}));\n//#endregion\nvar SpeechToText = /** @class */function (_super) {\n  __extends(SpeechToText, _super);\n  //#endregion\n  //#region Inherited methods\n  /**\n   * Constructor for creating the component\n   *\n   * @param {SpeechToTextModel} options - Specifies the SpeechToTextModel model.\n   * @param {string | HTMLElement} element - Specifies the element to render as component.\n   * @private\n   */\n  function SpeechToText(options, element) {\n    var _this = _super.call(this, options, element) || this;\n    _this.fullTranscript = '';\n    _this.isClicked = false;\n    _this.isUserInteracted = false;\n    _this.hasStarted = false;\n    return _this;\n  }\n  /**\n   * Initialize the event handler\n   *\n   * @private\n   * @returns {void}\n   */\n  SpeechToText.prototype.preRender = function () {\n    if (!this.element.id) {\n      this.element.id = getUniqueID('e-' + this.getModuleName());\n    }\n  };\n  SpeechToText.prototype.getDirective = function () {\n    return 'EJS-SPEECHTOTEXT';\n  };\n  /**\n   * To get component name.\n   *\n   * @returns {string} - It returns the current module name.\n   * @private\n   */\n  SpeechToText.prototype.getModuleName = function () {\n    return 'speech-to-text';\n  };\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @private\n   * @returns {string} - It returns the persisted data.\n   */\n  SpeechToText.prototype.getPersistData = function () {\n    return this.addOnPersist([]);\n  };\n  SpeechToText.prototype.render = function () {\n    this.renderSpeechToText();\n    this.initializeSpeechRecognition();\n    if (!isNOU(this.listeningState)) {\n      this.handleStateChange();\n    }\n    this.wireEvents();\n  };\n  //#endregion\n  //#region Private Methods\n  SpeechToText.prototype.initializeLocale = function () {\n    this.l10n = new L10n(this.getModuleName(), {\n      abortedError: 'Speech recognition was aborted.',\n      audioCaptureError: 'No microphone detected. Ensure your microphone is connected.',\n      defaultError: 'An unknown error occurred.',\n      networkError: 'Network error occurred. Check your internet connection.',\n      noSpeechError: 'No speech detected. Please speak into the microphone.',\n      notAllowedError: 'Microphone access denied. Allow microphone permissions.',\n      serviceNotAllowedError: 'Speech recognition service is not allowed in this context.',\n      unsupportedBrowserError: 'The browser does not support the SpeechRecognition API.',\n      startAriaLabel: 'Press to start speaking and transcribe your words',\n      stopAriaLabel: 'Press to stop speaking and end transcription',\n      startTooltipText: 'Start listening',\n      stopTooltipText: 'Stop listening'\n    }, this.locale);\n  };\n  SpeechToText.prototype.renderSpeechToText = function () {\n    this.initializeLocale();\n    var iconCss = !isNOU(this.buttonSettings.iconCss) && this.buttonSettings.iconCss !== '' ? this.buttonSettings.iconCss : 'e-icons e-listen-icon';\n    this.buttonInst = new Button({\n      iconCss: iconCss,\n      isPrimary: this.buttonSettings.isPrimary,\n      cssClass: this.updateButtonCssClass(),\n      disabled: this.disabled,\n      content: this.buttonSettings.content,\n      iconPosition: this.buttonSettings.iconPosition,\n      enableRtl: this.enableRtl\n    });\n    this.buttonInst.appendTo(this.element);\n    this.updateTooltip();\n    this.updateCssClass(this.cssClass, '');\n    this.updateAriaLabel();\n    if (!isNOU(this.htmlAttributes)) {\n      this.addHtmlAttributes(this.htmlAttributes);\n    }\n  };\n  SpeechToText.prototype.updateAriaLabel = function () {\n    var ariaLabel;\n    if (this.htmlAttributes && this.htmlAttributes['aria-label']) {\n      ariaLabel = this.htmlAttributes['aria-label'];\n    } else {\n      ariaLabel = this.micOn ? this.l10n.getConstant('stopAriaLabel') : this.l10n.getConstant('startAriaLabel');\n    }\n    this.element.setAttribute('aria-label', ariaLabel);\n  };\n  SpeechToText.prototype.updateCssClass = function (newClass, oldClass) {\n    if (oldClass) {\n      removeClass([this.element], oldClass.trim().split(' '));\n    }\n    if (newClass) {\n      addClass([this.element], newClass.trim().split(' '));\n    }\n  };\n  SpeechToText.prototype.updateButtonCssClass = function () {\n    var content = this.isClicked ? this.buttonSettings.stopContent : this.buttonSettings.content;\n    var cssClass;\n    if (content === '') {\n      cssClass = 'e-round';\n    }\n    if (this.micOn) {\n      cssClass += ' e-listening-state';\n    }\n    return cssClass;\n  };\n  SpeechToText.prototype.updateTooltip = function () {\n    if (this.showTooltip) {\n      if (this.tooltipSettings) {\n        if (this.tooltipSettings.content === 'Start listening') {\n          this.tooltipSettings.content = this.l10n.getConstant('startTooltipText');\n        }\n        if (this.tooltipSettings.stopContent === 'Stop listening') {\n          this.tooltipSettings.stopContent = this.l10n.getConstant('stopTooltipText');\n        }\n      }\n      this.tooltipInst = new Tooltip({\n        content: this.hasStarted ? this.tooltipSettings.stopContent : this.tooltipSettings.content,\n        position: this.tooltipSettings.position,\n        windowCollision: true,\n        cssClass: this.cssClass ? 'e-speech-to-text-tooltip ' + this.cssClass : 'e-speech-to-text-tooltip',\n        opensOn: 'Hover',\n        enableRtl: this.enableRtl\n      });\n      this.tooltipInst.appendTo(this.element);\n    } else {\n      if (!isNOU(this.tooltipInst)) {\n        this.tooltipInst.destroy();\n        this.tooltipInst = null;\n      }\n    }\n  };\n  SpeechToText.prototype.handleStateChange = function () {\n    if (this.disabled) {\n      return;\n    }\n    if (this.listeningState === SpeechToTextState.Listening) {\n      this.micOn = true;\n      this.startSpeechRecognition();\n    } else if (this.listeningState === SpeechToTextState.Inactive || this.listeningState === SpeechToTextState.Stopped) {\n      if (this.micOn) {\n        this.micOn = false;\n        this.stopSpeechRecognition();\n      } else {\n        var prevOnChange = this.isProtectedOnChange;\n        this.isProtectedOnChange = true;\n        this.listeningState = SpeechToTextState.Inactive;\n        this.isProtectedOnChange = prevOnChange;\n      }\n    }\n  };\n  SpeechToText.prototype.addHtmlAttributes = function (attrs) {\n    if (attrs) {\n      for (var attr in attrs) {\n        if (Object.prototype.hasOwnProperty.call(attrs, attr)) {\n          this.element.setAttribute(attr, attrs[attr]);\n        }\n      }\n    }\n  };\n  SpeechToText.prototype.removeHtmlAttributes = function (attrs) {\n    if (attrs) {\n      for (var attr in attrs) {\n        if (Object.prototype.hasOwnProperty.call(attrs, attr)) {\n          this.element.removeAttribute(attr);\n        }\n      }\n    }\n  };\n  SpeechToText.prototype.wireEvents = function () {\n    EventHandler.add(this.element, 'click', this.handleButtonClick, this);\n  };\n  SpeechToText.prototype.unWireEvents = function () {\n    EventHandler.remove(this.element, 'click', this.handleButtonClick);\n  };\n  SpeechToText.prototype.handleButtonClick = function (event) {\n    this.isUserInteracted = true;\n    this.micOn = !this.micOn;\n    if (this.micOn) {\n      this.startSpeechRecognition(event);\n    } else {\n      this.stopSpeechRecognition(event);\n    }\n  };\n  SpeechToText.prototype.triggerUnSupportedError = function () {\n    var eventArgs = {\n      error: 'unsupported-browser',\n      errorMessage: this.l10n.getConstant('unsupportedBrowserError')\n    };\n    this.trigger('onError', eventArgs);\n  };\n  SpeechToText.prototype.initializeSpeechRecognition = function () {\n    var _this = this;\n    var windowInst = window;\n    var SpeechRecognition = windowInst.SpeechRecognition || windowInst.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      this.triggerUnSupportedError();\n      return;\n    }\n    this.recognition = new SpeechRecognition();\n    this.recognition.continuous = true;\n    this.recognition.lang = this.lang;\n    this.recognition.interimResults = this.allowInterimResults;\n    this.recognition.onstart = function (event) {\n      var prevOnChange = _this.isProtectedOnChange;\n      _this.isProtectedOnChange = true;\n      _this.transcript = _this.fullTranscript = '';\n      _this.isProtectedOnChange = prevOnChange;\n      var eventArgs = {\n        cancel: false,\n        listeningState: SpeechToTextState.Listening,\n        event: event,\n        isInteracted: _this.isUserInteracted\n      };\n      _this.trigger('onStart', eventArgs, function () {\n        if (!eventArgs.cancel) {\n          _this.handleStartRecognition();\n        } else {\n          _this.recognition.abort();\n          _this.micOn = false;\n        }\n      });\n    };\n    this.recognition.onend = function (event) {\n      if (_this.hasStarted) {\n        _this.micOn = false;\n        _this.handleStopRecognition(event);\n      }\n    };\n    this.recognition.onerror = function (event) {\n      var errorMessage = '';\n      switch (event.error) {\n        case 'not-allowed':\n          errorMessage = _this.l10n.getConstant('notAllowedError');\n          break;\n        case 'audio-capture':\n          errorMessage = _this.l10n.getConstant('audioCaptureError');\n          break;\n        case 'network':\n          errorMessage = _this.l10n.getConstant('networkError');\n          break;\n        case 'no-speech':\n          errorMessage = _this.l10n.getConstant('noSpeechError');\n          break;\n        case 'aborted':\n          errorMessage = _this.l10n.getConstant('abortedError');\n          break;\n        case 'service-not-allowed':\n          errorMessage = _this.l10n.getConstant('serviceNotAllowedError');\n          break;\n        default:\n          errorMessage = _this.l10n.getConstant('defaultError');\n      }\n      var eventArgs = {\n        event: event,\n        error: event.error,\n        errorMessage: errorMessage\n      };\n      _this.trigger('onError', eventArgs);\n      _this.isUserInteracted = false;\n    };\n    this.recognition.onresult = function (event) {\n      var result = event.results[event.resultIndex];\n      var interimTranscript = '';\n      var prevOnChange = _this.isProtectedOnChange;\n      _this.isProtectedOnChange = true;\n      if (result.isFinal) {\n        _this.fullTranscript += result[0].transcript;\n        _this.transcript = _this.fullTranscript;\n      } else {\n        interimTranscript += result[0].transcript;\n        _this.transcript = _this.fullTranscript + interimTranscript;\n      }\n      var eventArgs = {\n        event: event,\n        transcript: _this.transcript,\n        isInterimResult: !result.isFinal\n      };\n      _this.trigger('transcriptChanged', eventArgs, function () {\n        if (eventArgs.transcript !== _this.transcript) {\n          var prevOnChange_1 = _this.isProtectedOnChange;\n          _this.isProtectedOnChange = true;\n          _this.transcript = _this.fullTranscript = eventArgs.transcript;\n          _this.isProtectedOnChange = prevOnChange_1;\n        }\n      });\n      _this.isProtectedOnChange = prevOnChange;\n    };\n  };\n  SpeechToText.prototype.handleStartRecognition = function () {\n    var prevOnChange = this.isProtectedOnChange;\n    this.isProtectedOnChange = true;\n    this.hasStarted = true;\n    this.listeningState = SpeechToTextState.Listening;\n    if (!isNOU(this.tooltipInst)) {\n      this.tooltipInst.content = this.tooltipSettings.stopContent;\n    }\n    this.updateAriaLabel();\n    this.isClicked = true;\n    this.buttonInst.cssClass = this.updateButtonCssClass();\n    this.buttonInst.content = this.buttonSettings.stopContent;\n    var iconCss = !isNOU(this.buttonSettings.stopIconCss) && this.buttonSettings.stopIconCss !== '' ? this.buttonSettings.stopIconCss : 'e-icons e-listen-stop';\n    this.buttonInst.iconCss = iconCss;\n    this.isProtectedOnChange = prevOnChange;\n  };\n  SpeechToText.prototype.triggerUnSupportedStart = function (event) {\n    var _this = this;\n    var prevOnChange = this.isProtectedOnChange;\n    this.isProtectedOnChange = true;\n    this.transcript = '';\n    this.isProtectedOnChange = prevOnChange;\n    var eventArgs = {\n      cancel: false,\n      listeningState: SpeechToTextState.Listening,\n      event: event,\n      isInteracted: this.isUserInteracted\n    };\n    this.trigger('onStart', eventArgs, function () {\n      if (!eventArgs.cancel) {\n        _this.handleStartRecognition();\n      }\n    });\n  };\n  SpeechToText.prototype.startSpeechRecognition = function (event) {\n    if (this.hasStarted) {\n      return;\n    }\n    if (this.recognition) {\n      this.recognition.start();\n    } else {\n      this.triggerUnSupportedStart(event);\n    }\n  };\n  SpeechToText.prototype.stopSpeechRecognition = function (event) {\n    if (this.recognition) {\n      this.recognition.stop();\n    } else {\n      this.handleStopRecognition(event);\n    }\n  };\n  SpeechToText.prototype.handleStopRecognition = function (event) {\n    if (!this.hasStarted) {\n      return;\n    } // Ensure onStop is only processed if needed\n    var prevOnChange = this.isProtectedOnChange;\n    this.isProtectedOnChange = true;\n    this.listeningState = SpeechToTextState.Stopped;\n    if (!isNOU(this.tooltipInst)) {\n      this.tooltipInst.content = this.tooltipSettings.content;\n    }\n    this.updateAriaLabel();\n    this.isClicked = false;\n    this.buttonInst.cssClass = this.updateButtonCssClass();\n    this.buttonInst.content = this.buttonSettings.content;\n    var eventArgs = {\n      listeningState: SpeechToTextState.Stopped,\n      event: event,\n      isInteracted: this.isUserInteracted\n    };\n    this.trigger('onStop', eventArgs);\n    this.listeningState = SpeechToTextState.Inactive;\n    var iconCss = !isNOU(this.buttonSettings.iconCss) && this.buttonSettings.iconCss !== '' ? this.buttonSettings.iconCss : 'e-icons e-listen-icon';\n    this.buttonInst.iconCss = iconCss;\n    this.hasStarted = false;\n    this.isProtectedOnChange = prevOnChange;\n  };\n  SpeechToText.prototype.buttonSettingsChanges = function (oldModel, newModel) {\n    if (oldModel.content !== newModel.content || oldModel.stopContent !== newModel.stopContent) {\n      this.buttonInst.content = this.hasStarted ? this.buttonSettings.stopContent : this.buttonSettings.content;\n      this.buttonInst.cssClass = this.updateButtonCssClass();\n    }\n    if (oldModel.iconCss !== newModel.iconCss || oldModel.stopIconCss !== newModel.stopIconCss) {\n      var iconCss = !isNOU(this.buttonSettings.iconCss) && this.buttonSettings.iconCss !== '' ? this.buttonSettings.iconCss : 'e-icons e-listen-icon';\n      var stopIconCss = !isNOU(this.buttonSettings.stopIconCss) && this.buttonSettings.stopIconCss !== '' ? this.buttonSettings.stopIconCss : 'e-icons e-listen-stop';\n      this.buttonInst.iconCss = this.hasStarted ? stopIconCss : iconCss;\n    }\n    if (oldModel.iconPosition !== newModel.iconPosition) {\n      this.buttonInst.iconPosition = this.buttonSettings.iconPosition;\n    }\n    if (oldModel.isPrimary !== newModel.isPrimary) {\n      this.buttonInst.isPrimary = this.buttonSettings.isPrimary;\n    }\n  };\n  SpeechToText.prototype.destroyAndNullify = function (obj) {\n    if (obj) {\n      obj.destroy();\n      obj = null;\n    }\n  };\n  //#endregion\n  //#region Public Methods\n  /**\n   * Destroy the SpeechToText.\n   *\n   * @returns {void}\n   */\n  SpeechToText.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.unWireEvents();\n    this.destroyAndNullify(this.buttonInst);\n    this.destroyAndNullify(this.tooltipInst);\n    this.recognition = null;\n    this.micOn = null;\n    this.htmlAttributes = this.tooltipSettings = this.buttonSettings = null;\n    this.element.classList.remove('e-rtl');\n  };\n  /**\n   * Begins the audio capture process by listening to the user's microphone input.\n   * This method initiates the speech-to-text process and continuously updates the `transcript` property with interim and final recognition results.\n   *\n   * @returns {void} No return value.\n   */\n  SpeechToText.prototype.startListening = function () {\n    if (!this.disabled && !this.isClicked) {\n      this.isUserInteracted = false;\n      this.micOn = true;\n      this.startSpeechRecognition();\n    }\n  };\n  /**\n   * Stops the audio capture process and finalizes the speech recognition.\n   * This method ends the ongoing speech-to-text operation and completes the recognition process, storing the final transcription.\n   * It is typically called to stop listening when the user is finished speaking.\n   *\n   * @returns {void} No return value.\n   */\n  SpeechToText.prototype.stopListening = function () {\n    if (!this.disabled && this.isClicked) {\n      this.isUserInteracted = false;\n      this.micOn = false;\n      this.stopSpeechRecognition();\n    }\n  };\n  /**\n   * Called if any of the property value is changed.\n   *\n   * @param  {SpeechToTextModel} newProp - Specifies new properties\n   * @param  {SpeechToTextModel} oldProp - Specifies old properties\n   * @returns {void}\n   * @private\n   */\n  SpeechToText.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'lang':\n          if (this.recognition) {\n            this.recognition.lang = this.lang;\n          }\n          break;\n        case 'allowInterimResults':\n          if (this.recognition) {\n            this.recognition.interimResults = this.allowInterimResults;\n          }\n          break;\n        case 'buttonSettings':\n          this.buttonSettingsChanges(oldProp.buttonSettings, newProp.buttonSettings);\n          break;\n        case 'cssClass':\n          this.updateCssClass(newProp.cssClass, oldProp.cssClass);\n          break;\n        case 'disabled':\n          this.buttonInst.disabled = this.disabled;\n          this.handleStateChange();\n          break;\n        case 'htmlAttributes':\n          this.removeHtmlAttributes(oldProp.htmlAttributes);\n          this.addHtmlAttributes(newProp.htmlAttributes);\n          break;\n        case 'listeningState':\n          this.handleStateChange();\n          break;\n        case 'tooltipSettings':\n        case 'showTooltip':\n          this.updateTooltip();\n          break;\n        case 'transcript':\n          this.transcript = this.fullTranscript = newProp.transcript;\n          break;\n        case 'enableRtl':\n          this.buttonInst.enableRtl = this.tooltipInst.enableRtl = this.enableRtl;\n          break;\n        case 'locale':\n          this.l10n.setLocale(this.locale);\n          this.updateAriaLabel();\n          this.updateTooltip();\n          break;\n      }\n    }\n  };\n  __decorate([Property('')], SpeechToText.prototype, \"transcript\", void 0);\n  __decorate([Property('')], SpeechToText.prototype, \"lang\", void 0);\n  __decorate([Property(true)], SpeechToText.prototype, \"allowInterimResults\", void 0);\n  __decorate([Property(true)], SpeechToText.prototype, \"showTooltip\", void 0);\n  __decorate([Property('Inactive')], SpeechToText.prototype, \"listeningState\", void 0);\n  __decorate([Complex({}, ButtonSettings)], SpeechToText.prototype, \"buttonSettings\", void 0);\n  __decorate([Complex({}, TooltipSettings)], SpeechToText.prototype, \"tooltipSettings\", void 0);\n  __decorate([Property(false)], SpeechToText.prototype, \"disabled\", void 0);\n  __decorate([Property('')], SpeechToText.prototype, \"cssClass\", void 0);\n  __decorate([Property({})], SpeechToText.prototype, \"htmlAttributes\", void 0);\n  __decorate([Event()], SpeechToText.prototype, \"created\", void 0);\n  __decorate([Event()], SpeechToText.prototype, \"onStart\", void 0);\n  __decorate([Event()], SpeechToText.prototype, \"onStop\", void 0);\n  __decorate([Event()], SpeechToText.prototype, \"onError\", void 0);\n  __decorate([Event()], SpeechToText.prototype, \"transcriptChanged\", void 0);\n  SpeechToText = __decorate([NotifyPropertyChanges], SpeechToText);\n  return SpeechToText;\n}(Component);\nexport { SpeechToText };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","NotifyPropertyChanges","Component","getUniqueID","Property","isNullOrUndefined","isNOU","Event","EventHandler","ChildProperty","Complex","removeClass","addClass","L10n","Button","Tooltip","ButtonSettings","_super","apply","TooltipSettings","SpeechToTextState","SpeechToText","options","element","_this","call","fullTranscript","isClicked","isUserInteracted","hasStarted","preRender","id","getModuleName","getDirective","getPersistData","addOnPersist","render","renderSpeechToText","initializeSpeechRecognition","listeningState","handleStateChange","wireEvents","initializeLocale","l10n","abortedError","audioCaptureError","defaultError","networkError","noSpeechError","notAllowedError","serviceNotAllowedError","unsupportedBrowserError","startAriaLabel","stopAriaLabel","startTooltipText","stopTooltipText","locale","iconCss","buttonSettings","buttonInst","isPrimary","cssClass","updateButtonCssClass","disabled","content","iconPosition","enableRtl","appendTo","updateTooltip","updateCssClass","updateAriaLabel","htmlAttributes","addHtmlAttributes","ariaLabel","micOn","getConstant","setAttribute","newClass","oldClass","trim","split","stopContent","showTooltip","tooltipSettings","tooltipInst","position","windowCollision","opensOn","destroy","Listening","startSpeechRecognition","Inactive","Stopped","stopSpeechRecognition","prevOnChange","isProtectedOnChange","attrs","attr","removeHtmlAttributes","removeAttribute","add","handleButtonClick","unWireEvents","remove","event","triggerUnSupportedError","eventArgs","error","errorMessage","trigger","windowInst","window","SpeechRecognition","webkitSpeechRecognition","recognition","continuous","lang","interimResults","allowInterimResults","onstart","transcript","cancel","isInteracted","handleStartRecognition","abort","onend","handleStopRecognition","onerror","onresult","result","results","resultIndex","interimTranscript","isFinal","isInterimResult","prevOnChange_1","stopIconCss","triggerUnSupportedStart","start","stop","buttonSettingsChanges","oldModel","newModel","destroyAndNullify","obj","classList","startListening","stopListening","onPropertyChanged","newProp","oldProp","_i","_a","keys","prop","setLocale"],"sources":["D:/weektable/frontend/node_modules/@syncfusion/ej2-inputs/src/speech-to-text/speech-to-text.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NotifyPropertyChanges, Component, getUniqueID, Property, isNullOrUndefined as isNOU, Event, EventHandler, ChildProperty, Complex, removeClass, addClass, L10n } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Configuration settings for the toggle button used in the SpeechToText component.\n */\nvar ButtonSettings = /** @class */ (function (_super) {\n    __extends(ButtonSettings, _super);\n    function ButtonSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ButtonSettings.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], ButtonSettings.prototype, \"stopContent\", void 0);\n    __decorate([\n        Property('')\n    ], ButtonSettings.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], ButtonSettings.prototype, \"stopIconCss\", void 0);\n    __decorate([\n        Property('Left')\n    ], ButtonSettings.prototype, \"iconPosition\", void 0);\n    __decorate([\n        Property(false)\n    ], ButtonSettings.prototype, \"isPrimary\", void 0);\n    return ButtonSettings;\n}(ChildProperty));\nexport { ButtonSettings };\n/**\n * Configuration settings for tooltips in the SpeechToText component.\n * This allows customization of the tooltip content and its positioning.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start listening')\n    ], TooltipSettings.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stop listening')\n    ], TooltipSettings.prototype, \"stopContent\", void 0);\n    __decorate([\n        Property('TopCenter')\n    ], TooltipSettings.prototype, \"position\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * Enum representing the operational states of the SpeechToText component.\n */\nexport var SpeechToTextState;\n(function (SpeechToTextState) {\n    /**\n     * Specifies the state where the SpeechToText component is inactive and not processing spoken input.\n     */\n    SpeechToTextState[\"Inactive\"] = \"Inactive\";\n    /**\n     * Specifies the state where the SpeechToText component is actively listening to spoken input.\n     */\n    SpeechToTextState[\"Listening\"] = \"Listening\";\n    /**\n     * Specifies the state where the SpeechToText component has stopped processing spoken input.\n     */\n    SpeechToTextState[\"Stopped\"] = \"Stopped\";\n})(SpeechToTextState || (SpeechToTextState = {}));\n//#endregion\nvar SpeechToText = /** @class */ (function (_super) {\n    __extends(SpeechToText, _super);\n    //#endregion\n    //#region Inherited methods\n    /**\n     * Constructor for creating the component\n     *\n     * @param {SpeechToTextModel} options - Specifies the SpeechToTextModel model.\n     * @param {string | HTMLElement} element - Specifies the element to render as component.\n     * @private\n     */\n    function SpeechToText(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.fullTranscript = '';\n        _this.isClicked = false;\n        _this.isUserInteracted = false;\n        _this.hasStarted = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     *\n     * @private\n     * @returns {void}\n     */\n    SpeechToText.prototype.preRender = function () {\n        if (!this.element.id) {\n            this.element.id = getUniqueID('e-' + this.getModuleName());\n        }\n    };\n    SpeechToText.prototype.getDirective = function () {\n        return 'EJS-SPEECHTOTEXT';\n    };\n    /**\n     * To get component name.\n     *\n     * @returns {string} - It returns the current module name.\n     * @private\n     */\n    SpeechToText.prototype.getModuleName = function () {\n        return 'speech-to-text';\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @private\n     * @returns {string} - It returns the persisted data.\n     */\n    SpeechToText.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    SpeechToText.prototype.render = function () {\n        this.renderSpeechToText();\n        this.initializeSpeechRecognition();\n        if (!isNOU(this.listeningState)) {\n            this.handleStateChange();\n        }\n        this.wireEvents();\n    };\n    //#endregion\n    //#region Private Methods\n    SpeechToText.prototype.initializeLocale = function () {\n        this.l10n = new L10n(this.getModuleName(), {\n            abortedError: 'Speech recognition was aborted.',\n            audioCaptureError: 'No microphone detected. Ensure your microphone is connected.',\n            defaultError: 'An unknown error occurred.',\n            networkError: 'Network error occurred. Check your internet connection.',\n            noSpeechError: 'No speech detected. Please speak into the microphone.',\n            notAllowedError: 'Microphone access denied. Allow microphone permissions.',\n            serviceNotAllowedError: 'Speech recognition service is not allowed in this context.',\n            unsupportedBrowserError: 'The browser does not support the SpeechRecognition API.',\n            startAriaLabel: 'Press to start speaking and transcribe your words',\n            stopAriaLabel: 'Press to stop speaking and end transcription',\n            startTooltipText: 'Start listening',\n            stopTooltipText: 'Stop listening'\n        }, this.locale);\n    };\n    SpeechToText.prototype.renderSpeechToText = function () {\n        this.initializeLocale();\n        var iconCss = !isNOU(this.buttonSettings.iconCss) && this.buttonSettings.iconCss !== '' ? this.buttonSettings.iconCss : 'e-icons e-listen-icon';\n        this.buttonInst = new Button({\n            iconCss: iconCss,\n            isPrimary: this.buttonSettings.isPrimary,\n            cssClass: this.updateButtonCssClass(),\n            disabled: this.disabled,\n            content: this.buttonSettings.content,\n            iconPosition: this.buttonSettings.iconPosition,\n            enableRtl: this.enableRtl\n        });\n        this.buttonInst.appendTo(this.element);\n        this.updateTooltip();\n        this.updateCssClass(this.cssClass, '');\n        this.updateAriaLabel();\n        if (!isNOU(this.htmlAttributes)) {\n            this.addHtmlAttributes(this.htmlAttributes);\n        }\n    };\n    SpeechToText.prototype.updateAriaLabel = function () {\n        var ariaLabel;\n        if (this.htmlAttributes && this.htmlAttributes['aria-label']) {\n            ariaLabel = this.htmlAttributes['aria-label'];\n        }\n        else {\n            ariaLabel = this.micOn ? this.l10n.getConstant('stopAriaLabel') : this.l10n.getConstant('startAriaLabel');\n        }\n        this.element.setAttribute('aria-label', ariaLabel);\n    };\n    SpeechToText.prototype.updateCssClass = function (newClass, oldClass) {\n        if (oldClass) {\n            removeClass([this.element], oldClass.trim().split(' '));\n        }\n        if (newClass) {\n            addClass([this.element], newClass.trim().split(' '));\n        }\n    };\n    SpeechToText.prototype.updateButtonCssClass = function () {\n        var content = this.isClicked ? this.buttonSettings.stopContent : this.buttonSettings.content;\n        var cssClass;\n        if (content === '') {\n            cssClass = 'e-round';\n        }\n        if (this.micOn) {\n            cssClass += ' e-listening-state';\n        }\n        return cssClass;\n    };\n    SpeechToText.prototype.updateTooltip = function () {\n        if (this.showTooltip) {\n            if (this.tooltipSettings) {\n                if (this.tooltipSettings.content === 'Start listening') {\n                    this.tooltipSettings.content = this.l10n.getConstant('startTooltipText');\n                }\n                if (this.tooltipSettings.stopContent === 'Stop listening') {\n                    this.tooltipSettings.stopContent = this.l10n.getConstant('stopTooltipText');\n                }\n            }\n            this.tooltipInst = new Tooltip({\n                content: this.hasStarted ? this.tooltipSettings.stopContent : this.tooltipSettings.content,\n                position: this.tooltipSettings.position,\n                windowCollision: true,\n                cssClass: this.cssClass ? ('e-speech-to-text-tooltip ' + this.cssClass) : 'e-speech-to-text-tooltip',\n                opensOn: 'Hover',\n                enableRtl: this.enableRtl\n            });\n            this.tooltipInst.appendTo(this.element);\n        }\n        else {\n            if (!isNOU(this.tooltipInst)) {\n                this.tooltipInst.destroy();\n                this.tooltipInst = null;\n            }\n        }\n    };\n    SpeechToText.prototype.handleStateChange = function () {\n        if (this.disabled) {\n            return;\n        }\n        if (this.listeningState === SpeechToTextState.Listening) {\n            this.micOn = true;\n            this.startSpeechRecognition();\n        }\n        else if (this.listeningState === SpeechToTextState.Inactive || this.listeningState === SpeechToTextState.Stopped) {\n            if (this.micOn) {\n                this.micOn = false;\n                this.stopSpeechRecognition();\n            }\n            else {\n                var prevOnChange = this.isProtectedOnChange;\n                this.isProtectedOnChange = true;\n                this.listeningState = SpeechToTextState.Inactive;\n                this.isProtectedOnChange = prevOnChange;\n            }\n        }\n    };\n    SpeechToText.prototype.addHtmlAttributes = function (attrs) {\n        if (attrs) {\n            for (var attr in attrs) {\n                if (Object.prototype.hasOwnProperty.call(attrs, attr)) {\n                    this.element.setAttribute(attr, attrs[attr]);\n                }\n            }\n        }\n    };\n    SpeechToText.prototype.removeHtmlAttributes = function (attrs) {\n        if (attrs) {\n            for (var attr in attrs) {\n                if (Object.prototype.hasOwnProperty.call(attrs, attr)) {\n                    this.element.removeAttribute(attr);\n                }\n            }\n        }\n    };\n    SpeechToText.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.handleButtonClick, this);\n    };\n    SpeechToText.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.handleButtonClick);\n    };\n    SpeechToText.prototype.handleButtonClick = function (event) {\n        this.isUserInteracted = true;\n        this.micOn = !this.micOn;\n        if (this.micOn) {\n            this.startSpeechRecognition(event);\n        }\n        else {\n            this.stopSpeechRecognition(event);\n        }\n    };\n    SpeechToText.prototype.triggerUnSupportedError = function () {\n        var eventArgs = {\n            error: 'unsupported-browser',\n            errorMessage: this.l10n.getConstant('unsupportedBrowserError')\n        };\n        this.trigger('onError', eventArgs);\n    };\n    SpeechToText.prototype.initializeSpeechRecognition = function () {\n        var _this = this;\n        var windowInst = window;\n        var SpeechRecognition = windowInst.SpeechRecognition || windowInst.webkitSpeechRecognition;\n        if (!SpeechRecognition) {\n            this.triggerUnSupportedError();\n            return;\n        }\n        this.recognition = new SpeechRecognition();\n        this.recognition.continuous = true;\n        this.recognition.lang = this.lang;\n        this.recognition.interimResults = this.allowInterimResults;\n        this.recognition.onstart = function (event) {\n            var prevOnChange = _this.isProtectedOnChange;\n            _this.isProtectedOnChange = true;\n            _this.transcript = _this.fullTranscript = '';\n            _this.isProtectedOnChange = prevOnChange;\n            var eventArgs = {\n                cancel: false,\n                listeningState: SpeechToTextState.Listening,\n                event: event,\n                isInteracted: _this.isUserInteracted\n            };\n            _this.trigger('onStart', eventArgs, function () {\n                if (!eventArgs.cancel) {\n                    _this.handleStartRecognition();\n                }\n                else {\n                    _this.recognition.abort();\n                    _this.micOn = false;\n                }\n            });\n        };\n        this.recognition.onend = function (event) {\n            if (_this.hasStarted) {\n                _this.micOn = false;\n                _this.handleStopRecognition(event);\n            }\n        };\n        this.recognition.onerror = function (event) {\n            var errorMessage = '';\n            switch (event.error) {\n                case 'not-allowed':\n                    errorMessage = _this.l10n.getConstant('notAllowedError');\n                    break;\n                case 'audio-capture':\n                    errorMessage = _this.l10n.getConstant('audioCaptureError');\n                    break;\n                case 'network':\n                    errorMessage = _this.l10n.getConstant('networkError');\n                    break;\n                case 'no-speech':\n                    errorMessage = _this.l10n.getConstant('noSpeechError');\n                    break;\n                case 'aborted':\n                    errorMessage = _this.l10n.getConstant('abortedError');\n                    break;\n                case 'service-not-allowed':\n                    errorMessage = _this.l10n.getConstant('serviceNotAllowedError');\n                    break;\n                default:\n                    errorMessage = _this.l10n.getConstant('defaultError');\n            }\n            var eventArgs = {\n                event: event,\n                error: event.error,\n                errorMessage: errorMessage\n            };\n            _this.trigger('onError', eventArgs);\n            _this.isUserInteracted = false;\n        };\n        this.recognition.onresult = function (event) {\n            var result = event.results[event.resultIndex];\n            var interimTranscript = '';\n            var prevOnChange = _this.isProtectedOnChange;\n            _this.isProtectedOnChange = true;\n            if (result.isFinal) {\n                _this.fullTranscript += result[0].transcript;\n                _this.transcript = _this.fullTranscript;\n            }\n            else {\n                interimTranscript += result[0].transcript;\n                _this.transcript = _this.fullTranscript + interimTranscript;\n            }\n            var eventArgs = {\n                event: event,\n                transcript: _this.transcript,\n                isInterimResult: !result.isFinal\n            };\n            _this.trigger('transcriptChanged', eventArgs, function () {\n                if (eventArgs.transcript !== _this.transcript) {\n                    var prevOnChange_1 = _this.isProtectedOnChange;\n                    _this.isProtectedOnChange = true;\n                    _this.transcript = _this.fullTranscript = eventArgs.transcript;\n                    _this.isProtectedOnChange = prevOnChange_1;\n                }\n            });\n            _this.isProtectedOnChange = prevOnChange;\n        };\n    };\n    SpeechToText.prototype.handleStartRecognition = function () {\n        var prevOnChange = this.isProtectedOnChange;\n        this.isProtectedOnChange = true;\n        this.hasStarted = true;\n        this.listeningState = SpeechToTextState.Listening;\n        if (!isNOU(this.tooltipInst)) {\n            this.tooltipInst.content = this.tooltipSettings.stopContent;\n        }\n        this.updateAriaLabel();\n        this.isClicked = true;\n        this.buttonInst.cssClass = this.updateButtonCssClass();\n        this.buttonInst.content = this.buttonSettings.stopContent;\n        var iconCss = !isNOU(this.buttonSettings.stopIconCss) && this.buttonSettings.stopIconCss !== '' ? this.buttonSettings.stopIconCss : 'e-icons e-listen-stop';\n        this.buttonInst.iconCss = iconCss;\n        this.isProtectedOnChange = prevOnChange;\n    };\n    SpeechToText.prototype.triggerUnSupportedStart = function (event) {\n        var _this = this;\n        var prevOnChange = this.isProtectedOnChange;\n        this.isProtectedOnChange = true;\n        this.transcript = '';\n        this.isProtectedOnChange = prevOnChange;\n        var eventArgs = {\n            cancel: false,\n            listeningState: SpeechToTextState.Listening,\n            event: event,\n            isInteracted: this.isUserInteracted\n        };\n        this.trigger('onStart', eventArgs, function () {\n            if (!eventArgs.cancel) {\n                _this.handleStartRecognition();\n            }\n        });\n    };\n    SpeechToText.prototype.startSpeechRecognition = function (event) {\n        if (this.hasStarted) {\n            return;\n        }\n        if (this.recognition) {\n            this.recognition.start();\n        }\n        else {\n            this.triggerUnSupportedStart(event);\n        }\n    };\n    SpeechToText.prototype.stopSpeechRecognition = function (event) {\n        if (this.recognition) {\n            this.recognition.stop();\n        }\n        else {\n            this.handleStopRecognition(event);\n        }\n    };\n    SpeechToText.prototype.handleStopRecognition = function (event) {\n        if (!this.hasStarted) {\n            return;\n        } // Ensure onStop is only processed if needed\n        var prevOnChange = this.isProtectedOnChange;\n        this.isProtectedOnChange = true;\n        this.listeningState = SpeechToTextState.Stopped;\n        if (!isNOU(this.tooltipInst)) {\n            this.tooltipInst.content = this.tooltipSettings.content;\n        }\n        this.updateAriaLabel();\n        this.isClicked = false;\n        this.buttonInst.cssClass = this.updateButtonCssClass();\n        this.buttonInst.content = this.buttonSettings.content;\n        var eventArgs = {\n            listeningState: SpeechToTextState.Stopped,\n            event: event,\n            isInteracted: this.isUserInteracted\n        };\n        this.trigger('onStop', eventArgs);\n        this.listeningState = SpeechToTextState.Inactive;\n        var iconCss = !isNOU(this.buttonSettings.iconCss) && this.buttonSettings.iconCss !== '' ? this.buttonSettings.iconCss : 'e-icons e-listen-icon';\n        this.buttonInst.iconCss = iconCss;\n        this.hasStarted = false;\n        this.isProtectedOnChange = prevOnChange;\n    };\n    SpeechToText.prototype.buttonSettingsChanges = function (oldModel, newModel) {\n        if (oldModel.content !== newModel.content || oldModel.stopContent !== newModel.stopContent) {\n            this.buttonInst.content = this.hasStarted ? this.buttonSettings.stopContent : this.buttonSettings.content;\n            this.buttonInst.cssClass = this.updateButtonCssClass();\n        }\n        if (oldModel.iconCss !== newModel.iconCss || oldModel.stopIconCss !== newModel.stopIconCss) {\n            var iconCss = !isNOU(this.buttonSettings.iconCss) && this.buttonSettings.iconCss !== '' ? this.buttonSettings.iconCss : 'e-icons e-listen-icon';\n            var stopIconCss = !isNOU(this.buttonSettings.stopIconCss) && this.buttonSettings.stopIconCss !== '' ? this.buttonSettings.stopIconCss : 'e-icons e-listen-stop';\n            this.buttonInst.iconCss = this.hasStarted ? stopIconCss : iconCss;\n        }\n        if (oldModel.iconPosition !== newModel.iconPosition) {\n            this.buttonInst.iconPosition = this.buttonSettings.iconPosition;\n        }\n        if (oldModel.isPrimary !== newModel.isPrimary) {\n            this.buttonInst.isPrimary = this.buttonSettings.isPrimary;\n        }\n    };\n    SpeechToText.prototype.destroyAndNullify = function (obj) {\n        if (obj) {\n            obj.destroy();\n            obj = null;\n        }\n    };\n    //#endregion\n    //#region Public Methods\n    /**\n     * Destroy the SpeechToText.\n     *\n     * @returns {void}\n     */\n    SpeechToText.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.unWireEvents();\n        this.destroyAndNullify(this.buttonInst);\n        this.destroyAndNullify(this.tooltipInst);\n        this.recognition = null;\n        this.micOn = null;\n        this.htmlAttributes = this.tooltipSettings = this.buttonSettings = null;\n        this.element.classList.remove('e-rtl');\n    };\n    /**\n     * Begins the audio capture process by listening to the user's microphone input.\n     * This method initiates the speech-to-text process and continuously updates the `transcript` property with interim and final recognition results.\n     *\n     * @returns {void} No return value.\n     */\n    SpeechToText.prototype.startListening = function () {\n        if (!this.disabled && !this.isClicked) {\n            this.isUserInteracted = false;\n            this.micOn = true;\n            this.startSpeechRecognition();\n        }\n    };\n    /**\n     * Stops the audio capture process and finalizes the speech recognition.\n     * This method ends the ongoing speech-to-text operation and completes the recognition process, storing the final transcription.\n     * It is typically called to stop listening when the user is finished speaking.\n     *\n     * @returns {void} No return value.\n     */\n    SpeechToText.prototype.stopListening = function () {\n        if (!this.disabled && this.isClicked) {\n            this.isUserInteracted = false;\n            this.micOn = false;\n            this.stopSpeechRecognition();\n        }\n    };\n    /**\n     * Called if any of the property value is changed.\n     *\n     * @param  {SpeechToTextModel} newProp - Specifies new properties\n     * @param  {SpeechToTextModel} oldProp - Specifies old properties\n     * @returns {void}\n     * @private\n     */\n    SpeechToText.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'lang':\n                    if (this.recognition) {\n                        this.recognition.lang = this.lang;\n                    }\n                    break;\n                case 'allowInterimResults':\n                    if (this.recognition) {\n                        this.recognition.interimResults = this.allowInterimResults;\n                    }\n                    break;\n                case 'buttonSettings':\n                    this.buttonSettingsChanges(oldProp.buttonSettings, newProp.buttonSettings);\n                    break;\n                case 'cssClass':\n                    this.updateCssClass(newProp.cssClass, oldProp.cssClass);\n                    break;\n                case 'disabled':\n                    this.buttonInst.disabled = this.disabled;\n                    this.handleStateChange();\n                    break;\n                case 'htmlAttributes':\n                    this.removeHtmlAttributes(oldProp.htmlAttributes);\n                    this.addHtmlAttributes(newProp.htmlAttributes);\n                    break;\n                case 'listeningState':\n                    this.handleStateChange();\n                    break;\n                case 'tooltipSettings':\n                case 'showTooltip':\n                    this.updateTooltip();\n                    break;\n                case 'transcript':\n                    this.transcript = this.fullTranscript = newProp.transcript;\n                    break;\n                case 'enableRtl':\n                    this.buttonInst.enableRtl = this.tooltipInst.enableRtl = this.enableRtl;\n                    break;\n                case 'locale':\n                    this.l10n.setLocale(this.locale);\n                    this.updateAriaLabel();\n                    this.updateTooltip();\n                    break;\n            }\n        }\n    };\n    __decorate([\n        Property('')\n    ], SpeechToText.prototype, \"transcript\", void 0);\n    __decorate([\n        Property('')\n    ], SpeechToText.prototype, \"lang\", void 0);\n    __decorate([\n        Property(true)\n    ], SpeechToText.prototype, \"allowInterimResults\", void 0);\n    __decorate([\n        Property(true)\n    ], SpeechToText.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Property('Inactive')\n    ], SpeechToText.prototype, \"listeningState\", void 0);\n    __decorate([\n        Complex({}, ButtonSettings)\n    ], SpeechToText.prototype, \"buttonSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], SpeechToText.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], SpeechToText.prototype, \"disabled\", void 0);\n    __decorate([\n        Property('')\n    ], SpeechToText.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property({})\n    ], SpeechToText.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Event()\n    ], SpeechToText.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], SpeechToText.prototype, \"onStart\", void 0);\n    __decorate([\n        Event()\n    ], SpeechToText.prototype, \"onStop\", void 0);\n    __decorate([\n        Event()\n    ], SpeechToText.prototype, \"onError\", void 0);\n    __decorate([\n        Event()\n    ], SpeechToText.prototype, \"transcriptChanged\", void 0);\n    SpeechToText = __decorate([\n        NotifyPropertyChanges\n    ], SpeechToText);\n    return SpeechToText;\n}(Component));\nexport { SpeechToText };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}