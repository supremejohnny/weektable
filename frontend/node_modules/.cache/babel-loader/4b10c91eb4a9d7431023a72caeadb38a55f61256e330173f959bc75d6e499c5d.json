{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Event, EventHandler, L10n, setValue, getValue, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, detach, Internationalization, getUniqueID, closest } from '@syncfusion/ej2-base';\nimport { addClass, removeClass } from '@syncfusion/ej2-base';\nimport { Input, containerAttributes, TEXTBOX_FOCUS } from '../input/input';\nvar HIDE_CLEAR = 'e-clear-icon-hide';\n/**\n * Represents the TextBox component that allows the user to enter the values based on it's type.\n * ```html\n * <input name='images' id='textbox'/>\n * ```\n * ```typescript\n * <script>\n *   var textboxObj = new TextBox();\n *   textboxObj.appendTo('#textbox');\n * </script>\n * ```\n */\nvar TextBox = /** @class */function (_super) {\n  __extends(TextBox, _super);\n  /**\n   *\n   * @param {TextBoxModel} options - Specifies the TextBox model.\n   * @param {string | HTMLInputElement | HTMLTextAreaElement} element - Specifies the element to render as component.\n   * @private\n   */\n  function TextBox(options, element) {\n    var _this = _super.call(this, options, element) || this;\n    _this.previousValue = null;\n    _this.isHiddenInput = false;\n    _this.isForm = false;\n    _this.inputPreviousValue = null;\n    _this.textboxOptions = options;\n    return _this;\n  }\n  /**\n   * Calls internally if any of the property value is changed.\n   *\n   * @param {TextBoxModel} newProp - Returns the dynamic property value of the component.\n   * @param {TextBoxModel} oldProp - Returns the previous property value of the component.\n   * @returns {void}\n   * @private\n   */\n  TextBox.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'floatLabelType':\n          Input.removeFloating(this.textboxWrapper);\n          Input.addFloating(this.respectiveElement, this.floatLabelType, this.placeholder);\n          break;\n        case 'enabled':\n          Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n          this.bindClearEvent();\n          break;\n        case 'width':\n          Input.setWidth(newProp.width, this.textboxWrapper.container);\n          break;\n        case 'value':\n          {\n            var prevOnChange = this.isProtectedOnChange;\n            this.isProtectedOnChange = true;\n            if (!Input.isBlank(this.value)) {\n              this.value = this.value.toString();\n            }\n            this.isProtectedOnChange = prevOnChange;\n            Input.setValue(this.value, this.respectiveElement, this.floatLabelType, this.showClearButton);\n            if (this.isHiddenInput) {\n              this.element.value = this.respectiveElement.value;\n            }\n            this.inputPreviousValue = this.respectiveElement.value;\n            /* istanbul ignore next */\n            if ((this.isAngular || this.isVue) && this.preventChange === true) {\n              this.previousValue = this.isAngular ? this.value : this.previousValue;\n              this.preventChange = false;\n            } else if (isNullOrUndefined(this.isAngular) || !this.isAngular || this.isAngular && !this.preventChange || this.isAngular && isNullOrUndefined(this.preventChange)) {\n              this.raiseChangeEvent();\n            }\n          }\n          break;\n        case 'htmlAttributes':\n          {\n            this.updateHTMLAttributesToElement();\n            this.updateHTMLAttributesToWrapper();\n            this.checkAttributes(true);\n            if (this.multiline && !isNullOrUndefined(this.textarea)) {\n              Input.validateInputType(this.textboxWrapper.container, this.textarea);\n            } else {\n              Input.validateInputType(this.textboxWrapper.container, this.element);\n            }\n          }\n          break;\n        case 'readonly':\n          Input.setReadonly(this.readonly, this.respectiveElement);\n          break;\n        case 'type':\n          if (this.respectiveElement.tagName !== 'TEXTAREA') {\n            this.respectiveElement.setAttribute('type', this.type);\n            Input.validateInputType(this.textboxWrapper.container, this.element);\n            this.raiseChangeEvent();\n          }\n          break;\n        case 'showClearButton':\n          Input.setClearButton(this.showClearButton, this.respectiveElement, this.textboxWrapper);\n          this.bindClearEvent();\n          break;\n        case 'enableRtl':\n          Input.setEnableRtl(this.enableRtl, [this.textboxWrapper.container]);\n          break;\n        case 'placeholder':\n          Input.setPlaceholder(this.placeholder, this.respectiveElement);\n          Input.calculateWidth(this.respectiveElement, this.textboxWrapper.container);\n          break;\n        case 'autocomplete':\n          if (this.autocomplete !== 'on' && this.autocomplete !== '') {\n            this.respectiveElement.autocomplete = this.autocomplete;\n          } else {\n            this.removeAttributes(['autocomplete']);\n          }\n          break;\n        case 'cssClass':\n          Input.updateCssClass(newProp.cssClass, oldProp.cssClass, this.textboxWrapper.container);\n          break;\n        case 'locale':\n          this.globalize = new Internationalization(this.locale);\n          this.l10n.setLocale(this.locale);\n          this.setProperties({\n            placeholder: this.l10n.getConstant('placeholder')\n          }, true);\n          Input.setPlaceholder(this.placeholder, this.respectiveElement);\n          break;\n      }\n    }\n  };\n  /**\n   * Gets the component name\n   *\n   * @returns {string} Returns the component name.\n   * @private\n   */\n  TextBox.prototype.getModuleName = function () {\n    return 'textbox';\n  };\n  TextBox.prototype.preRender = function () {\n    this.cloneElement = this.element.cloneNode(true);\n    this.formElement = closest(this.element, 'form');\n    if (!isNullOrUndefined(this.formElement)) {\n      this.isForm = true;\n    }\n    /* istanbul ignore next */\n    if (this.element.tagName === 'EJS-TEXTBOX') {\n      var ejInstance = getValue('ej2_instances', this.element);\n      var inputElement = this.multiline ? this.createElement('textarea') : this.createElement('input');\n      var index = 0;\n      for (index; index < this.element.attributes.length; index++) {\n        var attributeName = this.element.attributes[index].nodeName;\n        if (attributeName !== 'id' && attributeName !== 'class') {\n          inputElement.setAttribute(attributeName, this.element.attributes[index].nodeValue);\n          inputElement.innerHTML = this.element.innerHTML;\n          if (attributeName === 'name') {\n            this.element.removeAttribute('name');\n          }\n        } else if (attributeName === 'class') {\n          inputElement.setAttribute(attributeName, this.element.className.split(' ').filter(function (item) {\n            return item.indexOf('ng-') !== 0;\n          }).join(' '));\n        }\n      }\n      this.element.appendChild(inputElement);\n      this.element = inputElement;\n      setValue('ej2_instances', ejInstance, this.element);\n    }\n    this.updateHTMLAttributesToElement();\n    this.checkAttributes(false);\n    if ((isNullOrUndefined(this.textboxOptions) || this.textboxOptions['value'] === undefined) && this.element.value !== '') {\n      this.setProperties({\n        value: this.element.value\n      }, true);\n    }\n    if (this.element.tagName !== 'TEXTAREA') {\n      this.element.setAttribute('type', this.type);\n    }\n    if (this.type === 'text' || this.element.tagName === 'INPUT' && this.multiline && this.isReact) {\n      this.element.setAttribute('role', 'textbox');\n    }\n    this.globalize = new Internationalization(this.locale);\n    var localeText = {\n      placeholder: this.placeholder\n    };\n    this.l10n = new L10n('textbox', localeText, this.locale);\n    if (this.l10n.getConstant('placeholder') !== '') {\n      this.setProperties({\n        placeholder: this.placeholder || this.l10n.getConstant('placeholder')\n      }, true);\n    }\n    if (!this.element.hasAttribute('id')) {\n      this.element.setAttribute('id', getUniqueID('textbox'));\n    }\n    if (!this.element.hasAttribute('name')) {\n      this.element.setAttribute('name', this.element.getAttribute('id'));\n    }\n    if (this.element.tagName === 'INPUT' && this.multiline) {\n      this.isHiddenInput = true;\n      this.textarea = this.createElement('textarea');\n      this.element.parentNode.insertBefore(this.textarea, this.element);\n      this.element.setAttribute('type', 'hidden');\n      this.textarea.setAttribute('name', this.element.getAttribute('name'));\n      this.element.removeAttribute('name');\n      this.textarea.setAttribute('role', this.element.getAttribute('role'));\n      this.element.removeAttribute('role');\n      this.textarea.setAttribute('id', getUniqueID('textarea'));\n      var apiAttributes = ['placeholder', 'disabled', 'value', 'readonly', 'type', 'autocomplete'];\n      for (var index = 0; index < this.element.attributes.length; index++) {\n        var attributeName = this.element.attributes[index].nodeName;\n        if (this.element.hasAttribute(attributeName) && containerAttributes.indexOf(attributeName) < 0 && !(attributeName === 'id' || attributeName === 'type' || attributeName === 'e-mappinguid')) {\n          // e-mappinguid attribute is handled for Grid component.\n          this.textarea.setAttribute(attributeName, this.element.attributes[index].nodeValue);\n          if (apiAttributes.indexOf(attributeName) < 0) {\n            this.element.removeAttribute(attributeName);\n            index--;\n          }\n        }\n      }\n    }\n  };\n  TextBox.prototype.checkAttributes = function (isDynamic) {\n    var attrs = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) : ['placeholder', 'disabled', 'value', 'readonly', 'type', 'autocomplete'];\n    for (var _i = 0, attrs_1 = attrs; _i < attrs_1.length; _i++) {\n      var key = attrs_1[_i];\n      if (!isNullOrUndefined(this.element.getAttribute(key))) {\n        switch (key) {\n          case 'disabled':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['enabled'] === undefined || isDynamic) {\n              var enabled = this.element.getAttribute(key) === 'disabled' || this.element.getAttribute(key) === '' || this.element.getAttribute(key) === 'true' ? false : true;\n              this.setProperties({\n                enabled: enabled\n              }, !isDynamic);\n            }\n            break;\n          case 'readonly':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['readonly'] === undefined || isDynamic) {\n              var readonly = this.element.getAttribute(key) === 'readonly' || this.element.getAttribute(key) === '' || this.element.getAttribute(key) === 'true' ? true : false;\n              this.setProperties({\n                readonly: readonly\n              }, !isDynamic);\n            }\n            break;\n          case 'placeholder':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['placeholder'] === undefined || isDynamic) {\n              this.setProperties({\n                placeholder: this.element.placeholder\n              }, !isDynamic);\n            }\n            break;\n          case 'autocomplete':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['autocomplete'] === undefined || isDynamic) {\n              var autoCompleteTxt = this.element.autocomplete === 'off' ? 'off' : 'on';\n              this.setProperties({\n                autocomplete: autoCompleteTxt\n              }, !isDynamic);\n            }\n            break;\n          case 'value':\n            if ((isNullOrUndefined(this.textboxOptions) || this.textboxOptions['value'] === undefined || isDynamic) && this.element.value !== '') {\n              this.setProperties({\n                value: this.element.value\n              }, !isDynamic);\n            }\n            break;\n          case 'type':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['type'] === undefined || isDynamic) {\n              this.setProperties({\n                type: this.element.type\n              }, !isDynamic);\n            }\n            break;\n        }\n      }\n    }\n  };\n  /**\n   * To Initialize the control rendering\n   *\n   * @returns {void}\n   * @private\n   */\n  TextBox.prototype.render = function () {\n    var updatedCssClassValue = this.cssClass;\n    if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n      updatedCssClassValue = Input.getInputValidClassList(this.cssClass);\n    }\n    this.respectiveElement = this.isHiddenInput ? this.textarea : this.element;\n    this.textboxWrapper = Input.createInput({\n      element: this.respectiveElement,\n      floatLabelType: this.floatLabelType,\n      properties: {\n        enabled: this.enabled,\n        enableRtl: this.enableRtl,\n        cssClass: updatedCssClassValue,\n        readonly: this.readonly,\n        placeholder: this.placeholder,\n        showClearButton: this.showClearButton\n      }\n    });\n    this.updateHTMLAttributesToWrapper();\n    if (this.isHiddenInput) {\n      this.respectiveElement.parentNode.insertBefore(this.element, this.respectiveElement);\n    }\n    this.wireEvents();\n    if (!isNullOrUndefined(this.value)) {\n      Input.setValue(this.value, this.respectiveElement, this.floatLabelType, this.showClearButton);\n      if (this.isHiddenInput) {\n        this.element.value = this.respectiveElement.value;\n      }\n    }\n    if (!isNullOrUndefined(this.value)) {\n      this.initialValue = this.value;\n      this.setInitialValue();\n    }\n    if (this.autocomplete !== 'on' && this.autocomplete !== '') {\n      this.respectiveElement.autocomplete = this.autocomplete;\n    } else if (!isNullOrUndefined(this.textboxOptions) && this.textboxOptions['autocomplete'] !== undefined) {\n      this.removeAttributes(['autocomplete']);\n    }\n    this.previousValue = this.value;\n    this.inputPreviousValue = this.value;\n    this.respectiveElement.defaultValue = this.respectiveElement.value;\n    Input.setWidth(this.width, this.textboxWrapper.container);\n    if (!isNullOrUndefined(closest(this.element, 'fieldset')) && closest(this.element, 'fieldset').disabled) {\n      this.enabled = false;\n    }\n    if (!this.element.hasAttribute('aria-labelledby') && !this.element.hasAttribute('placeholder') && !this.element.hasAttribute('aria-label')) {\n      this.element.setAttribute('aria-label', 'textbox');\n    }\n    this.renderComplete();\n  };\n  TextBox.prototype.updateHTMLAttributesToWrapper = function () {\n    Input.updateHTMLAttributesToWrapper(this.htmlAttributes, this.textboxWrapper.container);\n  };\n  TextBox.prototype.updateHTMLAttributesToElement = function () {\n    Input.updateHTMLAttributesToElement(this.htmlAttributes, this.respectiveElement ? this.respectiveElement : this.multiline && !isNullOrUndefined(this.textarea) ? this.textarea : this.element);\n  };\n  TextBox.prototype.setInitialValue = function () {\n    if (!this.isAngular) {\n      this.respectiveElement.setAttribute('value', this.initialValue);\n    }\n  };\n  TextBox.prototype.wireEvents = function () {\n    EventHandler.add(this.respectiveElement, 'focus', this.focusHandler, this);\n    EventHandler.add(this.respectiveElement, 'blur', this.focusOutHandler, this);\n    EventHandler.add(this.respectiveElement, 'keydown', this.keydownHandler, this);\n    EventHandler.add(this.respectiveElement, 'input', this.inputHandler, this);\n    EventHandler.add(this.respectiveElement, 'change', this.changeHandler, this);\n    if (this.isForm) {\n      EventHandler.add(this.formElement, 'reset', this.resetForm, this);\n    }\n    this.bindClearEvent();\n    if (!isNullOrUndefined(this.textboxWrapper.container.querySelector('.e-float-text')) && this.floatLabelType === 'Auto' && this.textboxWrapper.container.classList.contains('e-autofill') && this.textboxWrapper.container.classList.contains('e-outline')) {\n      EventHandler.add(this.textboxWrapper.container.querySelector('.e-float-text'), 'animationstart', this.animationHandler, this);\n    }\n  };\n  TextBox.prototype.animationHandler = function () {\n    this.textboxWrapper.container.classList.add('e-valid-input');\n    var label = this.textboxWrapper.container.querySelector('.e-float-text');\n    if (!isNullOrUndefined(label)) {\n      label.classList.add('e-label-top');\n      if (label.classList.contains('e-label-bottom')) {\n        label.classList.remove('e-label-bottom');\n      }\n    }\n  };\n  TextBox.prototype.resetValue = function (value) {\n    var prevOnChange = this.isProtectedOnChange;\n    this.isProtectedOnChange = true;\n    this.value = value;\n    if (value == null && this.textboxWrapper.container.classList.contains('e-valid-input') && !(this.floatLabelType === 'Always' && this.textboxWrapper.container.classList.contains('e-outline'))) {\n      this.textboxWrapper.container.classList.remove('e-valid-input');\n    }\n    this.isProtectedOnChange = prevOnChange;\n  };\n  TextBox.prototype.resetForm = function () {\n    if (this.isAngular) {\n      this.resetValue('');\n    } else {\n      this.resetValue(this.initialValue);\n    }\n    if (!isNullOrUndefined(this.textboxWrapper)) {\n      var label = this.textboxWrapper.container.querySelector('.e-float-text');\n      if (!isNullOrUndefined(label) && this.floatLabelType !== 'Always') {\n        if (isNullOrUndefined(this.initialValue) || this.initialValue === '') {\n          label.classList.add('e-label-bottom');\n          label.classList.remove('e-label-top');\n        } else if (this.initialValue !== '') {\n          label.classList.add('e-label-top');\n          label.classList.remove('e-label-bottom');\n        }\n      }\n    }\n  };\n  TextBox.prototype.focusHandler = function (args) {\n    var eventArgs = {\n      container: this.textboxWrapper.container,\n      event: args,\n      value: this.value\n    };\n    this.trigger('focus', eventArgs);\n  };\n  TextBox.prototype.focusOutHandler = function (args) {\n    if (!(this.previousValue === null && this.value === null && this.respectiveElement.value === '') && this.previousValue !== this.value) {\n      this.raiseChangeEvent(args, true);\n    }\n    var eventArgs = {\n      container: this.textboxWrapper.container,\n      event: args,\n      value: this.value\n    };\n    this.trigger('blur', eventArgs);\n  };\n  TextBox.prototype.keydownHandler = function (args) {\n    if ((args.keyCode === 13 || args.keyCode === 9) && !((this.previousValue === null || this.previousValue === '') && (this.value === null || this.value === '') && this.respectiveElement.value === '')) {\n      this.setProperties({\n        value: this.respectiveElement.value\n      }, true);\n    }\n  };\n  TextBox.prototype.inputHandler = function (args) {\n    var textboxObj = null || this;\n    var eventArgs = {\n      event: args,\n      value: this.respectiveElement.value,\n      previousValue: this.inputPreviousValue,\n      container: this.textboxWrapper.container\n    };\n    this.inputPreviousValue = this.respectiveElement.value;\n    /* istanbul ignore next */\n    if (this.isAngular) {\n      textboxObj.localChange({\n        value: this.respectiveElement.value\n      });\n      this.preventChange = true;\n    }\n    if (this.isVue) {\n      this.preventChange = true;\n    }\n    this.trigger('input', eventArgs);\n    args.stopPropagation();\n  };\n  TextBox.prototype.changeHandler = function (args) {\n    this.setProperties({\n      value: this.respectiveElement.value\n    }, true);\n    if (this.previousValue !== this.value) {\n      this.raiseChangeEvent(args, true);\n    }\n    args.stopPropagation();\n  };\n  TextBox.prototype.raiseChangeEvent = function (event, interaction) {\n    var eventArgs = {\n      event: event,\n      value: this.value,\n      previousValue: this.previousValue,\n      container: this.textboxWrapper.container,\n      isInteraction: interaction ? interaction : false,\n      isInteracted: interaction ? interaction : false\n    };\n    this.preventChange = false;\n    this.trigger('change', eventArgs);\n    this.previousValue = this.value;\n    //EJ2CORE-738:For this task we update the textarea value to the input when input tag with multiline is present\n    if (this.element.tagName === 'INPUT' && this.multiline && Browser.info.name === 'mozilla') {\n      this.element.value = this.respectiveElement.value;\n    }\n  };\n  TextBox.prototype.bindClearEvent = function () {\n    if (this.showClearButton) {\n      if (this.enabled) {\n        EventHandler.add(this.textboxWrapper.clearButton, 'mousedown touchstart', this.resetInputHandler, this);\n      } else {\n        EventHandler.remove(this.textboxWrapper.clearButton, 'mousedown touchstart', this.resetInputHandler);\n      }\n    }\n  };\n  TextBox.prototype.resetInputHandler = function (event) {\n    event.preventDefault();\n    if (!this.textboxWrapper.clearButton.classList.contains(HIDE_CLEAR) || this.textboxWrapper.container.classList.contains('e-static-clear')) {\n      Input.setValue('', this.respectiveElement, this.floatLabelType, this.showClearButton);\n      if (this.isHiddenInput) {\n        this.element.value = this.respectiveElement.value;\n      }\n      this.setProperties({\n        value: this.respectiveElement.value\n      }, true);\n      var eventArgs = {\n        event: event,\n        value: this.respectiveElement.value,\n        previousValue: this.inputPreviousValue,\n        container: this.textboxWrapper.container\n      };\n      this.trigger('input', eventArgs);\n      this.inputPreviousValue = this.respectiveElement.value;\n      this.raiseChangeEvent(event, true);\n      if (closest(this.element, 'form')) {\n        var element = this.element;\n        var keyupEvent = document.createEvent('KeyboardEvent');\n        keyupEvent.initEvent('keyup', false, true);\n        element.dispatchEvent(keyupEvent);\n      }\n    }\n  };\n  TextBox.prototype.unWireEvents = function () {\n    EventHandler.remove(this.respectiveElement, 'focus', this.focusHandler);\n    EventHandler.remove(this.respectiveElement, 'blur', this.focusOutHandler);\n    EventHandler.remove(this.respectiveElement, 'keydown', this.keydownHandler);\n    EventHandler.remove(this.respectiveElement, 'input', this.inputHandler);\n    EventHandler.remove(this.respectiveElement, 'change', this.changeHandler);\n    if (this.isForm) {\n      EventHandler.remove(this.formElement, 'reset', this.resetForm);\n    }\n    if (!isNullOrUndefined(this.textboxWrapper.container.querySelector('.e-float-text')) && this.floatLabelType === 'Auto' && this.textboxWrapper.container.classList.contains('e-outline') && this.textboxWrapper.container.classList.contains('e-autofill')) {\n      EventHandler.remove(this.textboxWrapper.container.querySelector('.e-float-text'), 'animationstart', this.animationHandler);\n    }\n  };\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers.\n   * Also, it maintains the initial TextBox element from the DOM.\n   *\n   * @method destroy\n   * @returns {void}\n   */\n  TextBox.prototype.destroy = function () {\n    this.unWireEvents();\n    if (this.showClearButton) {\n      this.clearButton = document.getElementsByClassName('e-clear-icon')[0];\n    }\n    if (this.element.tagName === 'INPUT' && this.multiline) {\n      detach(this.textboxWrapper.container.getElementsByTagName('textarea')[0]);\n      this.respectiveElement = this.element;\n      this.element.removeAttribute('type');\n    }\n    this.respectiveElement.value = this.respectiveElement.defaultValue;\n    this.respectiveElement.classList.remove('e-input');\n    this.removeAttributes(['aria-disabled', 'aria-readonly', 'aria-labelledby']);\n    if (!isNullOrUndefined(this.textboxWrapper)) {\n      this.textboxWrapper.container.insertAdjacentElement('afterend', this.respectiveElement);\n      detach(this.textboxWrapper.container);\n    }\n    this.textboxWrapper = null;\n    Input.destroy({\n      element: this.respectiveElement,\n      floatLabelType: this.floatLabelType,\n      properties: this.properties\n    }, this.clearButton);\n    _super.prototype.destroy.call(this);\n  };\n  /**\n   * Adding the icons to the TextBox component.\n   *\n   * @param { string } position - Specify the icon placement on the TextBox. Possible values are append and prepend.\n   * @param { string | string[] } icons - Icon classes which are need to add to the span element which is going to created.\n   * Span element acts as icon or button element for TextBox.\n   * @returns {void}\n   */\n  TextBox.prototype.addIcon = function (position, icons) {\n    Input.addIcon(position, icons, this.textboxWrapper.container, this.respectiveElement, this.createElement);\n  };\n  /**\n   * Gets the properties to be maintained in the persisted state.\n   *\n   * @returns {string} Returns the persisted data.\n   */\n  TextBox.prototype.getPersistData = function () {\n    var keyEntity = ['value'];\n    return this.addOnPersist(keyEntity);\n  };\n  /**\n   * Adding the multiple attributes as key-value pair to the TextBox element.\n   *\n   * @param {string} attributes - Specifies the attributes to be add to TextBox element.\n   * @returns {void}\n   */\n  TextBox.prototype.addAttributes = function (attributes) {\n    for (var _i = 0, _a = Object.keys(attributes); _i < _a.length; _i++) {\n      var key = _a[_i];\n      if (key === 'disabled') {\n        this.setProperties({\n          enabled: false\n        }, true);\n        Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n      } else if (key === 'readonly') {\n        this.setProperties({\n          readonly: true\n        }, true);\n        Input.setReadonly(this.readonly, this.respectiveElement);\n      } else if (key === 'class') {\n        this.respectiveElement.classList.add(attributes[\"\" + key]);\n      } else if (key === 'placeholder') {\n        this.setProperties({\n          placeholder: attributes[\"\" + key]\n        }, true);\n        Input.setPlaceholder(this.placeholder, this.respectiveElement);\n      } else if (key === 'rows' && this.respectiveElement.tagName === 'TEXTAREA') {\n        this.respectiveElement.setAttribute(key, attributes[\"\" + key]);\n      } else {\n        this.respectiveElement.setAttribute(key, attributes[\"\" + key]);\n      }\n    }\n  };\n  /**\n   * Removing the multiple attributes as key-value pair to the TextBox element.\n   *\n   * @param { string[] } attributes - Specifies the attributes name to be removed from TextBox element.\n   * @returns {void}\n   */\n  TextBox.prototype.removeAttributes = function (attributes) {\n    for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n      var key = attributes_1[_i];\n      if (key === 'disabled') {\n        this.setProperties({\n          enabled: true\n        }, true);\n        Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n      } else if (key === 'readonly') {\n        this.setProperties({\n          readonly: false\n        }, true);\n        Input.setReadonly(this.readonly, this.respectiveElement);\n      } else if (key === 'placeholder') {\n        this.setProperties({\n          placeholder: null\n        }, true);\n        Input.setPlaceholder(this.placeholder, this.respectiveElement);\n      } else {\n        this.respectiveElement.removeAttribute(key);\n      }\n    }\n  };\n  /**\n   * Sets the focus to widget for interaction.\n   *\n   * @returns {void}\n   */\n  TextBox.prototype.focusIn = function () {\n    if (document.activeElement !== this.respectiveElement && this.enabled) {\n      this.respectiveElement.focus();\n      if (this.textboxWrapper.container.classList.contains('e-input-group') || this.textboxWrapper.container.classList.contains('e-outline') || this.textboxWrapper.container.classList.contains('e-filled')) {\n        addClass([this.textboxWrapper.container], [TEXTBOX_FOCUS]);\n      }\n    }\n  };\n  /**\n   * Remove the focus from widget, if the widget is in focus state.\n   *\n   * @returns {void}\n   */\n  TextBox.prototype.focusOut = function () {\n    if (document.activeElement === this.respectiveElement && this.enabled) {\n      this.respectiveElement.blur();\n      if (this.textboxWrapper.container.classList.contains('e-input-group') || this.textboxWrapper.container.classList.contains('e-outline') || this.textboxWrapper.container.classList.contains('e-filled')) {\n        removeClass([this.textboxWrapper.container], [TEXTBOX_FOCUS]);\n      }\n    }\n  };\n  __decorate([Property('text')], TextBox.prototype, \"type\", void 0);\n  __decorate([Property(false)], TextBox.prototype, \"readonly\", void 0);\n  __decorate([Property(null)], TextBox.prototype, \"value\", void 0);\n  __decorate([Property('Never')], TextBox.prototype, \"floatLabelType\", void 0);\n  __decorate([Property('')], TextBox.prototype, \"cssClass\", void 0);\n  __decorate([Property(null)], TextBox.prototype, \"placeholder\", void 0);\n  __decorate([Property('on')], TextBox.prototype, \"autocomplete\", void 0);\n  __decorate([Property({})], TextBox.prototype, \"htmlAttributes\", void 0);\n  __decorate([Property(false)], TextBox.prototype, \"multiline\", void 0);\n  __decorate([Property(true)], TextBox.prototype, \"enabled\", void 0);\n  __decorate([Property(false)], TextBox.prototype, \"showClearButton\", void 0);\n  __decorate([Property(false)], TextBox.prototype, \"enablePersistence\", void 0);\n  __decorate([Property(null)], TextBox.prototype, \"width\", void 0);\n  __decorate([Event()], TextBox.prototype, \"created\", void 0);\n  __decorate([Event()], TextBox.prototype, \"destroyed\", void 0);\n  __decorate([Event()], TextBox.prototype, \"change\", void 0);\n  __decorate([Event()], TextBox.prototype, \"blur\", void 0);\n  __decorate([Event()], TextBox.prototype, \"focus\", void 0);\n  __decorate([Event()], TextBox.prototype, \"input\", void 0);\n  TextBox = __decorate([NotifyPropertyChanges], TextBox);\n  return TextBox;\n}(Component);\nexport { TextBox };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","Event","EventHandler","L10n","setValue","getValue","isNullOrUndefined","Browser","NotifyPropertyChanges","detach","Internationalization","getUniqueID","closest","addClass","removeClass","Input","containerAttributes","TEXTBOX_FOCUS","HIDE_CLEAR","TextBox","_super","options","element","_this","call","previousValue","isHiddenInput","isForm","inputPreviousValue","textboxOptions","onPropertyChanged","newProp","oldProp","_i","_a","keys","prop","removeFloating","textboxWrapper","addFloating","respectiveElement","floatLabelType","placeholder","setEnabled","enabled","container","bindClearEvent","setWidth","width","prevOnChange","isProtectedOnChange","isBlank","value","toString","showClearButton","isAngular","isVue","preventChange","raiseChangeEvent","updateHTMLAttributesToElement","updateHTMLAttributesToWrapper","checkAttributes","multiline","textarea","validateInputType","setReadonly","readonly","tagName","setAttribute","type","setClearButton","setEnableRtl","enableRtl","setPlaceholder","calculateWidth","autocomplete","removeAttributes","updateCssClass","cssClass","globalize","locale","l10n","setLocale","setProperties","getConstant","getModuleName","preRender","cloneElement","cloneNode","formElement","ejInstance","inputElement","createElement","index","attributes","attributeName","nodeName","nodeValue","innerHTML","removeAttribute","className","split","filter","item","indexOf","join","appendChild","undefined","isReact","localeText","hasAttribute","getAttribute","parentNode","insertBefore","apiAttributes","isDynamic","attrs","htmlAttributes","attrs_1","autoCompleteTxt","render","updatedCssClassValue","getInputValidClassList","createInput","properties","wireEvents","initialValue","setInitialValue","defaultValue","disabled","renderComplete","add","focusHandler","focusOutHandler","keydownHandler","inputHandler","changeHandler","resetForm","querySelector","classList","contains","animationHandler","label","remove","resetValue","args","eventArgs","event","trigger","keyCode","textboxObj","localChange","stopPropagation","interaction","isInteraction","isInteracted","info","name","clearButton","resetInputHandler","preventDefault","keyupEvent","document","createEvent","initEvent","dispatchEvent","unWireEvents","destroy","getElementsByClassName","getElementsByTagName","insertAdjacentElement","addIcon","position","icons","getPersistData","keyEntity","addOnPersist","addAttributes","attributes_1","focusIn","activeElement","focus","focusOut","blur"],"sources":["D:/weektable/frontend/node_modules/@syncfusion/ej2-inputs/src/textbox/textbox.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Event, EventHandler, L10n, setValue, getValue, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, detach, Internationalization, getUniqueID, closest } from '@syncfusion/ej2-base';\nimport { addClass, removeClass } from '@syncfusion/ej2-base';\nimport { Input, containerAttributes, TEXTBOX_FOCUS } from '../input/input';\nvar HIDE_CLEAR = 'e-clear-icon-hide';\n/**\n * Represents the TextBox component that allows the user to enter the values based on it's type.\n * ```html\n * <input name='images' id='textbox'/>\n * ```\n * ```typescript\n * <script>\n *   var textboxObj = new TextBox();\n *   textboxObj.appendTo('#textbox');\n * </script>\n * ```\n */\nvar TextBox = /** @class */ (function (_super) {\n    __extends(TextBox, _super);\n    /**\n     *\n     * @param {TextBoxModel} options - Specifies the TextBox model.\n     * @param {string | HTMLInputElement | HTMLTextAreaElement} element - Specifies the element to render as component.\n     * @private\n     */\n    function TextBox(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.previousValue = null;\n        _this.isHiddenInput = false;\n        _this.isForm = false;\n        _this.inputPreviousValue = null;\n        _this.textboxOptions = options;\n        return _this;\n    }\n    /**\n     * Calls internally if any of the property value is changed.\n     *\n     * @param {TextBoxModel} newProp - Returns the dynamic property value of the component.\n     * @param {TextBoxModel} oldProp - Returns the previous property value of the component.\n     * @returns {void}\n     * @private\n     */\n    TextBox.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'floatLabelType':\n                    Input.removeFloating(this.textboxWrapper);\n                    Input.addFloating(this.respectiveElement, this.floatLabelType, this.placeholder);\n                    break;\n                case 'enabled':\n                    Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n                    this.bindClearEvent();\n                    break;\n                case 'width':\n                    Input.setWidth(newProp.width, this.textboxWrapper.container);\n                    break;\n                case 'value':\n                    {\n                        var prevOnChange = this.isProtectedOnChange;\n                        this.isProtectedOnChange = true;\n                        if (!Input.isBlank(this.value)) {\n                            this.value = this.value.toString();\n                        }\n                        this.isProtectedOnChange = prevOnChange;\n                        Input.setValue(this.value, this.respectiveElement, this.floatLabelType, this.showClearButton);\n                        if (this.isHiddenInput) {\n                            this.element.value = this.respectiveElement.value;\n                        }\n                        this.inputPreviousValue = this.respectiveElement.value;\n                        /* istanbul ignore next */\n                        if ((this.isAngular || this.isVue) && this.preventChange === true) {\n                            this.previousValue = this.isAngular ? this.value : this.previousValue;\n                            this.preventChange = false;\n                        }\n                        else if (isNullOrUndefined(this.isAngular) || !this.isAngular\n                            || (this.isAngular && !this.preventChange) || (this.isAngular && isNullOrUndefined(this.preventChange))) {\n                            this.raiseChangeEvent();\n                        }\n                    }\n                    break;\n                case 'htmlAttributes':\n                    {\n                        this.updateHTMLAttributesToElement();\n                        this.updateHTMLAttributesToWrapper();\n                        this.checkAttributes(true);\n                        if (this.multiline && !isNullOrUndefined(this.textarea)) {\n                            Input.validateInputType(this.textboxWrapper.container, this.textarea);\n                        }\n                        else {\n                            Input.validateInputType(this.textboxWrapper.container, this.element);\n                        }\n                    }\n                    break;\n                case 'readonly':\n                    Input.setReadonly(this.readonly, this.respectiveElement);\n                    break;\n                case 'type':\n                    if (this.respectiveElement.tagName !== 'TEXTAREA') {\n                        this.respectiveElement.setAttribute('type', this.type);\n                        Input.validateInputType(this.textboxWrapper.container, this.element);\n                        this.raiseChangeEvent();\n                    }\n                    break;\n                case 'showClearButton':\n                    Input.setClearButton(this.showClearButton, this.respectiveElement, this.textboxWrapper);\n                    this.bindClearEvent();\n                    break;\n                case 'enableRtl':\n                    Input.setEnableRtl(this.enableRtl, [this.textboxWrapper.container]);\n                    break;\n                case 'placeholder':\n                    Input.setPlaceholder(this.placeholder, this.respectiveElement);\n                    Input.calculateWidth(this.respectiveElement, this.textboxWrapper.container);\n                    break;\n                case 'autocomplete':\n                    if (this.autocomplete !== 'on' && this.autocomplete !== '') {\n                        this.respectiveElement.autocomplete = this.autocomplete;\n                    }\n                    else {\n                        this.removeAttributes(['autocomplete']);\n                    }\n                    break;\n                case 'cssClass':\n                    Input.updateCssClass(newProp.cssClass, oldProp.cssClass, this.textboxWrapper.container);\n                    break;\n                case 'locale':\n                    this.globalize = new Internationalization(this.locale);\n                    this.l10n.setLocale(this.locale);\n                    this.setProperties({ placeholder: this.l10n.getConstant('placeholder') }, true);\n                    Input.setPlaceholder(this.placeholder, this.respectiveElement);\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the component name\n     *\n     * @returns {string} Returns the component name.\n     * @private\n     */\n    TextBox.prototype.getModuleName = function () {\n        return 'textbox';\n    };\n    TextBox.prototype.preRender = function () {\n        this.cloneElement = this.element.cloneNode(true);\n        this.formElement = closest(this.element, 'form');\n        if (!isNullOrUndefined(this.formElement)) {\n            this.isForm = true;\n        }\n        /* istanbul ignore next */\n        if (this.element.tagName === 'EJS-TEXTBOX') {\n            var ejInstance = getValue('ej2_instances', this.element);\n            var inputElement = this.multiline ?\n                this.createElement('textarea') :\n                this.createElement('input');\n            var index = 0;\n            for (index; index < this.element.attributes.length; index++) {\n                var attributeName = this.element.attributes[index].nodeName;\n                if (attributeName !== 'id' && attributeName !== 'class') {\n                    inputElement.setAttribute(attributeName, this.element.attributes[index].nodeValue);\n                    inputElement.innerHTML = this.element.innerHTML;\n                    if (attributeName === 'name') {\n                        this.element.removeAttribute('name');\n                    }\n                }\n                else if (attributeName === 'class') {\n                    inputElement.setAttribute(attributeName, this.element.className.split(' ').filter(function (item) { return item.indexOf('ng-') !== 0; }).join(' '));\n                }\n            }\n            this.element.appendChild(inputElement);\n            this.element = inputElement;\n            setValue('ej2_instances', ejInstance, this.element);\n        }\n        this.updateHTMLAttributesToElement();\n        this.checkAttributes(false);\n        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['value'] === undefined)) && this.element.value !== '') {\n            this.setProperties({ value: this.element.value }, true);\n        }\n        if (this.element.tagName !== 'TEXTAREA') {\n            this.element.setAttribute('type', this.type);\n        }\n        if (this.type === 'text' || (this.element.tagName === 'INPUT' && this.multiline && this.isReact)) {\n            this.element.setAttribute('role', 'textbox');\n        }\n        this.globalize = new Internationalization(this.locale);\n        var localeText = { placeholder: this.placeholder };\n        this.l10n = new L10n('textbox', localeText, this.locale);\n        if (this.l10n.getConstant('placeholder') !== '') {\n            this.setProperties({ placeholder: this.placeholder || this.l10n.getConstant('placeholder') }, true);\n        }\n        if (!this.element.hasAttribute('id')) {\n            this.element.setAttribute('id', getUniqueID('textbox'));\n        }\n        if (!this.element.hasAttribute('name')) {\n            this.element.setAttribute('name', this.element.getAttribute('id'));\n        }\n        if (this.element.tagName === 'INPUT' && this.multiline) {\n            this.isHiddenInput = true;\n            this.textarea = this.createElement('textarea');\n            this.element.parentNode.insertBefore(this.textarea, this.element);\n            this.element.setAttribute('type', 'hidden');\n            this.textarea.setAttribute('name', this.element.getAttribute('name'));\n            this.element.removeAttribute('name');\n            this.textarea.setAttribute('role', this.element.getAttribute('role'));\n            this.element.removeAttribute('role');\n            this.textarea.setAttribute('id', getUniqueID('textarea'));\n            var apiAttributes = ['placeholder', 'disabled', 'value', 'readonly', 'type', 'autocomplete'];\n            for (var index = 0; index < this.element.attributes.length; index++) {\n                var attributeName = this.element.attributes[index].nodeName;\n                if (this.element.hasAttribute(attributeName) && containerAttributes.indexOf(attributeName) < 0 &&\n                    !(attributeName === 'id' || attributeName === 'type' || attributeName === 'e-mappinguid')) {\n                    // e-mappinguid attribute is handled for Grid component.\n                    this.textarea.setAttribute(attributeName, this.element.attributes[index].nodeValue);\n                    if (apiAttributes.indexOf(attributeName) < 0) {\n                        this.element.removeAttribute(attributeName);\n                        index--;\n                    }\n                }\n            }\n        }\n    };\n    TextBox.prototype.checkAttributes = function (isDynamic) {\n        var attrs = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) :\n            ['placeholder', 'disabled', 'value', 'readonly', 'type', 'autocomplete'];\n        for (var _i = 0, attrs_1 = attrs; _i < attrs_1.length; _i++) {\n            var key = attrs_1[_i];\n            if (!isNullOrUndefined(this.element.getAttribute(key))) {\n                switch (key) {\n                    case 'disabled':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['enabled'] === undefined)) || isDynamic) {\n                            var enabled = this.element.getAttribute(key) === 'disabled' || this.element.getAttribute(key) === '' ||\n                                this.element.getAttribute(key) === 'true' ? false : true;\n                            this.setProperties({ enabled: enabled }, !isDynamic);\n                        }\n                        break;\n                    case 'readonly':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['readonly'] === undefined)) || isDynamic) {\n                            var readonly = this.element.getAttribute(key) === 'readonly' || this.element.getAttribute(key) === ''\n                                || this.element.getAttribute(key) === 'true' ? true : false;\n                            this.setProperties({ readonly: readonly }, !isDynamic);\n                        }\n                        break;\n                    case 'placeholder':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['placeholder'] === undefined)) || isDynamic) {\n                            this.setProperties({ placeholder: this.element.placeholder }, !isDynamic);\n                        }\n                        break;\n                    case 'autocomplete':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['autocomplete'] === undefined)) || isDynamic) {\n                            var autoCompleteTxt = this.element.autocomplete === 'off' ? 'off' : 'on';\n                            this.setProperties({ autocomplete: autoCompleteTxt }, !isDynamic);\n                        }\n                        break;\n                    case 'value':\n                        if (((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['value'] === undefined)) || isDynamic) && this.element.value !== '') {\n                            this.setProperties({ value: this.element.value }, !isDynamic);\n                        }\n                        break;\n                    case 'type':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['type'] === undefined)) || isDynamic) {\n                            this.setProperties({ type: this.element.type }, !isDynamic);\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    TextBox.prototype.render = function () {\n        var updatedCssClassValue = this.cssClass;\n        if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n            updatedCssClassValue = Input.getInputValidClassList(this.cssClass);\n        }\n        this.respectiveElement = (this.isHiddenInput) ? this.textarea : this.element;\n        this.textboxWrapper = Input.createInput({\n            element: this.respectiveElement,\n            floatLabelType: this.floatLabelType,\n            properties: {\n                enabled: this.enabled,\n                enableRtl: this.enableRtl,\n                cssClass: updatedCssClassValue,\n                readonly: this.readonly,\n                placeholder: this.placeholder,\n                showClearButton: this.showClearButton\n            }\n        });\n        this.updateHTMLAttributesToWrapper();\n        if (this.isHiddenInput) {\n            this.respectiveElement.parentNode.insertBefore(this.element, this.respectiveElement);\n        }\n        this.wireEvents();\n        if (!isNullOrUndefined(this.value)) {\n            Input.setValue(this.value, this.respectiveElement, this.floatLabelType, this.showClearButton);\n            if (this.isHiddenInput) {\n                this.element.value = this.respectiveElement.value;\n            }\n        }\n        if (!isNullOrUndefined(this.value)) {\n            this.initialValue = this.value;\n            this.setInitialValue();\n        }\n        if (this.autocomplete !== 'on' && this.autocomplete !== '') {\n            this.respectiveElement.autocomplete = this.autocomplete;\n        }\n        else if (!isNullOrUndefined(this.textboxOptions) && (this.textboxOptions['autocomplete'] !== undefined)) {\n            this.removeAttributes(['autocomplete']);\n        }\n        this.previousValue = this.value;\n        this.inputPreviousValue = this.value;\n        this.respectiveElement.defaultValue = this.respectiveElement.value;\n        Input.setWidth(this.width, this.textboxWrapper.container);\n        if (!isNullOrUndefined(closest(this.element, 'fieldset')) && closest(this.element, 'fieldset').disabled) {\n            this.enabled = false;\n        }\n        if (!this.element.hasAttribute('aria-labelledby') && !this.element.hasAttribute('placeholder') && !this.element.hasAttribute('aria-label')) {\n            this.element.setAttribute('aria-label', 'textbox');\n        }\n        this.renderComplete();\n    };\n    TextBox.prototype.updateHTMLAttributesToWrapper = function () {\n        Input.updateHTMLAttributesToWrapper(this.htmlAttributes, this.textboxWrapper.container);\n    };\n    TextBox.prototype.updateHTMLAttributesToElement = function () {\n        Input.updateHTMLAttributesToElement(this.htmlAttributes, this.respectiveElement ? this.respectiveElement :\n            (this.multiline && !isNullOrUndefined(this.textarea) ? this.textarea : this.element));\n    };\n    TextBox.prototype.setInitialValue = function () {\n        if (!this.isAngular) {\n            this.respectiveElement.setAttribute('value', this.initialValue);\n        }\n    };\n    TextBox.prototype.wireEvents = function () {\n        EventHandler.add(this.respectiveElement, 'focus', this.focusHandler, this);\n        EventHandler.add(this.respectiveElement, 'blur', this.focusOutHandler, this);\n        EventHandler.add(this.respectiveElement, 'keydown', this.keydownHandler, this);\n        EventHandler.add(this.respectiveElement, 'input', this.inputHandler, this);\n        EventHandler.add(this.respectiveElement, 'change', this.changeHandler, this);\n        if (this.isForm) {\n            EventHandler.add(this.formElement, 'reset', this.resetForm, this);\n        }\n        this.bindClearEvent();\n        if (!isNullOrUndefined(this.textboxWrapper.container.querySelector('.e-float-text')) && this.floatLabelType === 'Auto'\n            && this.textboxWrapper.container.classList.contains('e-autofill') &&\n            this.textboxWrapper.container.classList.contains('e-outline')) {\n            EventHandler.add((this.textboxWrapper.container.querySelector('.e-float-text')), 'animationstart', this.animationHandler, this);\n        }\n    };\n    TextBox.prototype.animationHandler = function () {\n        this.textboxWrapper.container.classList.add('e-valid-input');\n        var label = this.textboxWrapper.container.querySelector('.e-float-text');\n        if (!isNullOrUndefined(label)) {\n            label.classList.add('e-label-top');\n            if (label.classList.contains('e-label-bottom')) {\n                label.classList.remove('e-label-bottom');\n            }\n        }\n    };\n    TextBox.prototype.resetValue = function (value) {\n        var prevOnChange = this.isProtectedOnChange;\n        this.isProtectedOnChange = true;\n        this.value = value;\n        if (value == null && this.textboxWrapper.container.classList.contains('e-valid-input') && !(this.floatLabelType === 'Always' && this.textboxWrapper.container.classList.contains('e-outline'))) {\n            this.textboxWrapper.container.classList.remove('e-valid-input');\n        }\n        this.isProtectedOnChange = prevOnChange;\n    };\n    TextBox.prototype.resetForm = function () {\n        if (this.isAngular) {\n            this.resetValue('');\n        }\n        else {\n            this.resetValue(this.initialValue);\n        }\n        if (!isNullOrUndefined(this.textboxWrapper)) {\n            var label = this.textboxWrapper.container.querySelector('.e-float-text');\n            if (!isNullOrUndefined(label) && this.floatLabelType !== 'Always') {\n                if ((isNullOrUndefined(this.initialValue) || this.initialValue === '')) {\n                    label.classList.add('e-label-bottom');\n                    label.classList.remove('e-label-top');\n                }\n                else if (this.initialValue !== '') {\n                    label.classList.add('e-label-top');\n                    label.classList.remove('e-label-bottom');\n                }\n            }\n        }\n    };\n    TextBox.prototype.focusHandler = function (args) {\n        var eventArgs = {\n            container: this.textboxWrapper.container,\n            event: args,\n            value: this.value\n        };\n        this.trigger('focus', eventArgs);\n    };\n    TextBox.prototype.focusOutHandler = function (args) {\n        if (!(this.previousValue === null && this.value === null && this.respectiveElement.value === '') &&\n            (this.previousValue !== this.value)) {\n            this.raiseChangeEvent(args, true);\n        }\n        var eventArgs = {\n            container: this.textboxWrapper.container,\n            event: args,\n            value: this.value\n        };\n        this.trigger('blur', eventArgs);\n    };\n    TextBox.prototype.keydownHandler = function (args) {\n        if ((args.keyCode === 13 || args.keyCode === 9) && !((this.previousValue === null || this.previousValue === '') && (this.value === null || this.value === '') && this.respectiveElement.value === '')) {\n            this.setProperties({ value: this.respectiveElement.value }, true);\n        }\n    };\n    TextBox.prototype.inputHandler = function (args) {\n        var textboxObj = null || this;\n        var eventArgs = {\n            event: args,\n            value: this.respectiveElement.value,\n            previousValue: this.inputPreviousValue,\n            container: this.textboxWrapper.container\n        };\n        this.inputPreviousValue = this.respectiveElement.value;\n        /* istanbul ignore next */\n        if (this.isAngular) {\n            textboxObj.localChange({ value: this.respectiveElement.value });\n            this.preventChange = true;\n        }\n        if (this.isVue) {\n            this.preventChange = true;\n        }\n        this.trigger('input', eventArgs);\n        args.stopPropagation();\n    };\n    TextBox.prototype.changeHandler = function (args) {\n        this.setProperties({ value: this.respectiveElement.value }, true);\n        if (this.previousValue !== this.value) {\n            this.raiseChangeEvent(args, true);\n        }\n        args.stopPropagation();\n    };\n    TextBox.prototype.raiseChangeEvent = function (event, interaction) {\n        var eventArgs = {\n            event: event,\n            value: this.value,\n            previousValue: this.previousValue,\n            container: this.textboxWrapper.container,\n            isInteraction: interaction ? interaction : false,\n            isInteracted: interaction ? interaction : false\n        };\n        this.preventChange = false;\n        this.trigger('change', eventArgs);\n        this.previousValue = this.value;\n        //EJ2CORE-738:For this task we update the textarea value to the input when input tag with multiline is present\n        if (this.element.tagName === 'INPUT' && this.multiline && Browser.info.name === 'mozilla') {\n            this.element.value = this.respectiveElement.value;\n        }\n    };\n    TextBox.prototype.bindClearEvent = function () {\n        if (this.showClearButton) {\n            if (this.enabled) {\n                EventHandler.add(this.textboxWrapper.clearButton, 'mousedown touchstart', this.resetInputHandler, this);\n            }\n            else {\n                EventHandler.remove(this.textboxWrapper.clearButton, 'mousedown touchstart', this.resetInputHandler);\n            }\n        }\n    };\n    TextBox.prototype.resetInputHandler = function (event) {\n        event.preventDefault();\n        if (!(this.textboxWrapper.clearButton.classList.contains(HIDE_CLEAR)) || this.textboxWrapper.container.classList.contains('e-static-clear')) {\n            Input.setValue('', this.respectiveElement, this.floatLabelType, this.showClearButton);\n            if (this.isHiddenInput) {\n                this.element.value = this.respectiveElement.value;\n            }\n            this.setProperties({ value: this.respectiveElement.value }, true);\n            var eventArgs = {\n                event: event,\n                value: this.respectiveElement.value,\n                previousValue: this.inputPreviousValue,\n                container: this.textboxWrapper.container\n            };\n            this.trigger('input', eventArgs);\n            this.inputPreviousValue = this.respectiveElement.value;\n            this.raiseChangeEvent(event, true);\n            if (closest(this.element, 'form')) {\n                var element = this.element;\n                var keyupEvent = document.createEvent('KeyboardEvent');\n                keyupEvent.initEvent('keyup', false, true);\n                element.dispatchEvent(keyupEvent);\n            }\n        }\n    };\n    TextBox.prototype.unWireEvents = function () {\n        EventHandler.remove(this.respectiveElement, 'focus', this.focusHandler);\n        EventHandler.remove(this.respectiveElement, 'blur', this.focusOutHandler);\n        EventHandler.remove(this.respectiveElement, 'keydown', this.keydownHandler);\n        EventHandler.remove(this.respectiveElement, 'input', this.inputHandler);\n        EventHandler.remove(this.respectiveElement, 'change', this.changeHandler);\n        if (this.isForm) {\n            EventHandler.remove(this.formElement, 'reset', this.resetForm);\n        }\n        if (!isNullOrUndefined(this.textboxWrapper.container.querySelector('.e-float-text')) && this.floatLabelType === 'Auto'\n            && this.textboxWrapper.container.classList.contains('e-outline') &&\n            this.textboxWrapper.container.classList.contains('e-autofill')) {\n            EventHandler.remove((this.textboxWrapper.container.querySelector('.e-float-text')), 'animationstart', this.animationHandler);\n        }\n    };\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers.\n     * Also, it maintains the initial TextBox element from the DOM.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TextBox.prototype.destroy = function () {\n        this.unWireEvents();\n        if (this.showClearButton) {\n            this.clearButton = document.getElementsByClassName('e-clear-icon')[0];\n        }\n        if (this.element.tagName === 'INPUT' && this.multiline) {\n            detach(this.textboxWrapper.container.getElementsByTagName('textarea')[0]);\n            this.respectiveElement = this.element;\n            this.element.removeAttribute('type');\n        }\n        this.respectiveElement.value = this.respectiveElement.defaultValue;\n        this.respectiveElement.classList.remove('e-input');\n        this.removeAttributes(['aria-disabled', 'aria-readonly', 'aria-labelledby']);\n        if (!isNullOrUndefined(this.textboxWrapper)) {\n            this.textboxWrapper.container.insertAdjacentElement('afterend', this.respectiveElement);\n            detach(this.textboxWrapper.container);\n        }\n        this.textboxWrapper = null;\n        Input.destroy({\n            element: this.respectiveElement,\n            floatLabelType: this.floatLabelType,\n            properties: this.properties\n        }, this.clearButton);\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Adding the icons to the TextBox component.\n     *\n     * @param { string } position - Specify the icon placement on the TextBox. Possible values are append and prepend.\n     * @param { string | string[] } icons - Icon classes which are need to add to the span element which is going to created.\n     * Span element acts as icon or button element for TextBox.\n     * @returns {void}\n     */\n    TextBox.prototype.addIcon = function (position, icons) {\n        Input.addIcon(position, icons, this.textboxWrapper.container, this.respectiveElement, this.createElement);\n    };\n    /**\n     * Gets the properties to be maintained in the persisted state.\n     *\n     * @returns {string} Returns the persisted data.\n     */\n    TextBox.prototype.getPersistData = function () {\n        var keyEntity = ['value'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Adding the multiple attributes as key-value pair to the TextBox element.\n     *\n     * @param {string} attributes - Specifies the attributes to be add to TextBox element.\n     * @returns {void}\n     */\n    TextBox.prototype.addAttributes = function (attributes) {\n        for (var _i = 0, _a = Object.keys(attributes); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (key === 'disabled') {\n                this.setProperties({ enabled: false }, true);\n                Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n            }\n            else if (key === 'readonly') {\n                this.setProperties({ readonly: true }, true);\n                Input.setReadonly(this.readonly, this.respectiveElement);\n            }\n            else if (key === 'class') {\n                this.respectiveElement.classList.add(attributes[\"\" + key]);\n            }\n            else if (key === 'placeholder') {\n                this.setProperties({ placeholder: attributes[\"\" + key] }, true);\n                Input.setPlaceholder(this.placeholder, this.respectiveElement);\n            }\n            else if (key === 'rows' && this.respectiveElement.tagName === 'TEXTAREA') {\n                this.respectiveElement.setAttribute(key, attributes[\"\" + key]);\n            }\n            else {\n                this.respectiveElement.setAttribute(key, attributes[\"\" + key]);\n            }\n        }\n    };\n    /**\n     * Removing the multiple attributes as key-value pair to the TextBox element.\n     *\n     * @param { string[] } attributes - Specifies the attributes name to be removed from TextBox element.\n     * @returns {void}\n     */\n    TextBox.prototype.removeAttributes = function (attributes) {\n        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n            var key = attributes_1[_i];\n            if (key === 'disabled') {\n                this.setProperties({ enabled: true }, true);\n                Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n            }\n            else if (key === 'readonly') {\n                this.setProperties({ readonly: false }, true);\n                Input.setReadonly(this.readonly, this.respectiveElement);\n            }\n            else if (key === 'placeholder') {\n                this.setProperties({ placeholder: null }, true);\n                Input.setPlaceholder(this.placeholder, this.respectiveElement);\n            }\n            else {\n                this.respectiveElement.removeAttribute(key);\n            }\n        }\n    };\n    /**\n     * Sets the focus to widget for interaction.\n     *\n     * @returns {void}\n     */\n    TextBox.prototype.focusIn = function () {\n        if (document.activeElement !== this.respectiveElement && this.enabled) {\n            this.respectiveElement.focus();\n            if (this.textboxWrapper.container.classList.contains('e-input-group')\n                || this.textboxWrapper.container.classList.contains('e-outline')\n                || this.textboxWrapper.container.classList.contains('e-filled')) {\n                addClass([this.textboxWrapper.container], [TEXTBOX_FOCUS]);\n            }\n        }\n    };\n    /**\n     * Remove the focus from widget, if the widget is in focus state.\n     *\n     * @returns {void}\n     */\n    TextBox.prototype.focusOut = function () {\n        if (document.activeElement === this.respectiveElement && this.enabled) {\n            this.respectiveElement.blur();\n            if (this.textboxWrapper.container.classList.contains('e-input-group')\n                || this.textboxWrapper.container.classList.contains('e-outline')\n                || this.textboxWrapper.container.classList.contains('e-filled')) {\n                removeClass([this.textboxWrapper.container], [TEXTBOX_FOCUS]);\n            }\n        }\n    };\n    __decorate([\n        Property('text')\n    ], TextBox.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], TextBox.prototype, \"readonly\", void 0);\n    __decorate([\n        Property(null)\n    ], TextBox.prototype, \"value\", void 0);\n    __decorate([\n        Property('Never')\n    ], TextBox.prototype, \"floatLabelType\", void 0);\n    __decorate([\n        Property('')\n    ], TextBox.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(null)\n    ], TextBox.prototype, \"placeholder\", void 0);\n    __decorate([\n        Property('on')\n    ], TextBox.prototype, \"autocomplete\", void 0);\n    __decorate([\n        Property({})\n    ], TextBox.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property(false)\n    ], TextBox.prototype, \"multiline\", void 0);\n    __decorate([\n        Property(true)\n    ], TextBox.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(false)\n    ], TextBox.prototype, \"showClearButton\", void 0);\n    __decorate([\n        Property(false)\n    ], TextBox.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Property(null)\n    ], TextBox.prototype, \"width\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"blur\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"focus\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"input\", void 0);\n    TextBox = __decorate([\n        NotifyPropertyChanges\n    ], TextBox);\n    return TextBox;\n}(Component));\nexport { TextBox };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}